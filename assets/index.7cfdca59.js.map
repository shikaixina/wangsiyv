{"version":3,"mappings":"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","names":["relList","document","createElement","supports","link","querySelectorAll","processPreload","mutations","mutation","type","addedNodes","node","tagName","rel","observe","childList","subtree","ep","script","fetchOpts","integrity","referrerpolicy","referrerPolicy","crossorigin","credentials","getFetchOpts","fetch","href","p","win","lib","tid","doc","docEl","documentElement","metaEl","querySelector","flexibleEl","dpr","scale","flexible","match","getAttribute","content","maximumDpr","initialDpr","parseFloat","toFixed","appVersion","isIPhone","navigator","devicePixelRatio","setAttribute","firstElementChild","appendChild","wrap","innerHTML","refreshRem","getBoundingClientRect","width","rem","fontSize","clearTimeout","e","persisted","readyState","body","style","d","val","this","window","React","require","_assign","REACT_ELEMENT_TYPE","REACT_PORTAL_TYPE","exports","REACT_STRICT_MODE_TYPE","REACT_PROFILER_TYPE","REACT_PROVIDER_TYPE","REACT_CONTEXT_TYPE","REACT_FORWARD_REF_TYPE","REACT_SUSPENSE_TYPE","REACT_SUSPENSE_LIST_TYPE","REACT_MEMO_TYPE","REACT_LAZY_TYPE","REACT_BLOCK_TYPE","REACT_SERVER_BLOCK_TYPE","REACT_FUNDAMENTAL_TYPE","REACT_DEBUG_TRACING_MODE_TYPE","REACT_LEGACY_HIDDEN_TYPE","Symbol","for","symbolFor","MAYBE_ITERATOR_SYMBOL","iterator","ReactSharedInternals","__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED","error","format","_len2","arguments","length","args","Array","_key2","printWarning","level","stack","ReactDebugCurrentFrame","getStackAddendum","concat","argsWithFormat","map","item","unshift","Function","prototype","apply","call","console","getContextName","displayName","getComponentName","tag","name","Fragment","$$typeof","_context","outerType","innerType","render","wrapperName","functionName","_render","lazyComponent","payload","_payload","init","_init","x","getWrappedName","prevLog","prevInfo","prevWarn","prevError","prevGroup","prevGroupCollapsed","prevGroupEnd","disabledDepth","disabledLog","__reactDisabledLog","prefix","ReactCurrentDispatcher","describeBuiltInComponentFrame","source","ownerFn","undefined","Error","trim","componentFrameCache","reentry","PossiblyWeakMap","WeakMap","Map","describeNativeComponentFrame","fn","construct","frame","control","get","previousDispatcher","previousPrepareStackTrace","prepareStackTrace","current","log","info","warn","group","groupCollapsed","groupEnd","props","configurable","enumerable","value","writable","Object","defineProperties","Fake","defineProperty","set","Reflect","sample","sampleLines","split","controlLines","s","c","_frame","replace","syntheticFrame","describeFunctionComponentFrame","describeUnknownElementTypeFrameInDEV","isReactComponent","loggedTypeFailures","setCurrentlyValidatingElement","element","owner","_owner","_source","setExtraStackFrame","specialPropKeyWarningShown","specialPropRefWarningShown","didWarnAboutStringRefs","ReactCurrentOwner","hasOwnProperty","RESERVED_PROPS","key","ref","__self","__source","jsxDEV","config","maybeKey","self","propName","getter","getOwnPropertyDescriptor","isReactWarning","hasValidKey","hasValidRef","warnIfStringRefCannotBeAutoConverted","stateNode","componentName","defaultProps","defineKeyPropWarningGetter","warnAboutAccessingKey","defineRefPropWarningGetter","warnAboutAccessingRef","ReactElement","_store","freeze","propTypesMisspellWarningShown","ReactCurrentOwner$1","ReactDebugCurrentFrame$1","setCurrentlyValidatingElement$1","isValidElement","object","getDeclarationErrorAddendum","ownerHasKeyUseWarning","validateExplicitKey","parentType","validated","currentComponentErrorInfo","parentName","getCurrentComponentErrorInfo","childOwner","validateChildKeys","isArray","i","child","iteratorFn","maybeIterable","maybeIterator","getIteratorFn","entries","step","next","done","validatePropTypes","propTypes","typeSpecs","values","location","has","bind","typeSpecName","error$1","err","ex","message","checkPropTypes","PropTypes","getDefaultProps","isReactClassApproved","jsxWithValidation","isStaticChildren","validType","isValidElementType","keys","sourceInfo","typeString","fileName","lineNumber","getSourceInfoErrorAddendum","children","fragment","validateFragmentProps","jsx","jsxWithValidationDynamic","jsxs","jsxWithValidationStatic","jsxRuntimeModule","require$$0","jsxRuntime.jsx","jsxRuntime.jsxs","jsxRuntime.Fragment","w","constructor","subs","setState","state","dispatch","forEach","r","subscribe","URL","createObjectURL","Blob","toString","revokeObjectURL","substr","lastIndexOf","O","globalModel","observer","store","k","M","o","t","B","n","_extends","assign","target","Action","ResultType","createPath","_ref","pathname","search","hash","charAt","parsePath","path","parsedPath","indexOf","hashIndex","searchIndex","matchRoutes","routes","locationArg","basename","stripBasename","flattenRoutes","branches","a","b","score","slice","every","compareIndexes","routesMeta","meta","childrenIndex","rankRouteBranches","matches","parentsMeta","parentPath","route","index","relativePath","caseSensitive","startsWith","invariant","joinPaths","push","computeScore","paramRe","isSplat","initialScore","segments","some","filter","reduce","segment","test","matchRouteBranch","branch","matchedParams","matchedPathname","end","remainingPathname","matchPath","params","pathnameBase","normalizePathname","pattern","matcher","paramNames","warning","endsWith","regexpSource","_","paramName","RegExp","compilePath","captureGroups","memo","splatValue","decodeURIComponent","warning$1","safelyDecodeURIComponent","toLowerCase","nextChar","startIndex","cond","getInvalidPathError","char","field","dest","JSON","stringify","resolveTo","toArg","routePathnames","locationPathname","isPathRelative","to","includes","from","isEmptyPath","toPathname","toSegments","shift","routePathnameIndex","join","fromPathname","pop","resolvePathname","normalizeSearch","normalizeHash","resolvePath","hasExplicitTrailingSlash","hasCurrentTrailingSlash","paths","is","y","useState","useEffect","useLayoutEffect","useDebugValue","didWarnOld18Alpha","didWarnUncachedGetSnapshot","checkIfSnapshotChanged","inst","latestGetSnapshot","getSnapshot","prevValue","nextValue","useSyncExternalStore","DataStaticRouterContext","React.createContext","DataRouterContext","DataRouterStateContext","NavigationContext","LocationContext","RouteContext","outlet","RouteErrorContext","useInRouterContext","React.useContext","useLocation","getPathContributingMatches","useNavigate","routePathnamesJson","activeRef","React.useRef","React.useEffect","React.useCallback","options","go","parse","relative","OutletContext","useResolvedPath","_temp2","React.useMemo","useRoutes","dataRouterStateContext","parentMatches","routeMatch","parentParams","parentPathname","parentPathnameBase","parentRoute","alreadyWarned","locationFromContext","parsedLocationArg","_parsedLocationArg$pa","dataRouterState","errors","renderedMatches","errorIndex","findIndex","m","id","Math","min","reduceRight","errorElement","React.createElement","DefaultErrorElement","getChildren","react","RenderedRoute","routeContext","RenderErrorBoundary","component","_renderMatches","Provider","navigationType","Pop","hookName","getDataRouterConsoleError","useDataRouterState","DataRouterStateHook","UseRouteError","thisRoute","_state$errors","useRouteError","status","statusText","data","lightgrey","preStyles","padding","backgroundColor","codeStyles","React.Fragment","fontStyle","React.Component","super","static","componentDidCatch","errorInfo","dataStaticRouterContext","DataRouterHook","Outlet","context","useOutlet","Route","_props","Router","_ref4","basenameProp","locationProp","staticProp","navigationContext","trailingPathname","Routes","_ref5","dataRouterContext","router","createRoutesFromChildren","AwaitRenderStatus","React.Children","React.isValidElement","treePath","loader","action","hasErrorBoundary","shouldRevalidate","handle","_objectWithoutPropertiesLoose","excluded","sourceKeys","Promise","defaultMethod","defaultEncType","isHtmlElement","getFormSubmissionInfo","defaultAction","encType","formData","submissionTrigger","method","FormData","append","isButtonElement","isInputElement","form","URLSearchParams","protocol","host","url","_excluded","_excluded2","_excluded3","HistoryRouter","_ref3","history","React.useState","listen","Link","React.forwardRef","onClick","reloadDocument","preventScrollReset","rest","_temp","joinedPathname","createHref","useHref","internalOnClick","replaceProp","navigate","event","button","metaKey","altKey","ctrlKey","shiftKey","isModifiedEvent","shouldProcessLinkClick","preventDefault","useLinkClickHandler","defaultPrevented","className","ariaCurrentProp","classNameProp","styleProp","useMatch","routerState","UNSAFE_DataRouterStateContext","nextLocation","navigation","nextPath","isPending","isActive","ariaCurrent","Boolean","Form","FormImpl","_ref6","forwardedRef","onSubmit","fetcherKey","routeId","submit","ctx","UNSAFE_DataRouterContext","useDataRouterContext","UseSubmitImpl","useFormAction","opts","formMethod","formEncType","useSubmitImpl","formAction","nativeEvent","submitter","currentTarget","UNSAFE_NavigationContext","UNSAFE_RouteContext","delete","readOnly","obj","promptBeforeUnload","returnValue","createEvents","handlers","handler","arg","_options$window","defaultView","globalHistory","getIndexAndLocation","_window$location","idx","usr","blockedPopTx","addEventListener","blockers","nextAction","_getIndexAndLocation","nextIndex","delta","retry","applyTx","_getIndexAndLocation2","listeners","_ref$pathname","_ref$search","_ref$hash","random","_getIndexAndLocation3","replaceState","Push","getNextLocation","allowTx","getHistoryStateAndUrl","historyState","_getHistoryStateAndUr","Replace","_getHistoryStateAndUr2","back","forward","listener","block","blocker","removeEventListener","createBrowserHistory","seen","__vitePreload","baseModule","deps","all","dep","cssSelector","isCss","as","crossOrigin","res","rej","then","Search","lazy","List","Home","Detail","Index","Other","Other1","NoFound","TabBarList","icon","sceneMode","title","routes$1","tabBars","useRef","routers","find","v","setstate","OnTabClick","useCallback","isTabBar","styles","jsxDevRuntime","_inheritsLoose","subClass","superClass","create","setPrototypeOf","hasSymbol","REACT_FRAGMENT_TYPE","REACT_ASYNC_MODE_TYPE","REACT_CONCURRENT_MODE_TYPE","REACT_RESPONDER_TYPE","REACT_SCOPE_TYPE","typeOf","AsyncMode","ConcurrentMode","ContextConsumer","ContextProvider","Element","ForwardRef","Lazy","Memo","Portal","Profiler","StrictMode","Suspense","hasWarnedAboutDeprecatedIsAsyncMode","isConcurrentMode","reactIs_development","reactIsModule","require$$1","getStack","text","resetWarningCache","checkPropTypes_1","ReactIs","ReactPropTypesSecret","require$$3","require$$4","emptyFunctionThatReturnsNull","propTypesModule","throwOnDirectAccess","ITERATOR_SYMBOL","ANONYMOUS","ReactPropTypes","array","createPrimitiveTypeChecker","bigint","bool","func","number","string","symbol","any","createChainableTypeChecker","arrayOf","typeChecker","propFullName","PropTypeError","propValue","getPropType","elementType","instanceOf","expectedClass","expectedClassName","isNode","objectOf","propType","oneOf","expectedValues","validate","valuesString","getPreciseType","String","oneOfType","arrayOfTypeCheckers","checker","getPostfixForTypeWarning","expectedTypes","checkerResult","expectedType","shape","shapeTypes","invalidValidatorError","exact","allKeys","manualPropTypeCallCache","manualPropTypeWarningCount","checkType","isRequired","secret","cacheKey","chainedCheckType","entry","isSymbol","Date","isElement","replaceClassName","origClass","classToRemove","timeoutsShape","enter","exit","appear","classNamesShape","active","enterDone","enterActive","exitDone","exitActive","TransitionGroupContext","createContext","forceReflow","scrollTop","Transition","_React$Component","_this","initialStatus","isMounting","appearStatus","in","unmountOnExit","mountOnEnter","nextCallback","getDerivedStateFromProps","prevState","_proto","prevProps","nextStatus","cancelNextCallback","timeout","updateStatus","mounting","nodeRef","ReactDOM","findDOMNode","performEnter","performExit","_this2","appearing","_ref2","maybeNode","maybeAppearing","timeouts","getTimeouts","enterTimeout","safeSetState","onEntered","onEnter","onEntering","_this3","onExit","onExiting","onExited","cancel","nextState","callback","setNextCallback","_this4","onTransitionEnd","doesNotHaveTimeoutOrListener","addEndListener","maybeNextCallback","setTimeout","_this$props","childProps","cloneElement","Children","only","Component","noop","contextType","ownerDocument","pt","_len","_key","UNMOUNTED","EXITED","ENTERING","ENTERED","EXITING","removeClass","classes","removeOneClass","classList","remove","baseVal","CSSTransition","appliedClasses","resolveArguments","_this$resolveArgument","addClass","_this$resolveArgument2","_this$resolveArgument3","classNames","isStringClassNames","baseClassName","activeClassName","doneClassName","phase","getClassNames","addOneClass","add","contains","hasClass","_addClass","removeClasses","_this$appliedClasses$","base","getChildMapping","mapFn","result","mapper","getProp","prop","getNextChildMapping","nextProps","prevChildMapping","prev","getValueForKey","nextKeysPending","pendingKeys","prevKey","childMapping","nextKey","pendingNextKey","mergeChildMappings","nextChildMapping","hasPrev","hasNext","prevChild","isLeaving","TransitionGroup","handleExited","_assertThisInitialized","contextValue","firstRender","mounted","currentChildMapping","childFactory","React$1","primaryKey","other","height","isPage","treeToList","list","parents","adtaList","isHave","parent","setWindowHeight","windowWidth","innerWidth","windowHeight","innerHeight","compatMode","clientHeight","setProperty","useSwitch","oldMode","routeSceneMode","activeIndex","oldIndex","pre","_a","mode","generateRoute","isStart","routeList","stopPropagation","RouteRender","routesView","useMemo","oldTitle","AnimatedSwitch","fallback","App","_Fragment","_jsxDEV","TabBarView","onresize","GlobalProvider","getElementById"],"sources":["../../vite/modulepreload-polyfill","../../node_modules/lib-flexible/flexible.js","../../node_modules/react/cjs/react-jsx-runtime.development.js","../../node_modules/react/jsx-runtime.js","../../react/jsx-runtime","../../node_modules/rmox/lib/esm/index.js","../../node_modules/@remix-run/router/dist/router.js","../../node_modules/react-router/dist/index.js","../../node_modules/react-router-dom/dist/index.js","../../node_modules/history/index.js","../../src/utils/history.ts","../../vite/preload-helper","../../src/routers/index.tsx","../../src/layout/TabBarView/index.tsx","../../node_modules/@babel/runtime/helpers/esm/inheritsLoose.js","../../node_modules/prop-types/node_modules/react-is/cjs/react-is.development.js","../../node_modules/prop-types/node_modules/react-is/index.js","../../node_modules/prop-types/lib/ReactPropTypesSecret.js","../../node_modules/prop-types/checkPropTypes.js","../../node_modules/prop-types/lib/has.js","../../node_modules/prop-types/factoryWithTypeCheckers.js","../../node_modules/prop-types/index.js","../../node_modules/dom-helpers/esm/removeClass.js","../../node_modules/react-transition-group/esm/config.js","../../node_modules/react-transition-group/esm/utils/PropTypes.js","../../node_modules/react-transition-group/esm/TransitionGroupContext.js","../../node_modules/react-transition-group/esm/utils/reflow.js","../../node_modules/react-transition-group/esm/Transition.js","../../node_modules/react-transition-group/esm/CSSTransition.js","../../node_modules/dom-helpers/esm/addClass.js","../../node_modules/dom-helpers/esm/hasClass.js","../../node_modules/react-transition-group/esm/utils/ChildMapping.js","../../node_modules/react-transition-group/esm/TransitionGroup.js","../../src/components/AnimatedSwitch/index.tsx","../../src/components/LoadingView/index.tsx","../../src/hooks/useTitle.tsx","../../src/utils/index.ts","../../src/routers/useSwitch.ts","../../src/routers/RouteRender.tsx","../../src/App.tsx","../../src/index.tsx"],"sourcesContent":["const p = function polyfill() {\n    const relList = document.createElement('link').relList;\n    if (relList && relList.supports && relList.supports('modulepreload')) {\n        return;\n    }\n    for (const link of document.querySelectorAll('link[rel=\"modulepreload\"]')) {\n        processPreload(link);\n    }\n    new MutationObserver((mutations) => {\n        for (const mutation of mutations) {\n            if (mutation.type !== 'childList') {\n                continue;\n            }\n            for (const node of mutation.addedNodes) {\n                if (node.tagName === 'LINK' && node.rel === 'modulepreload')\n                    processPreload(node);\n            }\n        }\n    }).observe(document, { childList: true, subtree: true });\n    function getFetchOpts(script) {\n        const fetchOpts = {};\n        if (script.integrity)\n            fetchOpts.integrity = script.integrity;\n        if (script.referrerpolicy)\n            fetchOpts.referrerPolicy = script.referrerpolicy;\n        if (script.crossorigin === 'use-credentials')\n            fetchOpts.credentials = 'include';\n        else if (script.crossorigin === 'anonymous')\n            fetchOpts.credentials = 'omit';\n        else\n            fetchOpts.credentials = 'same-origin';\n        return fetchOpts;\n    }\n    function processPreload(link) {\n        if (link.ep)\n            // ep marker = processed\n            return;\n        link.ep = true;\n        // prepopulate the load record\n        const fetchOpts = getFetchOpts(link);\n        fetch(link.href, fetchOpts);\n    }\n};__VITE_IS_MODERN__&&p();","\n;(function(win, lib) {\n    var doc = win.document;\n    var docEl = doc.documentElement;\n    var metaEl = doc.querySelector('meta[name=\"viewport\"]');\n    var flexibleEl = doc.querySelector('meta[name=\"flexible\"]');\n    var dpr = 0;\n    var scale = 0;\n    var tid;\n    var flexible = lib.flexible || (lib.flexible = {});\n\n    if (metaEl) {\n        console.warn('将根据已有的meta标签来设置缩放比例');\n        var match = metaEl.getAttribute('content').match(/initial\\-scale=([\\d\\.]+)/);\n        if (match) {\n            scale = parseFloat(match[1]);\n            dpr = parseInt(1 / scale);\n        }\n    } else if (flexibleEl) {\n        var content = flexibleEl.getAttribute('content');\n        if (content) {\n            var initialDpr = content.match(/initial\\-dpr=([\\d\\.]+)/);\n            var maximumDpr = content.match(/maximum\\-dpr=([\\d\\.]+)/);\n            if (initialDpr) {\n                dpr = parseFloat(initialDpr[1]);\n                scale = parseFloat((1 / dpr).toFixed(2));\n            }\n            if (maximumDpr) {\n                dpr = parseFloat(maximumDpr[1]);\n                scale = parseFloat((1 / dpr).toFixed(2));\n            }\n        }\n    }\n\n    if (!dpr && !scale) {\n        var isAndroid = win.navigator.appVersion.match(/android/gi);\n        var isIPhone = win.navigator.appVersion.match(/iphone/gi);\n        var devicePixelRatio = win.devicePixelRatio;\n        if (isIPhone) {\n            // iOS下，对于2和3的屏，用2倍的方案，其余的用1倍方案\n            if (devicePixelRatio >= 3 && (!dpr || dpr >= 3)) {\n                dpr = 3;\n            } else if (devicePixelRatio >= 2 && (!dpr || dpr >= 2)){\n                dpr = 2;\n            } else {\n                dpr = 1;\n            }\n        } else {\n            // 其他设备下，仍旧使用1倍的方案\n            dpr = 1;\n        }\n        scale = 1 / dpr;\n    }\n\n    docEl.setAttribute('data-dpr', dpr);\n    if (!metaEl) {\n        metaEl = doc.createElement('meta');\n        metaEl.setAttribute('name', 'viewport');\n        metaEl.setAttribute('content', 'initial-scale=' + scale + ', maximum-scale=' + scale + ', minimum-scale=' + scale + ', user-scalable=no');\n        if (docEl.firstElementChild) {\n            docEl.firstElementChild.appendChild(metaEl);\n        } else {\n            var wrap = doc.createElement('div');\n            wrap.appendChild(metaEl);\n            doc.write(wrap.innerHTML);\n        }\n    }\n\n    function refreshRem(){\n        var width = docEl.getBoundingClientRect().width;\n        if (width / dpr > 540) {\n            width = 540 * dpr;\n        }\n        var rem = width / 10;\n        docEl.style.fontSize = rem + 'px';\n        flexible.rem = win.rem = rem;\n    }\n\n    win.addEventListener('resize', function() {\n        clearTimeout(tid);\n        tid = setTimeout(refreshRem, 300);\n    }, false);\n    win.addEventListener('pageshow', function(e) {\n        if (e.persisted) {\n            clearTimeout(tid);\n            tid = setTimeout(refreshRem, 300);\n        }\n    }, false);\n\n    if (doc.readyState === 'complete') {\n        doc.body.style.fontSize = 12 * dpr + 'px';\n    } else {\n        doc.addEventListener('DOMContentLoaded', function(e) {\n            doc.body.style.fontSize = 12 * dpr + 'px';\n        }, false);\n    }\n\n\n    refreshRem();\n\n    flexible.dpr = win.dpr = dpr;\n    flexible.refreshRem = refreshRem;\n    flexible.rem2px = function(d) {\n        var val = parseFloat(d) * this.rem;\n        if (typeof d === 'string' && d.match(/rem$/)) {\n            val += 'px';\n        }\n        return val;\n    }\n    flexible.px2rem = function(d) {\n        var val = parseFloat(d) / this.rem;\n        if (typeof d === 'string' && d.match(/px$/)) {\n            val += 'rem';\n        }\n        return val;\n    }\n\n})(window, window['lib'] || (window['lib'] = {}));\n","/** @license React v17.0.2\n * react-jsx-runtime.development.js\n *\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n'use strict';\n\nif (process.env.NODE_ENV !== \"production\") {\n  (function() {\n'use strict';\n\nvar React = require('react');\nvar _assign = require('object-assign');\n\n// ATTENTION\n// When adding new symbols to this file,\n// Please consider also adding to 'react-devtools-shared/src/backend/ReactSymbols'\n// The Symbol used to tag the ReactElement-like types. If there is no native Symbol\n// nor polyfill, then a plain number is used for performance.\nvar REACT_ELEMENT_TYPE = 0xeac7;\nvar REACT_PORTAL_TYPE = 0xeaca;\nexports.Fragment = 0xeacb;\nvar REACT_STRICT_MODE_TYPE = 0xeacc;\nvar REACT_PROFILER_TYPE = 0xead2;\nvar REACT_PROVIDER_TYPE = 0xeacd;\nvar REACT_CONTEXT_TYPE = 0xeace;\nvar REACT_FORWARD_REF_TYPE = 0xead0;\nvar REACT_SUSPENSE_TYPE = 0xead1;\nvar REACT_SUSPENSE_LIST_TYPE = 0xead8;\nvar REACT_MEMO_TYPE = 0xead3;\nvar REACT_LAZY_TYPE = 0xead4;\nvar REACT_BLOCK_TYPE = 0xead9;\nvar REACT_SERVER_BLOCK_TYPE = 0xeada;\nvar REACT_FUNDAMENTAL_TYPE = 0xead5;\nvar REACT_SCOPE_TYPE = 0xead7;\nvar REACT_OPAQUE_ID_TYPE = 0xeae0;\nvar REACT_DEBUG_TRACING_MODE_TYPE = 0xeae1;\nvar REACT_OFFSCREEN_TYPE = 0xeae2;\nvar REACT_LEGACY_HIDDEN_TYPE = 0xeae3;\n\nif (typeof Symbol === 'function' && Symbol.for) {\n  var symbolFor = Symbol.for;\n  REACT_ELEMENT_TYPE = symbolFor('react.element');\n  REACT_PORTAL_TYPE = symbolFor('react.portal');\n  exports.Fragment = symbolFor('react.fragment');\n  REACT_STRICT_MODE_TYPE = symbolFor('react.strict_mode');\n  REACT_PROFILER_TYPE = symbolFor('react.profiler');\n  REACT_PROVIDER_TYPE = symbolFor('react.provider');\n  REACT_CONTEXT_TYPE = symbolFor('react.context');\n  REACT_FORWARD_REF_TYPE = symbolFor('react.forward_ref');\n  REACT_SUSPENSE_TYPE = symbolFor('react.suspense');\n  REACT_SUSPENSE_LIST_TYPE = symbolFor('react.suspense_list');\n  REACT_MEMO_TYPE = symbolFor('react.memo');\n  REACT_LAZY_TYPE = symbolFor('react.lazy');\n  REACT_BLOCK_TYPE = symbolFor('react.block');\n  REACT_SERVER_BLOCK_TYPE = symbolFor('react.server.block');\n  REACT_FUNDAMENTAL_TYPE = symbolFor('react.fundamental');\n  REACT_SCOPE_TYPE = symbolFor('react.scope');\n  REACT_OPAQUE_ID_TYPE = symbolFor('react.opaque.id');\n  REACT_DEBUG_TRACING_MODE_TYPE = symbolFor('react.debug_trace_mode');\n  REACT_OFFSCREEN_TYPE = symbolFor('react.offscreen');\n  REACT_LEGACY_HIDDEN_TYPE = symbolFor('react.legacy_hidden');\n}\n\nvar MAYBE_ITERATOR_SYMBOL = typeof Symbol === 'function' && Symbol.iterator;\nvar FAUX_ITERATOR_SYMBOL = '@@iterator';\nfunction getIteratorFn(maybeIterable) {\n  if (maybeIterable === null || typeof maybeIterable !== 'object') {\n    return null;\n  }\n\n  var maybeIterator = MAYBE_ITERATOR_SYMBOL && maybeIterable[MAYBE_ITERATOR_SYMBOL] || maybeIterable[FAUX_ITERATOR_SYMBOL];\n\n  if (typeof maybeIterator === 'function') {\n    return maybeIterator;\n  }\n\n  return null;\n}\n\nvar ReactSharedInternals = React.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED;\n\nfunction error(format) {\n  {\n    for (var _len2 = arguments.length, args = new Array(_len2 > 1 ? _len2 - 1 : 0), _key2 = 1; _key2 < _len2; _key2++) {\n      args[_key2 - 1] = arguments[_key2];\n    }\n\n    printWarning('error', format, args);\n  }\n}\n\nfunction printWarning(level, format, args) {\n  // When changing this logic, you might want to also\n  // update consoleWithStackDev.www.js as well.\n  {\n    var ReactDebugCurrentFrame = ReactSharedInternals.ReactDebugCurrentFrame;\n    var stack = ReactDebugCurrentFrame.getStackAddendum();\n\n    if (stack !== '') {\n      format += '%s';\n      args = args.concat([stack]);\n    }\n\n    var argsWithFormat = args.map(function (item) {\n      return '' + item;\n    }); // Careful: RN currently depends on this prefix\n\n    argsWithFormat.unshift('Warning: ' + format); // We intentionally don't use spread (or .apply) directly because it\n    // breaks IE9: https://github.com/facebook/react/issues/13610\n    // eslint-disable-next-line react-internal/no-production-logging\n\n    Function.prototype.apply.call(console[level], console, argsWithFormat);\n  }\n}\n\n// Filter certain DOM attributes (e.g. src, href) if their values are empty strings.\n\nvar enableScopeAPI = false; // Experimental Create Event Handle API.\n\nfunction isValidElementType(type) {\n  if (typeof type === 'string' || typeof type === 'function') {\n    return true;\n  } // Note: typeof might be other than 'symbol' or 'number' (e.g. if it's a polyfill).\n\n\n  if (type === exports.Fragment || type === REACT_PROFILER_TYPE || type === REACT_DEBUG_TRACING_MODE_TYPE || type === REACT_STRICT_MODE_TYPE || type === REACT_SUSPENSE_TYPE || type === REACT_SUSPENSE_LIST_TYPE || type === REACT_LEGACY_HIDDEN_TYPE || enableScopeAPI ) {\n    return true;\n  }\n\n  if (typeof type === 'object' && type !== null) {\n    if (type.$$typeof === REACT_LAZY_TYPE || type.$$typeof === REACT_MEMO_TYPE || type.$$typeof === REACT_PROVIDER_TYPE || type.$$typeof === REACT_CONTEXT_TYPE || type.$$typeof === REACT_FORWARD_REF_TYPE || type.$$typeof === REACT_FUNDAMENTAL_TYPE || type.$$typeof === REACT_BLOCK_TYPE || type[0] === REACT_SERVER_BLOCK_TYPE) {\n      return true;\n    }\n  }\n\n  return false;\n}\n\nfunction getWrappedName(outerType, innerType, wrapperName) {\n  var functionName = innerType.displayName || innerType.name || '';\n  return outerType.displayName || (functionName !== '' ? wrapperName + \"(\" + functionName + \")\" : wrapperName);\n}\n\nfunction getContextName(type) {\n  return type.displayName || 'Context';\n}\n\nfunction getComponentName(type) {\n  if (type == null) {\n    // Host root, text node or just invalid type.\n    return null;\n  }\n\n  {\n    if (typeof type.tag === 'number') {\n      error('Received an unexpected object in getComponentName(). ' + 'This is likely a bug in React. Please file an issue.');\n    }\n  }\n\n  if (typeof type === 'function') {\n    return type.displayName || type.name || null;\n  }\n\n  if (typeof type === 'string') {\n    return type;\n  }\n\n  switch (type) {\n    case exports.Fragment:\n      return 'Fragment';\n\n    case REACT_PORTAL_TYPE:\n      return 'Portal';\n\n    case REACT_PROFILER_TYPE:\n      return 'Profiler';\n\n    case REACT_STRICT_MODE_TYPE:\n      return 'StrictMode';\n\n    case REACT_SUSPENSE_TYPE:\n      return 'Suspense';\n\n    case REACT_SUSPENSE_LIST_TYPE:\n      return 'SuspenseList';\n  }\n\n  if (typeof type === 'object') {\n    switch (type.$$typeof) {\n      case REACT_CONTEXT_TYPE:\n        var context = type;\n        return getContextName(context) + '.Consumer';\n\n      case REACT_PROVIDER_TYPE:\n        var provider = type;\n        return getContextName(provider._context) + '.Provider';\n\n      case REACT_FORWARD_REF_TYPE:\n        return getWrappedName(type, type.render, 'ForwardRef');\n\n      case REACT_MEMO_TYPE:\n        return getComponentName(type.type);\n\n      case REACT_BLOCK_TYPE:\n        return getComponentName(type._render);\n\n      case REACT_LAZY_TYPE:\n        {\n          var lazyComponent = type;\n          var payload = lazyComponent._payload;\n          var init = lazyComponent._init;\n\n          try {\n            return getComponentName(init(payload));\n          } catch (x) {\n            return null;\n          }\n        }\n    }\n  }\n\n  return null;\n}\n\n// Helpers to patch console.logs to avoid logging during side-effect free\n// replaying on render function. This currently only patches the object\n// lazily which won't cover if the log function was extracted eagerly.\n// We could also eagerly patch the method.\nvar disabledDepth = 0;\nvar prevLog;\nvar prevInfo;\nvar prevWarn;\nvar prevError;\nvar prevGroup;\nvar prevGroupCollapsed;\nvar prevGroupEnd;\n\nfunction disabledLog() {}\n\ndisabledLog.__reactDisabledLog = true;\nfunction disableLogs() {\n  {\n    if (disabledDepth === 0) {\n      /* eslint-disable react-internal/no-production-logging */\n      prevLog = console.log;\n      prevInfo = console.info;\n      prevWarn = console.warn;\n      prevError = console.error;\n      prevGroup = console.group;\n      prevGroupCollapsed = console.groupCollapsed;\n      prevGroupEnd = console.groupEnd; // https://github.com/facebook/react/issues/19099\n\n      var props = {\n        configurable: true,\n        enumerable: true,\n        value: disabledLog,\n        writable: true\n      }; // $FlowFixMe Flow thinks console is immutable.\n\n      Object.defineProperties(console, {\n        info: props,\n        log: props,\n        warn: props,\n        error: props,\n        group: props,\n        groupCollapsed: props,\n        groupEnd: props\n      });\n      /* eslint-enable react-internal/no-production-logging */\n    }\n\n    disabledDepth++;\n  }\n}\nfunction reenableLogs() {\n  {\n    disabledDepth--;\n\n    if (disabledDepth === 0) {\n      /* eslint-disable react-internal/no-production-logging */\n      var props = {\n        configurable: true,\n        enumerable: true,\n        writable: true\n      }; // $FlowFixMe Flow thinks console is immutable.\n\n      Object.defineProperties(console, {\n        log: _assign({}, props, {\n          value: prevLog\n        }),\n        info: _assign({}, props, {\n          value: prevInfo\n        }),\n        warn: _assign({}, props, {\n          value: prevWarn\n        }),\n        error: _assign({}, props, {\n          value: prevError\n        }),\n        group: _assign({}, props, {\n          value: prevGroup\n        }),\n        groupCollapsed: _assign({}, props, {\n          value: prevGroupCollapsed\n        }),\n        groupEnd: _assign({}, props, {\n          value: prevGroupEnd\n        })\n      });\n      /* eslint-enable react-internal/no-production-logging */\n    }\n\n    if (disabledDepth < 0) {\n      error('disabledDepth fell below zero. ' + 'This is a bug in React. Please file an issue.');\n    }\n  }\n}\n\nvar ReactCurrentDispatcher = ReactSharedInternals.ReactCurrentDispatcher;\nvar prefix;\nfunction describeBuiltInComponentFrame(name, source, ownerFn) {\n  {\n    if (prefix === undefined) {\n      // Extract the VM specific prefix used by each line.\n      try {\n        throw Error();\n      } catch (x) {\n        var match = x.stack.trim().match(/\\n( *(at )?)/);\n        prefix = match && match[1] || '';\n      }\n    } // We use the prefix to ensure our stacks line up with native stack frames.\n\n\n    return '\\n' + prefix + name;\n  }\n}\nvar reentry = false;\nvar componentFrameCache;\n\n{\n  var PossiblyWeakMap = typeof WeakMap === 'function' ? WeakMap : Map;\n  componentFrameCache = new PossiblyWeakMap();\n}\n\nfunction describeNativeComponentFrame(fn, construct) {\n  // If something asked for a stack inside a fake render, it should get ignored.\n  if (!fn || reentry) {\n    return '';\n  }\n\n  {\n    var frame = componentFrameCache.get(fn);\n\n    if (frame !== undefined) {\n      return frame;\n    }\n  }\n\n  var control;\n  reentry = true;\n  var previousPrepareStackTrace = Error.prepareStackTrace; // $FlowFixMe It does accept undefined.\n\n  Error.prepareStackTrace = undefined;\n  var previousDispatcher;\n\n  {\n    previousDispatcher = ReactCurrentDispatcher.current; // Set the dispatcher in DEV because this might be call in the render function\n    // for warnings.\n\n    ReactCurrentDispatcher.current = null;\n    disableLogs();\n  }\n\n  try {\n    // This should throw.\n    if (construct) {\n      // Something should be setting the props in the constructor.\n      var Fake = function () {\n        throw Error();\n      }; // $FlowFixMe\n\n\n      Object.defineProperty(Fake.prototype, 'props', {\n        set: function () {\n          // We use a throwing setter instead of frozen or non-writable props\n          // because that won't throw in a non-strict mode function.\n          throw Error();\n        }\n      });\n\n      if (typeof Reflect === 'object' && Reflect.construct) {\n        // We construct a different control for this case to include any extra\n        // frames added by the construct call.\n        try {\n          Reflect.construct(Fake, []);\n        } catch (x) {\n          control = x;\n        }\n\n        Reflect.construct(fn, [], Fake);\n      } else {\n        try {\n          Fake.call();\n        } catch (x) {\n          control = x;\n        }\n\n        fn.call(Fake.prototype);\n      }\n    } else {\n      try {\n        throw Error();\n      } catch (x) {\n        control = x;\n      }\n\n      fn();\n    }\n  } catch (sample) {\n    // This is inlined manually because closure doesn't do it for us.\n    if (sample && control && typeof sample.stack === 'string') {\n      // This extracts the first frame from the sample that isn't also in the control.\n      // Skipping one frame that we assume is the frame that calls the two.\n      var sampleLines = sample.stack.split('\\n');\n      var controlLines = control.stack.split('\\n');\n      var s = sampleLines.length - 1;\n      var c = controlLines.length - 1;\n\n      while (s >= 1 && c >= 0 && sampleLines[s] !== controlLines[c]) {\n        // We expect at least one stack frame to be shared.\n        // Typically this will be the root most one. However, stack frames may be\n        // cut off due to maximum stack limits. In this case, one maybe cut off\n        // earlier than the other. We assume that the sample is longer or the same\n        // and there for cut off earlier. So we should find the root most frame in\n        // the sample somewhere in the control.\n        c--;\n      }\n\n      for (; s >= 1 && c >= 0; s--, c--) {\n        // Next we find the first one that isn't the same which should be the\n        // frame that called our sample function and the control.\n        if (sampleLines[s] !== controlLines[c]) {\n          // In V8, the first line is describing the message but other VMs don't.\n          // If we're about to return the first line, and the control is also on the same\n          // line, that's a pretty good indicator that our sample threw at same line as\n          // the control. I.e. before we entered the sample frame. So we ignore this result.\n          // This can happen if you passed a class to function component, or non-function.\n          if (s !== 1 || c !== 1) {\n            do {\n              s--;\n              c--; // We may still have similar intermediate frames from the construct call.\n              // The next one that isn't the same should be our match though.\n\n              if (c < 0 || sampleLines[s] !== controlLines[c]) {\n                // V8 adds a \"new\" prefix for native classes. Let's remove it to make it prettier.\n                var _frame = '\\n' + sampleLines[s].replace(' at new ', ' at ');\n\n                {\n                  if (typeof fn === 'function') {\n                    componentFrameCache.set(fn, _frame);\n                  }\n                } // Return the line we found.\n\n\n                return _frame;\n              }\n            } while (s >= 1 && c >= 0);\n          }\n\n          break;\n        }\n      }\n    }\n  } finally {\n    reentry = false;\n\n    {\n      ReactCurrentDispatcher.current = previousDispatcher;\n      reenableLogs();\n    }\n\n    Error.prepareStackTrace = previousPrepareStackTrace;\n  } // Fallback to just using the name if we couldn't make it throw.\n\n\n  var name = fn ? fn.displayName || fn.name : '';\n  var syntheticFrame = name ? describeBuiltInComponentFrame(name) : '';\n\n  {\n    if (typeof fn === 'function') {\n      componentFrameCache.set(fn, syntheticFrame);\n    }\n  }\n\n  return syntheticFrame;\n}\nfunction describeFunctionComponentFrame(fn, source, ownerFn) {\n  {\n    return describeNativeComponentFrame(fn, false);\n  }\n}\n\nfunction shouldConstruct(Component) {\n  var prototype = Component.prototype;\n  return !!(prototype && prototype.isReactComponent);\n}\n\nfunction describeUnknownElementTypeFrameInDEV(type, source, ownerFn) {\n\n  if (type == null) {\n    return '';\n  }\n\n  if (typeof type === 'function') {\n    {\n      return describeNativeComponentFrame(type, shouldConstruct(type));\n    }\n  }\n\n  if (typeof type === 'string') {\n    return describeBuiltInComponentFrame(type);\n  }\n\n  switch (type) {\n    case REACT_SUSPENSE_TYPE:\n      return describeBuiltInComponentFrame('Suspense');\n\n    case REACT_SUSPENSE_LIST_TYPE:\n      return describeBuiltInComponentFrame('SuspenseList');\n  }\n\n  if (typeof type === 'object') {\n    switch (type.$$typeof) {\n      case REACT_FORWARD_REF_TYPE:\n        return describeFunctionComponentFrame(type.render);\n\n      case REACT_MEMO_TYPE:\n        // Memo may contain any component type so we recursively resolve it.\n        return describeUnknownElementTypeFrameInDEV(type.type, source, ownerFn);\n\n      case REACT_BLOCK_TYPE:\n        return describeFunctionComponentFrame(type._render);\n\n      case REACT_LAZY_TYPE:\n        {\n          var lazyComponent = type;\n          var payload = lazyComponent._payload;\n          var init = lazyComponent._init;\n\n          try {\n            // Lazy may contain any component type so we recursively resolve it.\n            return describeUnknownElementTypeFrameInDEV(init(payload), source, ownerFn);\n          } catch (x) {}\n        }\n    }\n  }\n\n  return '';\n}\n\nvar loggedTypeFailures = {};\nvar ReactDebugCurrentFrame = ReactSharedInternals.ReactDebugCurrentFrame;\n\nfunction setCurrentlyValidatingElement(element) {\n  {\n    if (element) {\n      var owner = element._owner;\n      var stack = describeUnknownElementTypeFrameInDEV(element.type, element._source, owner ? owner.type : null);\n      ReactDebugCurrentFrame.setExtraStackFrame(stack);\n    } else {\n      ReactDebugCurrentFrame.setExtraStackFrame(null);\n    }\n  }\n}\n\nfunction checkPropTypes(typeSpecs, values, location, componentName, element) {\n  {\n    // $FlowFixMe This is okay but Flow doesn't know it.\n    var has = Function.call.bind(Object.prototype.hasOwnProperty);\n\n    for (var typeSpecName in typeSpecs) {\n      if (has(typeSpecs, typeSpecName)) {\n        var error$1 = void 0; // Prop type validation may throw. In case they do, we don't want to\n        // fail the render phase where it didn't fail before. So we log it.\n        // After these have been cleaned up, we'll let them throw.\n\n        try {\n          // This is intentionally an invariant that gets caught. It's the same\n          // behavior as without this statement except with a better message.\n          if (typeof typeSpecs[typeSpecName] !== 'function') {\n            var err = Error((componentName || 'React class') + ': ' + location + ' type `' + typeSpecName + '` is invalid; ' + 'it must be a function, usually from the `prop-types` package, but received `' + typeof typeSpecs[typeSpecName] + '`.' + 'This often happens because of typos such as `PropTypes.function` instead of `PropTypes.func`.');\n            err.name = 'Invariant Violation';\n            throw err;\n          }\n\n          error$1 = typeSpecs[typeSpecName](values, typeSpecName, componentName, location, null, 'SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED');\n        } catch (ex) {\n          error$1 = ex;\n        }\n\n        if (error$1 && !(error$1 instanceof Error)) {\n          setCurrentlyValidatingElement(element);\n\n          error('%s: type specification of %s' + ' `%s` is invalid; the type checker ' + 'function must return `null` or an `Error` but returned a %s. ' + 'You may have forgotten to pass an argument to the type checker ' + 'creator (arrayOf, instanceOf, objectOf, oneOf, oneOfType, and ' + 'shape all require an argument).', componentName || 'React class', location, typeSpecName, typeof error$1);\n\n          setCurrentlyValidatingElement(null);\n        }\n\n        if (error$1 instanceof Error && !(error$1.message in loggedTypeFailures)) {\n          // Only monitor this failure once because there tends to be a lot of the\n          // same error.\n          loggedTypeFailures[error$1.message] = true;\n          setCurrentlyValidatingElement(element);\n\n          error('Failed %s type: %s', location, error$1.message);\n\n          setCurrentlyValidatingElement(null);\n        }\n      }\n    }\n  }\n}\n\nvar ReactCurrentOwner = ReactSharedInternals.ReactCurrentOwner;\nvar hasOwnProperty = Object.prototype.hasOwnProperty;\nvar RESERVED_PROPS = {\n  key: true,\n  ref: true,\n  __self: true,\n  __source: true\n};\nvar specialPropKeyWarningShown;\nvar specialPropRefWarningShown;\nvar didWarnAboutStringRefs;\n\n{\n  didWarnAboutStringRefs = {};\n}\n\nfunction hasValidRef(config) {\n  {\n    if (hasOwnProperty.call(config, 'ref')) {\n      var getter = Object.getOwnPropertyDescriptor(config, 'ref').get;\n\n      if (getter && getter.isReactWarning) {\n        return false;\n      }\n    }\n  }\n\n  return config.ref !== undefined;\n}\n\nfunction hasValidKey(config) {\n  {\n    if (hasOwnProperty.call(config, 'key')) {\n      var getter = Object.getOwnPropertyDescriptor(config, 'key').get;\n\n      if (getter && getter.isReactWarning) {\n        return false;\n      }\n    }\n  }\n\n  return config.key !== undefined;\n}\n\nfunction warnIfStringRefCannotBeAutoConverted(config, self) {\n  {\n    if (typeof config.ref === 'string' && ReactCurrentOwner.current && self && ReactCurrentOwner.current.stateNode !== self) {\n      var componentName = getComponentName(ReactCurrentOwner.current.type);\n\n      if (!didWarnAboutStringRefs[componentName]) {\n        error('Component \"%s\" contains the string ref \"%s\". ' + 'Support for string refs will be removed in a future major release. ' + 'This case cannot be automatically converted to an arrow function. ' + 'We ask you to manually fix this case by using useRef() or createRef() instead. ' + 'Learn more about using refs safely here: ' + 'https://reactjs.org/link/strict-mode-string-ref', getComponentName(ReactCurrentOwner.current.type), config.ref);\n\n        didWarnAboutStringRefs[componentName] = true;\n      }\n    }\n  }\n}\n\nfunction defineKeyPropWarningGetter(props, displayName) {\n  {\n    var warnAboutAccessingKey = function () {\n      if (!specialPropKeyWarningShown) {\n        specialPropKeyWarningShown = true;\n\n        error('%s: `key` is not a prop. Trying to access it will result ' + 'in `undefined` being returned. If you need to access the same ' + 'value within the child component, you should pass it as a different ' + 'prop. (https://reactjs.org/link/special-props)', displayName);\n      }\n    };\n\n    warnAboutAccessingKey.isReactWarning = true;\n    Object.defineProperty(props, 'key', {\n      get: warnAboutAccessingKey,\n      configurable: true\n    });\n  }\n}\n\nfunction defineRefPropWarningGetter(props, displayName) {\n  {\n    var warnAboutAccessingRef = function () {\n      if (!specialPropRefWarningShown) {\n        specialPropRefWarningShown = true;\n\n        error('%s: `ref` is not a prop. Trying to access it will result ' + 'in `undefined` being returned. If you need to access the same ' + 'value within the child component, you should pass it as a different ' + 'prop. (https://reactjs.org/link/special-props)', displayName);\n      }\n    };\n\n    warnAboutAccessingRef.isReactWarning = true;\n    Object.defineProperty(props, 'ref', {\n      get: warnAboutAccessingRef,\n      configurable: true\n    });\n  }\n}\n/**\n * Factory method to create a new React element. This no longer adheres to\n * the class pattern, so do not use new to call it. Also, instanceof check\n * will not work. Instead test $$typeof field against Symbol.for('react.element') to check\n * if something is a React Element.\n *\n * @param {*} type\n * @param {*} props\n * @param {*} key\n * @param {string|object} ref\n * @param {*} owner\n * @param {*} self A *temporary* helper to detect places where `this` is\n * different from the `owner` when React.createElement is called, so that we\n * can warn. We want to get rid of owner and replace string `ref`s with arrow\n * functions, and as long as `this` and owner are the same, there will be no\n * change in behavior.\n * @param {*} source An annotation object (added by a transpiler or otherwise)\n * indicating filename, line number, and/or other information.\n * @internal\n */\n\n\nvar ReactElement = function (type, key, ref, self, source, owner, props) {\n  var element = {\n    // This tag allows us to uniquely identify this as a React Element\n    $$typeof: REACT_ELEMENT_TYPE,\n    // Built-in properties that belong on the element\n    type: type,\n    key: key,\n    ref: ref,\n    props: props,\n    // Record the component responsible for creating this element.\n    _owner: owner\n  };\n\n  {\n    // The validation flag is currently mutative. We put it on\n    // an external backing store so that we can freeze the whole object.\n    // This can be replaced with a WeakMap once they are implemented in\n    // commonly used development environments.\n    element._store = {}; // To make comparing ReactElements easier for testing purposes, we make\n    // the validation flag non-enumerable (where possible, which should\n    // include every environment we run tests in), so the test framework\n    // ignores it.\n\n    Object.defineProperty(element._store, 'validated', {\n      configurable: false,\n      enumerable: false,\n      writable: true,\n      value: false\n    }); // self and source are DEV only properties.\n\n    Object.defineProperty(element, '_self', {\n      configurable: false,\n      enumerable: false,\n      writable: false,\n      value: self\n    }); // Two elements created in two different places should be considered\n    // equal for testing purposes and therefore we hide it from enumeration.\n\n    Object.defineProperty(element, '_source', {\n      configurable: false,\n      enumerable: false,\n      writable: false,\n      value: source\n    });\n\n    if (Object.freeze) {\n      Object.freeze(element.props);\n      Object.freeze(element);\n    }\n  }\n\n  return element;\n};\n/**\n * https://github.com/reactjs/rfcs/pull/107\n * @param {*} type\n * @param {object} props\n * @param {string} key\n */\n\nfunction jsxDEV(type, config, maybeKey, source, self) {\n  {\n    var propName; // Reserved names are extracted\n\n    var props = {};\n    var key = null;\n    var ref = null; // Currently, key can be spread in as a prop. This causes a potential\n    // issue if key is also explicitly declared (ie. <div {...props} key=\"Hi\" />\n    // or <div key=\"Hi\" {...props} /> ). We want to deprecate key spread,\n    // but as an intermediary step, we will use jsxDEV for everything except\n    // <div {...props} key=\"Hi\" />, because we aren't currently able to tell if\n    // key is explicitly declared to be undefined or not.\n\n    if (maybeKey !== undefined) {\n      key = '' + maybeKey;\n    }\n\n    if (hasValidKey(config)) {\n      key = '' + config.key;\n    }\n\n    if (hasValidRef(config)) {\n      ref = config.ref;\n      warnIfStringRefCannotBeAutoConverted(config, self);\n    } // Remaining properties are added to a new props object\n\n\n    for (propName in config) {\n      if (hasOwnProperty.call(config, propName) && !RESERVED_PROPS.hasOwnProperty(propName)) {\n        props[propName] = config[propName];\n      }\n    } // Resolve default props\n\n\n    if (type && type.defaultProps) {\n      var defaultProps = type.defaultProps;\n\n      for (propName in defaultProps) {\n        if (props[propName] === undefined) {\n          props[propName] = defaultProps[propName];\n        }\n      }\n    }\n\n    if (key || ref) {\n      var displayName = typeof type === 'function' ? type.displayName || type.name || 'Unknown' : type;\n\n      if (key) {\n        defineKeyPropWarningGetter(props, displayName);\n      }\n\n      if (ref) {\n        defineRefPropWarningGetter(props, displayName);\n      }\n    }\n\n    return ReactElement(type, key, ref, self, source, ReactCurrentOwner.current, props);\n  }\n}\n\nvar ReactCurrentOwner$1 = ReactSharedInternals.ReactCurrentOwner;\nvar ReactDebugCurrentFrame$1 = ReactSharedInternals.ReactDebugCurrentFrame;\n\nfunction setCurrentlyValidatingElement$1(element) {\n  {\n    if (element) {\n      var owner = element._owner;\n      var stack = describeUnknownElementTypeFrameInDEV(element.type, element._source, owner ? owner.type : null);\n      ReactDebugCurrentFrame$1.setExtraStackFrame(stack);\n    } else {\n      ReactDebugCurrentFrame$1.setExtraStackFrame(null);\n    }\n  }\n}\n\nvar propTypesMisspellWarningShown;\n\n{\n  propTypesMisspellWarningShown = false;\n}\n/**\n * Verifies the object is a ReactElement.\n * See https://reactjs.org/docs/react-api.html#isvalidelement\n * @param {?object} object\n * @return {boolean} True if `object` is a ReactElement.\n * @final\n */\n\nfunction isValidElement(object) {\n  {\n    return typeof object === 'object' && object !== null && object.$$typeof === REACT_ELEMENT_TYPE;\n  }\n}\n\nfunction getDeclarationErrorAddendum() {\n  {\n    if (ReactCurrentOwner$1.current) {\n      var name = getComponentName(ReactCurrentOwner$1.current.type);\n\n      if (name) {\n        return '\\n\\nCheck the render method of `' + name + '`.';\n      }\n    }\n\n    return '';\n  }\n}\n\nfunction getSourceInfoErrorAddendum(source) {\n  {\n    if (source !== undefined) {\n      var fileName = source.fileName.replace(/^.*[\\\\\\/]/, '');\n      var lineNumber = source.lineNumber;\n      return '\\n\\nCheck your code at ' + fileName + ':' + lineNumber + '.';\n    }\n\n    return '';\n  }\n}\n/**\n * Warn if there's no key explicitly set on dynamic arrays of children or\n * object keys are not valid. This allows us to keep track of children between\n * updates.\n */\n\n\nvar ownerHasKeyUseWarning = {};\n\nfunction getCurrentComponentErrorInfo(parentType) {\n  {\n    var info = getDeclarationErrorAddendum();\n\n    if (!info) {\n      var parentName = typeof parentType === 'string' ? parentType : parentType.displayName || parentType.name;\n\n      if (parentName) {\n        info = \"\\n\\nCheck the top-level render call using <\" + parentName + \">.\";\n      }\n    }\n\n    return info;\n  }\n}\n/**\n * Warn if the element doesn't have an explicit key assigned to it.\n * This element is in an array. The array could grow and shrink or be\n * reordered. All children that haven't already been validated are required to\n * have a \"key\" property assigned to it. Error statuses are cached so a warning\n * will only be shown once.\n *\n * @internal\n * @param {ReactElement} element Element that requires a key.\n * @param {*} parentType element's parent's type.\n */\n\n\nfunction validateExplicitKey(element, parentType) {\n  {\n    if (!element._store || element._store.validated || element.key != null) {\n      return;\n    }\n\n    element._store.validated = true;\n    var currentComponentErrorInfo = getCurrentComponentErrorInfo(parentType);\n\n    if (ownerHasKeyUseWarning[currentComponentErrorInfo]) {\n      return;\n    }\n\n    ownerHasKeyUseWarning[currentComponentErrorInfo] = true; // Usually the current owner is the offender, but if it accepts children as a\n    // property, it may be the creator of the child that's responsible for\n    // assigning it a key.\n\n    var childOwner = '';\n\n    if (element && element._owner && element._owner !== ReactCurrentOwner$1.current) {\n      // Give the component that originally created this child.\n      childOwner = \" It was passed a child from \" + getComponentName(element._owner.type) + \".\";\n    }\n\n    setCurrentlyValidatingElement$1(element);\n\n    error('Each child in a list should have a unique \"key\" prop.' + '%s%s See https://reactjs.org/link/warning-keys for more information.', currentComponentErrorInfo, childOwner);\n\n    setCurrentlyValidatingElement$1(null);\n  }\n}\n/**\n * Ensure that every element either is passed in a static location, in an\n * array with an explicit keys property defined, or in an object literal\n * with valid key property.\n *\n * @internal\n * @param {ReactNode} node Statically passed child of any type.\n * @param {*} parentType node's parent's type.\n */\n\n\nfunction validateChildKeys(node, parentType) {\n  {\n    if (typeof node !== 'object') {\n      return;\n    }\n\n    if (Array.isArray(node)) {\n      for (var i = 0; i < node.length; i++) {\n        var child = node[i];\n\n        if (isValidElement(child)) {\n          validateExplicitKey(child, parentType);\n        }\n      }\n    } else if (isValidElement(node)) {\n      // This element was passed in a valid location.\n      if (node._store) {\n        node._store.validated = true;\n      }\n    } else if (node) {\n      var iteratorFn = getIteratorFn(node);\n\n      if (typeof iteratorFn === 'function') {\n        // Entry iterators used to provide implicit keys,\n        // but now we print a separate warning for them later.\n        if (iteratorFn !== node.entries) {\n          var iterator = iteratorFn.call(node);\n          var step;\n\n          while (!(step = iterator.next()).done) {\n            if (isValidElement(step.value)) {\n              validateExplicitKey(step.value, parentType);\n            }\n          }\n        }\n      }\n    }\n  }\n}\n/**\n * Given an element, validate that its props follow the propTypes definition,\n * provided by the type.\n *\n * @param {ReactElement} element\n */\n\n\nfunction validatePropTypes(element) {\n  {\n    var type = element.type;\n\n    if (type === null || type === undefined || typeof type === 'string') {\n      return;\n    }\n\n    var propTypes;\n\n    if (typeof type === 'function') {\n      propTypes = type.propTypes;\n    } else if (typeof type === 'object' && (type.$$typeof === REACT_FORWARD_REF_TYPE || // Note: Memo only checks outer props here.\n    // Inner props are checked in the reconciler.\n    type.$$typeof === REACT_MEMO_TYPE)) {\n      propTypes = type.propTypes;\n    } else {\n      return;\n    }\n\n    if (propTypes) {\n      // Intentionally inside to avoid triggering lazy initializers:\n      var name = getComponentName(type);\n      checkPropTypes(propTypes, element.props, 'prop', name, element);\n    } else if (type.PropTypes !== undefined && !propTypesMisspellWarningShown) {\n      propTypesMisspellWarningShown = true; // Intentionally inside to avoid triggering lazy initializers:\n\n      var _name = getComponentName(type);\n\n      error('Component %s declared `PropTypes` instead of `propTypes`. Did you misspell the property assignment?', _name || 'Unknown');\n    }\n\n    if (typeof type.getDefaultProps === 'function' && !type.getDefaultProps.isReactClassApproved) {\n      error('getDefaultProps is only used on classic React.createClass ' + 'definitions. Use a static property named `defaultProps` instead.');\n    }\n  }\n}\n/**\n * Given a fragment, validate that it can only be provided with fragment props\n * @param {ReactElement} fragment\n */\n\n\nfunction validateFragmentProps(fragment) {\n  {\n    var keys = Object.keys(fragment.props);\n\n    for (var i = 0; i < keys.length; i++) {\n      var key = keys[i];\n\n      if (key !== 'children' && key !== 'key') {\n        setCurrentlyValidatingElement$1(fragment);\n\n        error('Invalid prop `%s` supplied to `React.Fragment`. ' + 'React.Fragment can only have `key` and `children` props.', key);\n\n        setCurrentlyValidatingElement$1(null);\n        break;\n      }\n    }\n\n    if (fragment.ref !== null) {\n      setCurrentlyValidatingElement$1(fragment);\n\n      error('Invalid attribute `ref` supplied to `React.Fragment`.');\n\n      setCurrentlyValidatingElement$1(null);\n    }\n  }\n}\n\nfunction jsxWithValidation(type, props, key, isStaticChildren, source, self) {\n  {\n    var validType = isValidElementType(type); // We warn in this case but don't throw. We expect the element creation to\n    // succeed and there will likely be errors in render.\n\n    if (!validType) {\n      var info = '';\n\n      if (type === undefined || typeof type === 'object' && type !== null && Object.keys(type).length === 0) {\n        info += ' You likely forgot to export your component from the file ' + \"it's defined in, or you might have mixed up default and named imports.\";\n      }\n\n      var sourceInfo = getSourceInfoErrorAddendum(source);\n\n      if (sourceInfo) {\n        info += sourceInfo;\n      } else {\n        info += getDeclarationErrorAddendum();\n      }\n\n      var typeString;\n\n      if (type === null) {\n        typeString = 'null';\n      } else if (Array.isArray(type)) {\n        typeString = 'array';\n      } else if (type !== undefined && type.$$typeof === REACT_ELEMENT_TYPE) {\n        typeString = \"<\" + (getComponentName(type.type) || 'Unknown') + \" />\";\n        info = ' Did you accidentally export a JSX literal instead of a component?';\n      } else {\n        typeString = typeof type;\n      }\n\n      error('React.jsx: type is invalid -- expected a string (for ' + 'built-in components) or a class/function (for composite ' + 'components) but got: %s.%s', typeString, info);\n    }\n\n    var element = jsxDEV(type, props, key, source, self); // The result can be nullish if a mock or a custom function is used.\n    // TODO: Drop this when these are no longer allowed as the type argument.\n\n    if (element == null) {\n      return element;\n    } // Skip key warning if the type isn't valid since our key validation logic\n    // doesn't expect a non-string/function type and can throw confusing errors.\n    // We don't want exception behavior to differ between dev and prod.\n    // (Rendering will throw with a helpful message and as soon as the type is\n    // fixed, the key warnings will appear.)\n\n\n    if (validType) {\n      var children = props.children;\n\n      if (children !== undefined) {\n        if (isStaticChildren) {\n          if (Array.isArray(children)) {\n            for (var i = 0; i < children.length; i++) {\n              validateChildKeys(children[i], type);\n            }\n\n            if (Object.freeze) {\n              Object.freeze(children);\n            }\n          } else {\n            error('React.jsx: Static children should always be an array. ' + 'You are likely explicitly calling React.jsxs or React.jsxDEV. ' + 'Use the Babel transform instead.');\n          }\n        } else {\n          validateChildKeys(children, type);\n        }\n      }\n    }\n\n    if (type === exports.Fragment) {\n      validateFragmentProps(element);\n    } else {\n      validatePropTypes(element);\n    }\n\n    return element;\n  }\n} // These two functions exist to still get child warnings in dev\n// even with the prod transform. This means that jsxDEV is purely\n// opt-in behavior for better messages but that we won't stop\n// giving you warnings if you use production apis.\n\nfunction jsxWithValidationStatic(type, props, key) {\n  {\n    return jsxWithValidation(type, props, key, true);\n  }\n}\nfunction jsxWithValidationDynamic(type, props, key) {\n  {\n    return jsxWithValidation(type, props, key, false);\n  }\n}\n\nvar jsx =  jsxWithValidationDynamic ; // we may want to special case jsxs internally to take advantage of static children.\n// for now we can ship identical prod functions\n\nvar jsxs =  jsxWithValidationStatic ;\n\nexports.jsx = jsx;\nexports.jsxs = jsxs;\n  })();\n}\n","'use strict';\n\nif (process.env.NODE_ENV === 'production') {\n  module.exports = require('./cjs/react-jsx-runtime.production.min.js');\n} else {\n  module.exports = require('./cjs/react-jsx-runtime.development.js');\n}\n","import * as jsxRuntime from \"D:\\\\ext.likaixin\\\\Desktop\\\\wangsiyv\\\\新建文件夹\\\\react_ts_wangsiyv\\\\node_modules\\\\react\\\\jsx-runtime.js\"\nexport const jsx = jsxRuntime.jsx\nexport const jsxs = jsxRuntime.jsxs\nexport const Fragment = jsxRuntime.Fragment","import{jsx as e,jsxs as r,Fragment as t}from\"react/jsx-runtime\";import{useRef as n,useEffect as o,useCallback as s,useState as i,useContext as c,createContext as u,memo as a,useMemo as f,useLayoutEffect as l,Component as v}from\"react\";var d=\"undefined\"!=typeof Element,h=\"function\"==typeof Map,b=\"function\"==typeof Set,g=\"function\"==typeof ArrayBuffer&&!!ArrayBuffer.isView;function p(e,r){if(e===r)return!0;if(e&&r&&\"object\"==typeof e&&\"object\"==typeof r){if(e.constructor!==r.constructor)return!1;var t,n,o,s;if(Array.isArray(e)){if((t=e.length)!=r.length)return!1;for(n=t;0!=n--;)if(!p(e[n],r[n]))return!1;return!0}if(h&&e instanceof Map&&r instanceof Map){if(e.size!==r.size)return!1;for(s=e.entries();!(n=s.next()).done;)if(!r.has(n.value[0]))return!1;for(s=e.entries();!(n=s.next()).done;)if(!p(n.value[1],r.get(n.value[0])))return!1;return!0}if(b&&e instanceof Set&&r instanceof Set){if(e.size!==r.size)return!1;for(s=e.entries();!(n=s.next()).done;)if(!r.has(n.value[0]))return!1;return!0}if(g&&ArrayBuffer.isView(e)&&ArrayBuffer.isView(r)){if((t=e.length)!=r.length)return!1;for(n=t;0!=n--;)if(e[n]!==r[n])return!1;return!0}if(e.constructor===RegExp)return e.source===r.source&&e.flags===r.flags;if(e.valueOf!==Object.prototype.valueOf)return e.valueOf()===r.valueOf();if(e.toString!==Object.prototype.toString)return e.toString()===r.toString();if((t=(o=Object.keys(e)).length)!==Object.keys(r).length)return!1;for(n=t;0!=n--;)if(!Object.prototype.hasOwnProperty.call(r,o[n]))return!1;if(d&&e instanceof Element)return!1;for(n=t;0!=n--;)if((\"_owner\"!==o[n]&&\"__v\"!==o[n]&&\"__o\"!==o[n]||!e.$$typeof)&&!p(e[o[n]],r[o[n]]))return!1;return!0}return e!=e&&r!=r}var y=function(e,r){try{return p(e,r)}catch(e){if((e.message||\"\").match(/stack|recursion/i))return console.warn(\"react-fast-compare cannot handle circular refs\"),!1;throw e}};const O=()=>{const e=URL.createObjectURL(new Blob),r=e.toString();return URL.revokeObjectURL(e),r.substr(r.lastIndexOf(\"/\")+1)},j=(e,r)=>{return 0===e.length?r||{}:(t=r,e.reduce(((e,r)=>(r in t&&(e[r]=t[r]),e)),{}));var t};class w{constructor(){this.subs={},this.setState=e=>{this.state=e},this.dispatch=e=>{this.state=e,Object.values(this.subs).forEach((r=>r(e)))},this.subscribe=e=>{const r=O();return this.subs[r]=e,()=>{delete this.subs[r]}}}}const m=e=>{const r=n(!0);return r.current&&e(),o((()=>{r.current=!1}),[]),r},M=()=>{const[e,r]=i(!1);return s((()=>{r((e=>!e))}),[])};var S=(e,r,t)=>{const s=()=>{var e,s;const i=c(r),u=n(t||(null===(e=null==i?void 0:i.observer)||void 0===e?void 0:e.current)),a=M(),f=n(Object.assign({},null===(s=u.current)||void 0===s?void 0:s.state)),l=n([]),v=f.current;return m((()=>{Object.keys(v).forEach((e=>{const r=v[e];Object.defineProperty(v,e,{get:()=>(l.current.includes(e)||l.current.push(e),r)})}))})),o((()=>{var e;return null===(e=u.current)||void 0===e?void 0:e.subscribe((e=>{var r,t;r=j(l.current,f.current),t=j(l.current,e),y(r,t)||a(),f.current=e}))}),[a]),v};return s.Provider=e,t&&(s.getData=()=>t.state),s};const x=new class{constructor(){this.store=new Map,this.globalModel=new Map,this.observer=new w}},A=x.store,E=(o,s)=>{const i=null==s?void 0:s.global;A.get(o)||A.set(o,new w);const c=u(null),v=x.globalModel.get(o),d=({value:r,observer:s})=>{const i=o(r),c=n(s),u=m((()=>{c.current.dispatch(i)}));return l((()=>{const e=c.current;!u.current&&e.dispatch(i)}),[u,i]),e(t,{},void 0)},h=a((s=>{const{value:u,children:a}=s,l=n(i?o:O()).current,v=A.get(l),h=n(i?A.get(o):v||A.set(l,new w).get(l)),b=f((()=>e(d,{value:u,observer:h.current},void 0)),[u]),g=r(t,{children:[b,a]},void 0);return i?g:e(c.Provider,Object.assign({value:{observer:h}},{children:g}),void 0)}));return i&&!x.globalModel.get(o)&&(x.globalModel.set(o,h),x.observer.dispatch({})),S(v||h,c,i?A.get(o):void 0)},k=()=>{const r=M();return o((()=>{x.observer.subscribe((()=>{r()}))}),[r]),e(t,{children:[...x.globalModel.values()].map(((r,t)=>e(r,{},t)))},void 0)},B=({children:n})=>r(t,{children:[e(k,{},void 0),n]},void 0);function R(r,t){return n=>{const o=r=>e(n,Object.assign({},r),void 0);return class extends v{render(){const n=Array.isArray(r)?r:[r],s=this.props,i=[];n.forEach((e=>{i.push(e())}));const c=t(i,s);return e(o,Object.assign({},c),void 0)}}}}export{B as GlobalProvider,R as connect,E as createModel};\n//# sourceMappingURL=index.js.map\n","/**\n * @remix-run/router v1.0.2\n *\n * Copyright (c) Remix Software Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE.md file in the root directory of this source tree.\n *\n * @license MIT\n */\nfunction _extends() {\n  _extends = Object.assign ? Object.assign.bind() : function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n  return _extends.apply(this, arguments);\n}\n\n////////////////////////////////////////////////////////////////////////////////\n//#region Types and Constants\n////////////////////////////////////////////////////////////////////////////////\n\n/**\n * Actions represent the type of change to a location value.\n */\nvar Action;\n\n(function (Action) {\n  /**\n   * A POP indicates a change to an arbitrary index in the history stack, such\n   * as a back or forward navigation. It does not describe the direction of the\n   * navigation, only that the current index changed.\n   *\n   * Note: This is the default action for newly created history objects.\n   */\n  Action[\"Pop\"] = \"POP\";\n  /**\n   * A PUSH indicates a new entry being added to the history stack, such as when\n   * a link is clicked and a new page loads. When this happens, all subsequent\n   * entries in the stack are lost.\n   */\n\n  Action[\"Push\"] = \"PUSH\";\n  /**\n   * A REPLACE indicates the entry at the current index in the history stack\n   * being replaced by a new one.\n   */\n\n  Action[\"Replace\"] = \"REPLACE\";\n})(Action || (Action = {}));\n\nconst PopStateEventType = \"popstate\";\n/**\n * Memory history stores the current location in memory. It is designed for use\n * in stateful non-browser environments like tests and React Native.\n */\n\nfunction createMemoryHistory(options) {\n  if (options === void 0) {\n    options = {};\n  }\n\n  let {\n    initialEntries = [\"/\"],\n    initialIndex,\n    v5Compat = false\n  } = options;\n  let entries; // Declare so we can access from createMemoryLocation\n\n  entries = initialEntries.map((entry, index) => createMemoryLocation(entry, typeof entry === \"string\" ? null : entry.state, index === 0 ? \"default\" : undefined));\n  let index = clampIndex(initialIndex == null ? entries.length - 1 : initialIndex);\n  let action = Action.Pop;\n  let listener = null;\n\n  function clampIndex(n) {\n    return Math.min(Math.max(n, 0), entries.length - 1);\n  }\n\n  function getCurrentLocation() {\n    return entries[index];\n  }\n\n  function createMemoryLocation(to, state, key) {\n    if (state === void 0) {\n      state = null;\n    }\n\n    let location = createLocation(entries ? getCurrentLocation().pathname : \"/\", to, state, key);\n    warning$1(location.pathname.charAt(0) === \"/\", \"relative pathnames are not supported in memory history: \" + JSON.stringify(to));\n    return location;\n  }\n\n  let history = {\n    get index() {\n      return index;\n    },\n\n    get action() {\n      return action;\n    },\n\n    get location() {\n      return getCurrentLocation();\n    },\n\n    createHref(to) {\n      return typeof to === \"string\" ? to : createPath(to);\n    },\n\n    push(to, state) {\n      action = Action.Push;\n      let nextLocation = createMemoryLocation(to, state);\n      index += 1;\n      entries.splice(index, entries.length, nextLocation);\n\n      if (v5Compat && listener) {\n        listener({\n          action,\n          location: nextLocation\n        });\n      }\n    },\n\n    replace(to, state) {\n      action = Action.Replace;\n      let nextLocation = createMemoryLocation(to, state);\n      entries[index] = nextLocation;\n\n      if (v5Compat && listener) {\n        listener({\n          action,\n          location: nextLocation\n        });\n      }\n    },\n\n    go(delta) {\n      action = Action.Pop;\n      index = clampIndex(index + delta);\n\n      if (listener) {\n        listener({\n          action,\n          location: getCurrentLocation()\n        });\n      }\n    },\n\n    listen(fn) {\n      listener = fn;\n      return () => {\n        listener = null;\n      };\n    }\n\n  };\n  return history;\n}\n/**\n * Browser history stores the location in regular URLs. This is the standard for\n * most web apps, but it requires some configuration on the server to ensure you\n * serve the same app at multiple URLs.\n *\n * @see https://github.com/remix-run/history/tree/main/docs/api-reference.md#createbrowserhistory\n */\n\nfunction createBrowserHistory(options) {\n  if (options === void 0) {\n    options = {};\n  }\n\n  function createBrowserLocation(window, globalHistory) {\n    let {\n      pathname,\n      search,\n      hash\n    } = window.location;\n    return createLocation(\"\", {\n      pathname,\n      search,\n      hash\n    }, // state defaults to `null` because `window.history.state` does\n    globalHistory.state && globalHistory.state.usr || null, globalHistory.state && globalHistory.state.key || \"default\");\n  }\n\n  function createBrowserHref(window, to) {\n    return typeof to === \"string\" ? to : createPath(to);\n  }\n\n  return getUrlBasedHistory(createBrowserLocation, createBrowserHref, null, options);\n}\n/**\n * Hash history stores the location in window.location.hash. This makes it ideal\n * for situations where you don't want to send the location to the server for\n * some reason, either because you do cannot configure it or the URL space is\n * reserved for something else.\n *\n * @see https://github.com/remix-run/history/tree/main/docs/api-reference.md#createhashhistory\n */\n\nfunction createHashHistory(options) {\n  if (options === void 0) {\n    options = {};\n  }\n\n  function createHashLocation(window, globalHistory) {\n    let {\n      pathname = \"/\",\n      search = \"\",\n      hash = \"\"\n    } = parsePath(window.location.hash.substr(1));\n    return createLocation(\"\", {\n      pathname,\n      search,\n      hash\n    }, // state defaults to `null` because `window.history.state` does\n    globalHistory.state && globalHistory.state.usr || null, globalHistory.state && globalHistory.state.key || \"default\");\n  }\n\n  function createHashHref(window, to) {\n    let base = window.document.querySelector(\"base\");\n    let href = \"\";\n\n    if (base && base.getAttribute(\"href\")) {\n      let url = window.location.href;\n      let hashIndex = url.indexOf(\"#\");\n      href = hashIndex === -1 ? url : url.slice(0, hashIndex);\n    }\n\n    return href + \"#\" + (typeof to === \"string\" ? to : createPath(to));\n  }\n\n  function validateHashLocation(location, to) {\n    warning$1(location.pathname.charAt(0) === \"/\", \"relative pathnames are not supported in hash history.push(\" + JSON.stringify(to) + \")\");\n  }\n\n  return getUrlBasedHistory(createHashLocation, createHashHref, validateHashLocation, options);\n} //#endregion\n////////////////////////////////////////////////////////////////////////////////\n//#region UTILS\n////////////////////////////////////////////////////////////////////////////////\n\nfunction warning$1(cond, message) {\n  if (!cond) {\n    // eslint-disable-next-line no-console\n    if (typeof console !== \"undefined\") console.warn(message);\n\n    try {\n      // Welcome to debugging history!\n      //\n      // This error is thrown as a convenience so you can more easily\n      // find the source for a warning that appears in the console by\n      // enabling \"pause on exceptions\" in your JavaScript debugger.\n      throw new Error(message); // eslint-disable-next-line no-empty\n    } catch (e) {}\n  }\n}\n\nfunction createKey() {\n  return Math.random().toString(36).substr(2, 8);\n}\n/**\n * For browser-based histories, we combine the state and key into an object\n */\n\n\nfunction getHistoryState(location) {\n  return {\n    usr: location.state,\n    key: location.key\n  };\n}\n/**\n * Creates a Location object with a unique key from the given Path\n */\n\n\nfunction createLocation(current, to, state, key) {\n  if (state === void 0) {\n    state = null;\n  }\n\n  let location = _extends({\n    pathname: typeof current === \"string\" ? current : current.pathname,\n    search: \"\",\n    hash: \"\"\n  }, typeof to === \"string\" ? parsePath(to) : to, {\n    state,\n    // TODO: This could be cleaned up.  push/replace should probably just take\n    // full Locations now and avoid the need to run through this flow at all\n    // But that's a pretty big refactor to the current test suite so going to\n    // keep as is for the time being and just let any incoming keys take precedence\n    key: to && to.key || key || createKey()\n  });\n\n  return location;\n}\n/**\n * Creates a string URL path from the given pathname, search, and hash components.\n */\n\nfunction createPath(_ref) {\n  let {\n    pathname = \"/\",\n    search = \"\",\n    hash = \"\"\n  } = _ref;\n  if (search && search !== \"?\") pathname += search.charAt(0) === \"?\" ? search : \"?\" + search;\n  if (hash && hash !== \"#\") pathname += hash.charAt(0) === \"#\" ? hash : \"#\" + hash;\n  return pathname;\n}\n/**\n * Parses a string URL path into its separate pathname, search, and hash components.\n */\n\nfunction parsePath(path) {\n  let parsedPath = {};\n\n  if (path) {\n    let hashIndex = path.indexOf(\"#\");\n\n    if (hashIndex >= 0) {\n      parsedPath.hash = path.substr(hashIndex);\n      path = path.substr(0, hashIndex);\n    }\n\n    let searchIndex = path.indexOf(\"?\");\n\n    if (searchIndex >= 0) {\n      parsedPath.search = path.substr(searchIndex);\n      path = path.substr(0, searchIndex);\n    }\n\n    if (path) {\n      parsedPath.pathname = path;\n    }\n  }\n\n  return parsedPath;\n}\n\nfunction getUrlBasedHistory(getLocation, createHref, validateLocation, options) {\n  if (options === void 0) {\n    options = {};\n  }\n\n  let {\n    window = document.defaultView,\n    v5Compat = false\n  } = options;\n  let globalHistory = window.history;\n  let action = Action.Pop;\n  let listener = null;\n\n  function handlePop() {\n    action = Action.Pop;\n\n    if (listener) {\n      listener({\n        action,\n        location: history.location\n      });\n    }\n  }\n\n  function push(to, state) {\n    action = Action.Push;\n    let location = createLocation(history.location, to, state);\n    if (validateLocation) validateLocation(location, to);\n    let historyState = getHistoryState(location);\n    let url = history.createHref(location); // try...catch because iOS limits us to 100 pushState calls :/\n\n    try {\n      globalHistory.pushState(historyState, \"\", url);\n    } catch (error) {\n      // They are going to lose state here, but there is no real\n      // way to warn them about it since the page will refresh...\n      window.location.assign(url);\n    }\n\n    if (v5Compat && listener) {\n      listener({\n        action,\n        location\n      });\n    }\n  }\n\n  function replace(to, state) {\n    action = Action.Replace;\n    let location = createLocation(history.location, to, state);\n    if (validateLocation) validateLocation(location, to);\n    let historyState = getHistoryState(location);\n    let url = history.createHref(location);\n    globalHistory.replaceState(historyState, \"\", url);\n\n    if (v5Compat && listener) {\n      listener({\n        action,\n        location: location\n      });\n    }\n  }\n\n  let history = {\n    get action() {\n      return action;\n    },\n\n    get location() {\n      return getLocation(window, globalHistory);\n    },\n\n    listen(fn) {\n      if (listener) {\n        throw new Error(\"A history only accepts one active listener\");\n      }\n\n      window.addEventListener(PopStateEventType, handlePop);\n      listener = fn;\n      return () => {\n        window.removeEventListener(PopStateEventType, handlePop);\n        listener = null;\n      };\n    },\n\n    createHref(to) {\n      return createHref(window, to);\n    },\n\n    push,\n    replace,\n\n    go(n) {\n      return globalHistory.go(n);\n    }\n\n  };\n  return history;\n} //#endregion\n\nvar ResultType;\n\n(function (ResultType) {\n  ResultType[\"data\"] = \"data\";\n  ResultType[\"deferred\"] = \"deferred\";\n  ResultType[\"redirect\"] = \"redirect\";\n  ResultType[\"error\"] = \"error\";\n})(ResultType || (ResultType = {}));\n\nfunction isIndexRoute(route) {\n  return route.index === true;\n} // Walk the route tree generating unique IDs where necessary so we are working\n// solely with AgnosticDataRouteObject's within the Router\n\n\nfunction convertRoutesToDataRoutes(routes, parentPath, allIds) {\n  if (parentPath === void 0) {\n    parentPath = [];\n  }\n\n  if (allIds === void 0) {\n    allIds = new Set();\n  }\n\n  return routes.map((route, index) => {\n    let treePath = [...parentPath, index];\n    let id = typeof route.id === \"string\" ? route.id : treePath.join(\"-\");\n    invariant(route.index !== true || !route.children, \"Cannot specify children on an index route\");\n    invariant(!allIds.has(id), \"Found a route id collision on id \\\"\" + id + \"\\\".  Route \" + \"id's must be globally unique within Data Router usages\");\n    allIds.add(id);\n\n    if (isIndexRoute(route)) {\n      let indexRoute = _extends({}, route, {\n        id\n      });\n\n      return indexRoute;\n    } else {\n      let pathOrLayoutRoute = _extends({}, route, {\n        id,\n        children: route.children ? convertRoutesToDataRoutes(route.children, treePath, allIds) : undefined\n      });\n\n      return pathOrLayoutRoute;\n    }\n  });\n}\n/**\n * Matches the given routes to a location and returns the match data.\n *\n * @see https://reactrouter.com/docs/en/v6/utils/match-routes\n */\n\nfunction matchRoutes(routes, locationArg, basename) {\n  if (basename === void 0) {\n    basename = \"/\";\n  }\n\n  let location = typeof locationArg === \"string\" ? parsePath(locationArg) : locationArg;\n  let pathname = stripBasename(location.pathname || \"/\", basename);\n\n  if (pathname == null) {\n    return null;\n  }\n\n  let branches = flattenRoutes(routes);\n  rankRouteBranches(branches);\n  let matches = null;\n\n  for (let i = 0; matches == null && i < branches.length; ++i) {\n    matches = matchRouteBranch(branches[i], pathname);\n  }\n\n  return matches;\n}\n\nfunction flattenRoutes(routes, branches, parentsMeta, parentPath) {\n  if (branches === void 0) {\n    branches = [];\n  }\n\n  if (parentsMeta === void 0) {\n    parentsMeta = [];\n  }\n\n  if (parentPath === void 0) {\n    parentPath = \"\";\n  }\n\n  routes.forEach((route, index) => {\n    let meta = {\n      relativePath: route.path || \"\",\n      caseSensitive: route.caseSensitive === true,\n      childrenIndex: index,\n      route\n    };\n\n    if (meta.relativePath.startsWith(\"/\")) {\n      invariant(meta.relativePath.startsWith(parentPath), \"Absolute route path \\\"\" + meta.relativePath + \"\\\" nested under path \" + (\"\\\"\" + parentPath + \"\\\" is not valid. An absolute child route path \") + \"must start with the combined path of all its parent routes.\");\n      meta.relativePath = meta.relativePath.slice(parentPath.length);\n    }\n\n    let path = joinPaths([parentPath, meta.relativePath]);\n    let routesMeta = parentsMeta.concat(meta); // Add the children before adding this route to the array so we traverse the\n    // route tree depth-first and child routes appear before their parents in\n    // the \"flattened\" version.\n\n    if (route.children && route.children.length > 0) {\n      invariant( // Our types know better, but runtime JS may not!\n      // @ts-expect-error\n      route.index !== true, \"Index routes must not have child routes. Please remove \" + (\"all child routes from route path \\\"\" + path + \"\\\".\"));\n      flattenRoutes(route.children, branches, routesMeta, path);\n    } // Routes without a path shouldn't ever match by themselves unless they are\n    // index routes, so don't add them to the list of possible branches.\n\n\n    if (route.path == null && !route.index) {\n      return;\n    }\n\n    branches.push({\n      path,\n      score: computeScore(path, route.index),\n      routesMeta\n    });\n  });\n  return branches;\n}\n\nfunction rankRouteBranches(branches) {\n  branches.sort((a, b) => a.score !== b.score ? b.score - a.score // Higher score first\n  : compareIndexes(a.routesMeta.map(meta => meta.childrenIndex), b.routesMeta.map(meta => meta.childrenIndex)));\n}\n\nconst paramRe = /^:\\w+$/;\nconst dynamicSegmentValue = 3;\nconst indexRouteValue = 2;\nconst emptySegmentValue = 1;\nconst staticSegmentValue = 10;\nconst splatPenalty = -2;\n\nconst isSplat = s => s === \"*\";\n\nfunction computeScore(path, index) {\n  let segments = path.split(\"/\");\n  let initialScore = segments.length;\n\n  if (segments.some(isSplat)) {\n    initialScore += splatPenalty;\n  }\n\n  if (index) {\n    initialScore += indexRouteValue;\n  }\n\n  return segments.filter(s => !isSplat(s)).reduce((score, segment) => score + (paramRe.test(segment) ? dynamicSegmentValue : segment === \"\" ? emptySegmentValue : staticSegmentValue), initialScore);\n}\n\nfunction compareIndexes(a, b) {\n  let siblings = a.length === b.length && a.slice(0, -1).every((n, i) => n === b[i]);\n  return siblings ? // If two routes are siblings, we should try to match the earlier sibling\n  // first. This allows people to have fine-grained control over the matching\n  // behavior by simply putting routes with identical paths in the order they\n  // want them tried.\n  a[a.length - 1] - b[b.length - 1] : // Otherwise, it doesn't really make sense to rank non-siblings by index,\n  // so they sort equally.\n  0;\n}\n\nfunction matchRouteBranch(branch, pathname) {\n  let {\n    routesMeta\n  } = branch;\n  let matchedParams = {};\n  let matchedPathname = \"/\";\n  let matches = [];\n\n  for (let i = 0; i < routesMeta.length; ++i) {\n    let meta = routesMeta[i];\n    let end = i === routesMeta.length - 1;\n    let remainingPathname = matchedPathname === \"/\" ? pathname : pathname.slice(matchedPathname.length) || \"/\";\n    let match = matchPath({\n      path: meta.relativePath,\n      caseSensitive: meta.caseSensitive,\n      end\n    }, remainingPathname);\n    if (!match) return null;\n    Object.assign(matchedParams, match.params);\n    let route = meta.route;\n    matches.push({\n      // TODO: Can this as be avoided?\n      params: matchedParams,\n      pathname: joinPaths([matchedPathname, match.pathname]),\n      pathnameBase: normalizePathname(joinPaths([matchedPathname, match.pathnameBase])),\n      route\n    });\n\n    if (match.pathnameBase !== \"/\") {\n      matchedPathname = joinPaths([matchedPathname, match.pathnameBase]);\n    }\n  }\n\n  return matches;\n}\n/**\n * Returns a path with params interpolated.\n *\n * @see https://reactrouter.com/docs/en/v6/utils/generate-path\n */\n\n\nfunction generatePath(path, params) {\n  if (params === void 0) {\n    params = {};\n  }\n\n  return path.replace(/:(\\w+)/g, (_, key) => {\n    invariant(params[key] != null, \"Missing \\\":\" + key + \"\\\" param\");\n    return params[key];\n  }).replace(/(\\/?)\\*/, (_, prefix, __, str) => {\n    const star = \"*\";\n\n    if (params[star] == null) {\n      // If no splat was provided, trim the trailing slash _unless_ it's\n      // the entire path\n      return str === \"/*\" ? \"/\" : \"\";\n    } // Apply the splat\n\n\n    return \"\" + prefix + params[star];\n  });\n}\n/**\n * Performs pattern matching on a URL pathname and returns information about\n * the match.\n *\n * @see https://reactrouter.com/docs/en/v6/utils/match-path\n */\n\nfunction matchPath(pattern, pathname) {\n  if (typeof pattern === \"string\") {\n    pattern = {\n      path: pattern,\n      caseSensitive: false,\n      end: true\n    };\n  }\n\n  let [matcher, paramNames] = compilePath(pattern.path, pattern.caseSensitive, pattern.end);\n  let match = pathname.match(matcher);\n  if (!match) return null;\n  let matchedPathname = match[0];\n  let pathnameBase = matchedPathname.replace(/(.)\\/+$/, \"$1\");\n  let captureGroups = match.slice(1);\n  let params = paramNames.reduce((memo, paramName, index) => {\n    // We need to compute the pathnameBase here using the raw splat value\n    // instead of using params[\"*\"] later because it will be decoded then\n    if (paramName === \"*\") {\n      let splatValue = captureGroups[index] || \"\";\n      pathnameBase = matchedPathname.slice(0, matchedPathname.length - splatValue.length).replace(/(.)\\/+$/, \"$1\");\n    }\n\n    memo[paramName] = safelyDecodeURIComponent(captureGroups[index] || \"\", paramName);\n    return memo;\n  }, {});\n  return {\n    params,\n    pathname: matchedPathname,\n    pathnameBase,\n    pattern\n  };\n}\n\nfunction compilePath(path, caseSensitive, end) {\n  if (caseSensitive === void 0) {\n    caseSensitive = false;\n  }\n\n  if (end === void 0) {\n    end = true;\n  }\n\n  warning(path === \"*\" || !path.endsWith(\"*\") || path.endsWith(\"/*\"), \"Route path \\\"\" + path + \"\\\" will be treated as if it were \" + (\"\\\"\" + path.replace(/\\*$/, \"/*\") + \"\\\" because the `*` character must \") + \"always follow a `/` in the pattern. To get rid of this warning, \" + (\"please change the route path to \\\"\" + path.replace(/\\*$/, \"/*\") + \"\\\".\"));\n  let paramNames = [];\n  let regexpSource = \"^\" + path.replace(/\\/*\\*?$/, \"\") // Ignore trailing / and /*, we'll handle it below\n  .replace(/^\\/*/, \"/\") // Make sure it has a leading /\n  .replace(/[\\\\.*+^$?{}|()[\\]]/g, \"\\\\$&\") // Escape special regex chars\n  .replace(/:(\\w+)/g, (_, paramName) => {\n    paramNames.push(paramName);\n    return \"([^\\\\/]+)\";\n  });\n\n  if (path.endsWith(\"*\")) {\n    paramNames.push(\"*\");\n    regexpSource += path === \"*\" || path === \"/*\" ? \"(.*)$\" // Already matched the initial /, just match the rest\n    : \"(?:\\\\/(.+)|\\\\/*)$\"; // Don't include the / in params[\"*\"]\n  } else if (end) {\n    // When matching to the end, ignore trailing slashes\n    regexpSource += \"\\\\/*$\";\n  } else if (path !== \"\" && path !== \"/\") {\n    // If our path is non-empty and contains anything beyond an initial slash,\n    // then we have _some_ form of path in our regex so we should expect to\n    // match only if we find the end of this path segment.  Look for an optional\n    // non-captured trailing slash (to match a portion of the URL) or the end\n    // of the path (if we've matched to the end).  We used to do this with a\n    // word boundary but that gives false positives on routes like\n    // /user-preferences since `-` counts as a word boundary.\n    regexpSource += \"(?:(?=\\\\/|$))\";\n  } else ;\n\n  let matcher = new RegExp(regexpSource, caseSensitive ? undefined : \"i\");\n  return [matcher, paramNames];\n}\n\nfunction safelyDecodeURIComponent(value, paramName) {\n  try {\n    return decodeURIComponent(value);\n  } catch (error) {\n    warning(false, \"The value for the URL param \\\"\" + paramName + \"\\\" will not be decoded because\" + (\" the string \\\"\" + value + \"\\\" is a malformed URL segment. This is probably\") + (\" due to a bad percent encoding (\" + error + \").\"));\n    return value;\n  }\n}\n/**\n * @private\n */\n\n\nfunction stripBasename(pathname, basename) {\n  if (basename === \"/\") return pathname;\n\n  if (!pathname.toLowerCase().startsWith(basename.toLowerCase())) {\n    return null;\n  } // We want to leave trailing slash behavior in the user's control, so if they\n  // specify a basename with a trailing slash, we should support it\n\n\n  let startIndex = basename.endsWith(\"/\") ? basename.length - 1 : basename.length;\n  let nextChar = pathname.charAt(startIndex);\n\n  if (nextChar && nextChar !== \"/\") {\n    // pathname does not start with basename/\n    return null;\n  }\n\n  return pathname.slice(startIndex) || \"/\";\n}\nfunction invariant(value, message) {\n  if (value === false || value === null || typeof value === \"undefined\") {\n    throw new Error(message);\n  }\n}\n/**\n * @private\n */\n\nfunction warning(cond, message) {\n  if (!cond) {\n    // eslint-disable-next-line no-console\n    if (typeof console !== \"undefined\") console.warn(message);\n\n    try {\n      // Welcome to debugging React Router!\n      //\n      // This error is thrown as a convenience so you can more easily\n      // find the source for a warning that appears in the console by\n      // enabling \"pause on exceptions\" in your JavaScript debugger.\n      throw new Error(message); // eslint-disable-next-line no-empty\n    } catch (e) {}\n  }\n}\n/**\n * Returns a resolved path object relative to the given pathname.\n *\n * @see https://reactrouter.com/docs/en/v6/utils/resolve-path\n */\n\nfunction resolvePath(to, fromPathname) {\n  if (fromPathname === void 0) {\n    fromPathname = \"/\";\n  }\n\n  let {\n    pathname: toPathname,\n    search = \"\",\n    hash = \"\"\n  } = typeof to === \"string\" ? parsePath(to) : to;\n  let pathname = toPathname ? toPathname.startsWith(\"/\") ? toPathname : resolvePathname(toPathname, fromPathname) : fromPathname;\n  return {\n    pathname,\n    search: normalizeSearch(search),\n    hash: normalizeHash(hash)\n  };\n}\n\nfunction resolvePathname(relativePath, fromPathname) {\n  let segments = fromPathname.replace(/\\/+$/, \"\").split(\"/\");\n  let relativeSegments = relativePath.split(\"/\");\n  relativeSegments.forEach(segment => {\n    if (segment === \"..\") {\n      // Keep the root \"\" segment so the pathname starts at /\n      if (segments.length > 1) segments.pop();\n    } else if (segment !== \".\") {\n      segments.push(segment);\n    }\n  });\n  return segments.length > 1 ? segments.join(\"/\") : \"/\";\n}\n\nfunction getInvalidPathError(char, field, dest, path) {\n  return \"Cannot include a '\" + char + \"' character in a manually specified \" + (\"`to.\" + field + \"` field [\" + JSON.stringify(path) + \"].  Please separate it out to the \") + (\"`to.\" + dest + \"` field. Alternatively you may provide the full path as \") + \"a string in <Link to=\\\"...\\\"> and the router will parse it for you.\";\n}\n/**\n * @private\n */\n\n\nfunction resolveTo(toArg, routePathnames, locationPathname, isPathRelative) {\n  if (isPathRelative === void 0) {\n    isPathRelative = false;\n  }\n\n  let to;\n\n  if (typeof toArg === \"string\") {\n    to = parsePath(toArg);\n  } else {\n    to = _extends({}, toArg);\n    invariant(!to.pathname || !to.pathname.includes(\"?\"), getInvalidPathError(\"?\", \"pathname\", \"search\", to));\n    invariant(!to.pathname || !to.pathname.includes(\"#\"), getInvalidPathError(\"#\", \"pathname\", \"hash\", to));\n    invariant(!to.search || !to.search.includes(\"#\"), getInvalidPathError(\"#\", \"search\", \"hash\", to));\n  }\n\n  let isEmptyPath = toArg === \"\" || to.pathname === \"\";\n  let toPathname = isEmptyPath ? \"/\" : to.pathname;\n  let from; // Routing is relative to the current pathname if explicitly requested.\n  //\n  // If a pathname is explicitly provided in `to`, it should be relative to the\n  // route context. This is explained in `Note on `<Link to>` values` in our\n  // migration guide from v5 as a means of disambiguation between `to` values\n  // that begin with `/` and those that do not. However, this is problematic for\n  // `to` values that do not provide a pathname. `to` can simply be a search or\n  // hash string, in which case we should assume that the navigation is relative\n  // to the current location's pathname and *not* the route pathname.\n\n  if (isPathRelative || toPathname == null) {\n    from = locationPathname;\n  } else {\n    let routePathnameIndex = routePathnames.length - 1;\n\n    if (toPathname.startsWith(\"..\")) {\n      let toSegments = toPathname.split(\"/\"); // Each leading .. segment means \"go up one route\" instead of \"go up one\n      // URL segment\".  This is a key difference from how <a href> works and a\n      // major reason we call this a \"to\" value instead of a \"href\".\n\n      while (toSegments[0] === \"..\") {\n        toSegments.shift();\n        routePathnameIndex -= 1;\n      }\n\n      to.pathname = toSegments.join(\"/\");\n    } // If there are more \"..\" segments than parent routes, resolve relative to\n    // the root / URL.\n\n\n    from = routePathnameIndex >= 0 ? routePathnames[routePathnameIndex] : \"/\";\n  }\n\n  let path = resolvePath(to, from); // Ensure the pathname has a trailing slash if the original \"to\" had one\n\n  let hasExplicitTrailingSlash = toPathname && toPathname !== \"/\" && toPathname.endsWith(\"/\"); // Or if this was a link to the current path which has a trailing slash\n\n  let hasCurrentTrailingSlash = (isEmptyPath || toPathname === \".\") && locationPathname.endsWith(\"/\");\n\n  if (!path.pathname.endsWith(\"/\") && (hasExplicitTrailingSlash || hasCurrentTrailingSlash)) {\n    path.pathname += \"/\";\n  }\n\n  return path;\n}\n/**\n * @private\n */\n\nfunction getToPathname(to) {\n  // Empty strings should be treated the same as / paths\n  return to === \"\" || to.pathname === \"\" ? \"/\" : typeof to === \"string\" ? parsePath(to).pathname : to.pathname;\n}\n/**\n * @private\n */\n\nconst joinPaths = paths => paths.join(\"/\").replace(/\\/\\/+/g, \"/\");\n/**\n * @private\n */\n\nconst normalizePathname = pathname => pathname.replace(/\\/+$/, \"\").replace(/^\\/*/, \"/\");\n/**\n * @private\n */\n\nconst normalizeSearch = search => !search || search === \"?\" ? \"\" : search.startsWith(\"?\") ? search : \"?\" + search;\n/**\n * @private\n */\n\nconst normalizeHash = hash => !hash || hash === \"#\" ? \"\" : hash.startsWith(\"#\") ? hash : \"#\" + hash;\n/**\n * This is a shortcut for creating `application/json` responses. Converts `data`\n * to JSON and sets the `Content-Type` header.\n */\n\nconst json = function json(data, init) {\n  if (init === void 0) {\n    init = {};\n  }\n\n  let responseInit = typeof init === \"number\" ? {\n    status: init\n  } : init;\n  let headers = new Headers(responseInit.headers);\n\n  if (!headers.has(\"Content-Type\")) {\n    headers.set(\"Content-Type\", \"application/json; charset=utf-8\");\n  }\n\n  return new Response(JSON.stringify(data), _extends({}, responseInit, {\n    headers\n  }));\n};\nclass AbortedDeferredError extends Error {}\nclass DeferredData {\n  constructor(data) {\n    this.pendingKeys = new Set();\n    this.subscriber = undefined;\n    invariant(data && typeof data === \"object\" && !Array.isArray(data), \"defer() only accepts plain objects\"); // Set up an AbortController + Promise we can race against to exit early\n    // cancellation\n\n    let reject;\n    this.abortPromise = new Promise((_, r) => reject = r);\n    this.controller = new AbortController();\n\n    let onAbort = () => reject(new AbortedDeferredError(\"Deferred data aborted\"));\n\n    this.unlistenAbortSignal = () => this.controller.signal.removeEventListener(\"abort\", onAbort);\n\n    this.controller.signal.addEventListener(\"abort\", onAbort);\n    this.data = Object.entries(data).reduce((acc, _ref) => {\n      let [key, value] = _ref;\n      return Object.assign(acc, {\n        [key]: this.trackPromise(key, value)\n      });\n    }, {});\n  }\n\n  trackPromise(key, value) {\n    if (!(value instanceof Promise)) {\n      return value;\n    }\n\n    this.pendingKeys.add(key); // We store a little wrapper promise that will be extended with\n    // _data/_error props upon resolve/reject\n\n    let promise = Promise.race([value, this.abortPromise]).then(data => this.onSettle(promise, key, null, data), error => this.onSettle(promise, key, error)); // Register rejection listeners to avoid uncaught promise rejections on\n    // errors or aborted deferred values\n\n    promise.catch(() => {});\n    Object.defineProperty(promise, \"_tracked\", {\n      get: () => true\n    });\n    return promise;\n  }\n\n  onSettle(promise, key, error, data) {\n    if (this.controller.signal.aborted && error instanceof AbortedDeferredError) {\n      this.unlistenAbortSignal();\n      Object.defineProperty(promise, \"_error\", {\n        get: () => error\n      });\n      return Promise.reject(error);\n    }\n\n    this.pendingKeys.delete(key);\n\n    if (this.done) {\n      // Nothing left to abort!\n      this.unlistenAbortSignal();\n    }\n\n    const subscriber = this.subscriber;\n\n    if (error) {\n      Object.defineProperty(promise, \"_error\", {\n        get: () => error\n      });\n      subscriber && subscriber(false);\n      return Promise.reject(error);\n    }\n\n    Object.defineProperty(promise, \"_data\", {\n      get: () => data\n    });\n    subscriber && subscriber(false);\n    return data;\n  }\n\n  subscribe(fn) {\n    this.subscriber = fn;\n  }\n\n  cancel() {\n    this.controller.abort();\n    this.pendingKeys.forEach((v, k) => this.pendingKeys.delete(k));\n    let subscriber = this.subscriber;\n    subscriber && subscriber(true);\n  }\n\n  async resolveData(signal) {\n    let aborted = false;\n\n    if (!this.done) {\n      let onAbort = () => this.cancel();\n\n      signal.addEventListener(\"abort\", onAbort);\n      aborted = await new Promise(resolve => {\n        this.subscribe(aborted => {\n          signal.removeEventListener(\"abort\", onAbort);\n\n          if (aborted || this.done) {\n            resolve(aborted);\n          }\n        });\n      });\n    }\n\n    return aborted;\n  }\n\n  get done() {\n    return this.pendingKeys.size === 0;\n  }\n\n  get unwrappedData() {\n    invariant(this.data !== null && this.done, \"Can only unwrap data on initialized and settled deferreds\");\n    return Object.entries(this.data).reduce((acc, _ref2) => {\n      let [key, value] = _ref2;\n      return Object.assign(acc, {\n        [key]: unwrapTrackedPromise(value)\n      });\n    }, {});\n  }\n\n}\n\nfunction isTrackedPromise(value) {\n  return value instanceof Promise && value._tracked === true;\n}\n\nfunction unwrapTrackedPromise(value) {\n  if (!isTrackedPromise(value)) {\n    return value;\n  }\n\n  if (value._error) {\n    throw value._error;\n  }\n\n  return value._data;\n}\n\nfunction defer(data) {\n  return new DeferredData(data);\n}\n/**\n * A redirect response. Sets the status code and the `Location` header.\n * Defaults to \"302 Found\".\n */\n\nconst redirect = function redirect(url, init) {\n  if (init === void 0) {\n    init = 302;\n  }\n\n  let responseInit = init;\n\n  if (typeof responseInit === \"number\") {\n    responseInit = {\n      status: responseInit\n    };\n  } else if (typeof responseInit.status === \"undefined\") {\n    responseInit.status = 302;\n  }\n\n  let headers = new Headers(responseInit.headers);\n  headers.set(\"Location\", url);\n  return new Response(null, _extends({}, responseInit, {\n    headers\n  }));\n};\n/**\n * @private\n * Utility class we use to hold auto-unwrapped 4xx/5xx Response bodies\n */\n\nclass ErrorResponse {\n  constructor(status, statusText, data) {\n    this.status = status;\n    this.statusText = statusText || \"\";\n    this.data = data;\n  }\n\n}\n/**\n * Check if the given error is an ErrorResponse generated from a 4xx/5xx\n * Response throw from an action/loader\n */\n\nfunction isRouteErrorResponse(e) {\n  return e instanceof ErrorResponse;\n}\n\nconst IDLE_NAVIGATION = {\n  state: \"idle\",\n  location: undefined,\n  formMethod: undefined,\n  formAction: undefined,\n  formEncType: undefined,\n  formData: undefined\n};\nconst IDLE_FETCHER = {\n  state: \"idle\",\n  data: undefined,\n  formMethod: undefined,\n  formAction: undefined,\n  formEncType: undefined,\n  formData: undefined\n}; //#endregion\n////////////////////////////////////////////////////////////////////////////////\n//#region createRouter\n////////////////////////////////////////////////////////////////////////////////\n\n/**\n * Create a router and listen to history POP navigations\n */\n\nfunction createRouter(init) {\n  invariant(init.routes.length > 0, \"You must provide a non-empty routes array to createRouter\");\n  let dataRoutes = convertRoutesToDataRoutes(init.routes); // Cleanup function for history\n\n  let unlistenHistory = null; // Externally-provided functions to call on all state changes\n\n  let subscribers = new Set(); // Externally-provided object to hold scroll restoration locations during routing\n\n  let savedScrollPositions = null; // Externally-provided function to get scroll restoration keys\n\n  let getScrollRestorationKey = null; // Externally-provided function to get current scroll position\n\n  let getScrollPosition = null; // One-time flag to control the initial hydration scroll restoration.  Because\n  // we don't get the saved positions from <ScrollRestoration /> until _after_\n  // the initial render, we need to manually trigger a separate updateState to\n  // send along the restoreScrollPosition\n\n  let initialScrollRestored = false;\n  let initialMatches = matchRoutes(dataRoutes, init.history.location, init.basename);\n  let initialErrors = null;\n\n  if (initialMatches == null) {\n    // If we do not match a user-provided-route, fall back to the root\n    // to allow the error boundary to take over\n    let {\n      matches,\n      route,\n      error\n    } = getNotFoundMatches(dataRoutes);\n    initialMatches = matches;\n    initialErrors = {\n      [route.id]: error\n    };\n  }\n\n  let initialized = !initialMatches.some(m => m.route.loader) || init.hydrationData != null;\n  let router;\n  let state = {\n    historyAction: init.history.action,\n    location: init.history.location,\n    matches: initialMatches,\n    initialized,\n    navigation: IDLE_NAVIGATION,\n    restoreScrollPosition: null,\n    preventScrollReset: false,\n    revalidation: \"idle\",\n    loaderData: init.hydrationData && init.hydrationData.loaderData || {},\n    actionData: init.hydrationData && init.hydrationData.actionData || null,\n    errors: init.hydrationData && init.hydrationData.errors || initialErrors,\n    fetchers: new Map()\n  }; // -- Stateful internal variables to manage navigations --\n  // Current navigation in progress (to be committed in completeNavigation)\n\n  let pendingAction = Action.Pop; // Should the current navigation prevent the scroll reset if scroll cannot\n  // be restored?\n\n  let pendingPreventScrollReset = false; // AbortController for the active navigation\n\n  let pendingNavigationController; // We use this to avoid touching history in completeNavigation if a\n  // revalidation is entirely uninterrupted\n\n  let isUninterruptedRevalidation = false; // Use this internal flag to force revalidation of all loaders:\n  //  - submissions (completed or interrupted)\n  //  - useRevalidate()\n  //  - X-Remix-Revalidate (from redirect)\n\n  let isRevalidationRequired = false; // Use this internal array to capture routes that require revalidation due\n  // to a cancelled deferred on action submission\n\n  let cancelledDeferredRoutes = []; // Use this internal array to capture fetcher loads that were cancelled by an\n  // action navigation and require revalidation\n\n  let cancelledFetcherLoads = []; // AbortControllers for any in-flight fetchers\n\n  let fetchControllers = new Map(); // Track loads based on the order in which they started\n\n  let incrementingLoadId = 0; // Track the outstanding pending navigation data load to be compared against\n  // the globally incrementing load when a fetcher load lands after a completed\n  // navigation\n\n  let pendingNavigationLoadId = -1; // Fetchers that triggered data reloads as a result of their actions\n\n  let fetchReloadIds = new Map(); // Fetchers that triggered redirect navigations from their actions\n\n  let fetchRedirectIds = new Set(); // Most recent href/match for fetcher.load calls for fetchers\n\n  let fetchLoadMatches = new Map(); // Store DeferredData instances for active route matches.  When a\n  // route loader returns defer() we stick one in here.  Then, when a nested\n  // promise resolves we update loaderData.  If a new navigation starts we\n  // cancel active deferreds for eliminated routes.\n\n  let activeDeferreds = new Map(); // Initialize the router, all side effects should be kicked off from here.\n  // Implemented as a Fluent API for ease of:\n  //   let router = createRouter(init).initialize();\n\n  function initialize() {\n    // If history informs us of a POP navigation, start the navigation but do not update\n    // state.  We'll update our own state once the navigation completes\n    unlistenHistory = init.history.listen(_ref => {\n      let {\n        action: historyAction,\n        location\n      } = _ref;\n      return startNavigation(historyAction, location);\n    }); // Kick off initial data load if needed.  Use Pop to avoid modifying history\n\n    if (!state.initialized) {\n      startNavigation(Action.Pop, state.location);\n    }\n\n    return router;\n  } // Clean up a router and it's side effects\n\n\n  function dispose() {\n    if (unlistenHistory) {\n      unlistenHistory();\n    }\n\n    subscribers.clear();\n    pendingNavigationController && pendingNavigationController.abort();\n    state.fetchers.forEach((_, key) => deleteFetcher(key));\n  } // Subscribe to state updates for the router\n\n\n  function subscribe(fn) {\n    subscribers.add(fn);\n    return () => subscribers.delete(fn);\n  } // Update our state and notify the calling context of the change\n\n\n  function updateState(newState) {\n    state = _extends({}, state, newState);\n    subscribers.forEach(subscriber => subscriber(state));\n  } // Complete a navigation returning the state.navigation back to the IDLE_NAVIGATION\n  // and setting state.[historyAction/location/matches] to the new route.\n  // - Location is a required param\n  // - Navigation will always be set to IDLE_NAVIGATION\n  // - Can pass any other state in newState\n\n\n  function completeNavigation(location, newState) {\n    var _state$navigation$for;\n\n    // Deduce if we're in a loading/actionReload state:\n    // - We have committed actionData in the store\n    // - The current navigation was a submission\n    // - We're past the submitting state and into the loading state\n    // - The location we've finished loading is different from the submission\n    //   location, indicating we redirected from the action (avoids false\n    //   positives for loading/submissionRedirect when actionData returned\n    //   on a prior submission)\n    let isActionReload = state.actionData != null && state.navigation.formMethod != null && state.navigation.state === \"loading\" && ((_state$navigation$for = state.navigation.formAction) == null ? void 0 : _state$navigation$for.split(\"?\")[0]) === location.pathname; // Always preserve any existing loaderData from re-used routes\n\n    let newLoaderData = newState.loaderData ? {\n      loaderData: mergeLoaderData(state.loaderData, newState.loaderData, newState.matches || [])\n    } : {};\n    updateState(_extends({}, isActionReload ? {} : {\n      actionData: null\n    }, newState, newLoaderData, {\n      historyAction: pendingAction,\n      location,\n      initialized: true,\n      navigation: IDLE_NAVIGATION,\n      revalidation: \"idle\",\n      // Don't restore on submission navigations\n      restoreScrollPosition: state.navigation.formData ? false : getSavedScrollPosition(location, newState.matches || state.matches),\n      preventScrollReset: pendingPreventScrollReset\n    }));\n\n    if (isUninterruptedRevalidation) ; else if (pendingAction === Action.Pop) ; else if (pendingAction === Action.Push) {\n      init.history.push(location, location.state);\n    } else if (pendingAction === Action.Replace) {\n      init.history.replace(location, location.state);\n    } // Reset stateful navigation vars\n\n\n    pendingAction = Action.Pop;\n    pendingPreventScrollReset = false;\n    isUninterruptedRevalidation = false;\n    isRevalidationRequired = false;\n    cancelledDeferredRoutes = [];\n    cancelledFetcherLoads = [];\n  } // Trigger a navigation event, which can either be a numerical POP or a PUSH\n  // replace with an optional submission\n\n\n  async function navigate(to, opts) {\n    if (typeof to === \"number\") {\n      init.history.go(to);\n      return;\n    }\n\n    let {\n      path,\n      submission,\n      error\n    } = normalizeNavigateOptions(to, opts);\n    let location = createLocation(state.location, path, opts && opts.state);\n    let historyAction = (opts && opts.replace) === true || submission != null ? Action.Replace : Action.Push;\n    let preventScrollReset = opts && \"preventScrollReset\" in opts ? opts.preventScrollReset === true : undefined;\n    return await startNavigation(historyAction, location, {\n      submission,\n      // Send through the formData serialization error if we have one so we can\n      // render at the right error boundary after we match routes\n      pendingError: error,\n      preventScrollReset,\n      replace: opts && opts.replace\n    });\n  } // Revalidate all current loaders.  If a navigation is in progress or if this\n  // is interrupted by a navigation, allow this to \"succeed\" by calling all\n  // loaders during the next loader round\n\n\n  function revalidate() {\n    interruptActiveLoads();\n    updateState({\n      revalidation: \"loading\"\n    }); // If we're currently submitting an action, we don't need to start a new\n    // navigation, we'll just let the follow up loader execution call all loaders\n\n    if (state.navigation.state === \"submitting\") {\n      return;\n    } // If we're currently in an idle state, start a new navigation for the current\n    // action/location and mark it as uninterrupted, which will skip the history\n    // update in completeNavigation\n\n\n    if (state.navigation.state === \"idle\") {\n      startNavigation(state.historyAction, state.location, {\n        startUninterruptedRevalidation: true\n      });\n      return;\n    } // Otherwise, if we're currently in a loading state, just start a new\n    // navigation to the navigation.location but do not trigger an uninterrupted\n    // revalidation so that history correctly updates once the navigation completes\n\n\n    startNavigation(pendingAction || state.historyAction, state.navigation.location, {\n      overrideNavigation: state.navigation\n    });\n  } // Start a navigation to the given action/location.  Can optionally provide a\n  // overrideNavigation which will override the normalLoad in the case of a redirect\n  // navigation\n\n\n  async function startNavigation(historyAction, location, opts) {\n    // Abort any in-progress navigations and start a new one. Unset any ongoing\n    // uninterrupted revalidations unless told otherwise, since we want this\n    // new navigation to update history normally\n    pendingNavigationController && pendingNavigationController.abort();\n    pendingNavigationController = null;\n    pendingAction = historyAction;\n    isUninterruptedRevalidation = (opts && opts.startUninterruptedRevalidation) === true; // Save the current scroll position every time we start a new navigation,\n    // and track whether we should reset scroll on completion\n\n    saveScrollPosition(state.location, state.matches);\n    pendingPreventScrollReset = (opts && opts.preventScrollReset) === true;\n    let loadingNavigation = opts && opts.overrideNavigation;\n    let matches = matchRoutes(dataRoutes, location, init.basename); // Short circuit with a 404 on the root error boundary if we match nothing\n\n    if (!matches) {\n      let {\n        matches: notFoundMatches,\n        route,\n        error\n      } = getNotFoundMatches(dataRoutes); // Cancel all pending deferred on 404s since we don't keep any routes\n\n      cancelActiveDeferreds();\n      completeNavigation(location, {\n        matches: notFoundMatches,\n        loaderData: {},\n        errors: {\n          [route.id]: error\n        }\n      });\n      return;\n    } // Short circuit if it's only a hash change\n\n\n    if (isHashChangeOnly(state.location, location)) {\n      completeNavigation(location, {\n        matches\n      });\n      return;\n    } // Create a controller/Request for this navigation\n\n\n    pendingNavigationController = new AbortController();\n    let request = createRequest(location, pendingNavigationController.signal, opts && opts.submission);\n    let pendingActionData;\n    let pendingError;\n\n    if (opts && opts.pendingError) {\n      // If we have a pendingError, it means the user attempted a GET submission\n      // with binary FormData so assign here and skip to handleLoaders.  That\n      // way we handle calling loaders above the boundary etc.  It's not really\n      // different from an actionError in that sense.\n      pendingError = {\n        [findNearestBoundary(matches).route.id]: opts.pendingError\n      };\n    } else if (opts && opts.submission) {\n      // Call action if we received an action submission\n      let actionOutput = await handleAction(request, location, opts.submission, matches, {\n        replace: opts.replace\n      });\n\n      if (actionOutput.shortCircuited) {\n        return;\n      }\n\n      pendingActionData = actionOutput.pendingActionData;\n      pendingError = actionOutput.pendingActionError;\n\n      let navigation = _extends({\n        state: \"loading\",\n        location\n      }, opts.submission);\n\n      loadingNavigation = navigation;\n    } // Call loaders\n\n\n    let {\n      shortCircuited,\n      loaderData,\n      errors\n    } = await handleLoaders(request, location, matches, loadingNavigation, opts && opts.submission, opts && opts.replace, pendingActionData, pendingError);\n\n    if (shortCircuited) {\n      return;\n    } // Clean up now that the action/loaders have completed.  Don't clean up if\n    // we short circuited because pendingNavigationController will have already\n    // been assigned to a new controller for the next navigation\n\n\n    pendingNavigationController = null;\n    completeNavigation(location, {\n      matches,\n      loaderData,\n      errors\n    });\n  } // Call the action matched by the leaf route for this navigation and handle\n  // redirects/errors\n\n\n  async function handleAction(request, location, submission, matches, opts) {\n    interruptActiveLoads(); // Put us in a submitting state\n\n    let navigation = _extends({\n      state: \"submitting\",\n      location\n    }, submission);\n\n    updateState({\n      navigation\n    }); // Call our action and get the result\n\n    let result;\n    let actionMatch = getTargetMatch(matches, location);\n\n    if (!actionMatch.route.action) {\n      result = getMethodNotAllowedResult(location);\n    } else {\n      result = await callLoaderOrAction(\"action\", request, actionMatch);\n\n      if (request.signal.aborted) {\n        return {\n          shortCircuited: true\n        };\n      }\n    }\n\n    if (isRedirectResult(result)) {\n      let redirectNavigation = _extends({\n        state: \"loading\",\n        location: createLocation(state.location, result.location)\n      }, submission);\n\n      await startRedirectNavigation(result, redirectNavigation, opts && opts.replace);\n      return {\n        shortCircuited: true\n      };\n    }\n\n    if (isErrorResult(result)) {\n      // Store off the pending error - we use it to determine which loaders\n      // to call and will commit it when we complete the navigation\n      let boundaryMatch = findNearestBoundary(matches, actionMatch.route.id); // By default, all submissions are REPLACE navigations, but if the\n      // action threw an error that'll be rendered in an errorElement, we fall\n      // back to PUSH so that the user can use the back button to get back to\n      // the pre-submission form location to try again\n\n      if ((opts && opts.replace) !== true) {\n        pendingAction = Action.Push;\n      }\n\n      return {\n        pendingActionError: {\n          [boundaryMatch.route.id]: result.error\n        }\n      };\n    }\n\n    if (isDeferredResult(result)) {\n      throw new Error(\"defer() is not supported in actions\");\n    }\n\n    return {\n      pendingActionData: {\n        [actionMatch.route.id]: result.data\n      }\n    };\n  } // Call all applicable loaders for the given matches, handling redirects,\n  // errors, etc.\n\n\n  async function handleLoaders(request, location, matches, overrideNavigation, submission, replace, pendingActionData, pendingError) {\n    // Figure out the right navigation we want to use for data loading\n    let loadingNavigation = overrideNavigation;\n\n    if (!loadingNavigation) {\n      let navigation = {\n        state: \"loading\",\n        location,\n        formMethod: undefined,\n        formAction: undefined,\n        formEncType: undefined,\n        formData: undefined\n      };\n      loadingNavigation = navigation;\n    }\n\n    let [matchesToLoad, revalidatingFetchers] = getMatchesToLoad(state, matches, submission, location, isRevalidationRequired, cancelledDeferredRoutes, cancelledFetcherLoads, pendingActionData, pendingError, fetchLoadMatches); // Cancel pending deferreds for no-longer-matched routes or routes we're\n    // about to reload.  Note that if this is an action reload we would have\n    // already cancelled all pending deferreds so this would be a no-op\n\n    cancelActiveDeferreds(routeId => !(matches && matches.some(m => m.route.id === routeId)) || matchesToLoad && matchesToLoad.some(m => m.route.id === routeId)); // Short circuit if we have no loaders to run\n\n    if (matchesToLoad.length === 0 && revalidatingFetchers.length === 0) {\n      completeNavigation(location, {\n        matches,\n        loaderData: mergeLoaderData(state.loaderData, {}, matches),\n        // Commit pending error if we're short circuiting\n        errors: pendingError || null,\n        actionData: pendingActionData || null\n      });\n      return {\n        shortCircuited: true\n      };\n    } // If this is an uninterrupted revalidation, we remain in our current idle\n    // state.  If not, we need to switch to our loading state and load data,\n    // preserving any new action data or existing action data (in the case of\n    // a revalidation interrupting an actionReload)\n\n\n    if (!isUninterruptedRevalidation) {\n      revalidatingFetchers.forEach(_ref2 => {\n        let [key] = _ref2;\n        const fetcher = state.fetchers.get(key);\n        let revalidatingFetcher = {\n          state: \"loading\",\n          data: fetcher && fetcher.data,\n          formMethod: undefined,\n          formAction: undefined,\n          formEncType: undefined,\n          formData: undefined\n        };\n        state.fetchers.set(key, revalidatingFetcher);\n      });\n      updateState(_extends({\n        navigation: loadingNavigation,\n        actionData: pendingActionData || state.actionData || null\n      }, revalidatingFetchers.length > 0 ? {\n        fetchers: new Map(state.fetchers)\n      } : {}));\n    }\n\n    pendingNavigationLoadId = ++incrementingLoadId;\n    revalidatingFetchers.forEach(_ref3 => {\n      let [key] = _ref3;\n      return fetchControllers.set(key, pendingNavigationController);\n    });\n    let {\n      results,\n      loaderResults,\n      fetcherResults\n    } = await callLoadersAndMaybeResolveData(state.matches, matchesToLoad, revalidatingFetchers, request);\n\n    if (request.signal.aborted) {\n      return {\n        shortCircuited: true\n      };\n    } // Clean up _after_ loaders have completed.  Don't clean up if we short\n    // circuited because fetchControllers would have been aborted and\n    // reassigned to new controllers for the next navigation\n\n\n    revalidatingFetchers.forEach(_ref4 => {\n      let [key] = _ref4;\n      return fetchControllers.delete(key);\n    }); // If any loaders returned a redirect Response, start a new REPLACE navigation\n\n    let redirect = findRedirect(results);\n\n    if (redirect) {\n      let redirectNavigation = getLoaderRedirect(state, redirect);\n      await startRedirectNavigation(redirect, redirectNavigation, replace);\n      return {\n        shortCircuited: true\n      };\n    } // Process and commit output from loaders\n\n\n    let {\n      loaderData,\n      errors\n    } = processLoaderData(state, matches, matchesToLoad, loaderResults, pendingError, revalidatingFetchers, fetcherResults, activeDeferreds); // Wire up subscribers to update loaderData as promises settle\n\n    activeDeferreds.forEach((deferredData, routeId) => {\n      deferredData.subscribe(aborted => {\n        // Note: No need to updateState here since the TrackedPromise on\n        // loaderData is stable across resolve/reject\n        // Remove this instance if we were aborted or if promises have settled\n        if (aborted || deferredData.done) {\n          activeDeferreds.delete(routeId);\n        }\n      });\n    });\n    markFetchRedirectsDone();\n    let didAbortFetchLoads = abortStaleFetchLoads(pendingNavigationLoadId);\n    return _extends({\n      loaderData,\n      errors\n    }, didAbortFetchLoads || revalidatingFetchers.length > 0 ? {\n      fetchers: new Map(state.fetchers)\n    } : {});\n  }\n\n  function getFetcher(key) {\n    return state.fetchers.get(key) || IDLE_FETCHER;\n  } // Trigger a fetcher load/submit for the given fetcher key\n\n\n  function fetch(key, routeId, href, opts) {\n    if (typeof AbortController === \"undefined\") {\n      throw new Error(\"router.fetch() was called during the server render, but it shouldn't be. \" + \"You are likely calling a useFetcher() method in the body of your component. \" + \"Try moving it to a useEffect or a callback.\");\n    }\n\n    if (fetchControllers.has(key)) abortFetcher(key);\n    let matches = matchRoutes(dataRoutes, href, init.basename);\n\n    if (!matches) {\n      setFetcherError(key, routeId, new ErrorResponse(404, \"Not Found\", null));\n      return;\n    }\n\n    let {\n      path,\n      submission\n    } = normalizeNavigateOptions(href, opts, true);\n    let match = getTargetMatch(matches, path);\n\n    if (submission) {\n      handleFetcherAction(key, routeId, path, match, submission);\n      return;\n    } // Store off the match so we can call it's shouldRevalidate on subsequent\n    // revalidations\n\n\n    fetchLoadMatches.set(key, [path, match]);\n    handleFetcherLoader(key, routeId, path, match);\n  } // Call the action for the matched fetcher.submit(), and then handle redirects,\n  // errors, and revalidation\n\n\n  async function handleFetcherAction(key, routeId, path, match, submission) {\n    interruptActiveLoads();\n    fetchLoadMatches.delete(key);\n\n    if (!match.route.action) {\n      let {\n        error\n      } = getMethodNotAllowedResult(path);\n      setFetcherError(key, routeId, error);\n      return;\n    } // Put this fetcher into it's submitting state\n\n\n    let existingFetcher = state.fetchers.get(key);\n\n    let fetcher = _extends({\n      state: \"submitting\"\n    }, submission, {\n      data: existingFetcher && existingFetcher.data\n    });\n\n    state.fetchers.set(key, fetcher);\n    updateState({\n      fetchers: new Map(state.fetchers)\n    }); // Call the action for the fetcher\n\n    let abortController = new AbortController();\n    let fetchRequest = createRequest(path, abortController.signal, submission);\n    fetchControllers.set(key, abortController);\n    let actionResult = await callLoaderOrAction(\"action\", fetchRequest, match);\n\n    if (fetchRequest.signal.aborted) {\n      // We can delete this so long as we weren't aborted by ou our own fetcher\n      // re-submit which would have put _new_ controller is in fetchControllers\n      if (fetchControllers.get(key) === abortController) {\n        fetchControllers.delete(key);\n      }\n\n      return;\n    }\n\n    if (isRedirectResult(actionResult)) {\n      fetchControllers.delete(key);\n      fetchRedirectIds.add(key);\n\n      let loadingFetcher = _extends({\n        state: \"loading\"\n      }, submission, {\n        data: undefined\n      });\n\n      state.fetchers.set(key, loadingFetcher);\n      updateState({\n        fetchers: new Map(state.fetchers)\n      });\n\n      let redirectNavigation = _extends({\n        state: \"loading\",\n        location: createLocation(state.location, actionResult.location)\n      }, submission);\n\n      await startRedirectNavigation(actionResult, redirectNavigation);\n      return;\n    } // Process any non-redirect errors thrown\n\n\n    if (isErrorResult(actionResult)) {\n      setFetcherError(key, routeId, actionResult.error);\n      return;\n    }\n\n    if (isDeferredResult(actionResult)) {\n      invariant(false, \"defer() is not supported in actions\");\n    } // Start the data load for current matches, or the next location if we're\n    // in the middle of a navigation\n\n\n    let nextLocation = state.navigation.location || state.location;\n    let revalidationRequest = createRequest(nextLocation, abortController.signal);\n    let matches = state.navigation.state !== \"idle\" ? matchRoutes(dataRoutes, state.navigation.location, init.basename) : state.matches;\n    invariant(matches, \"Didn't find any matches after fetcher action\");\n    let loadId = ++incrementingLoadId;\n    fetchReloadIds.set(key, loadId);\n\n    let loadFetcher = _extends({\n      state: \"loading\",\n      data: actionResult.data\n    }, submission);\n\n    state.fetchers.set(key, loadFetcher);\n    let [matchesToLoad, revalidatingFetchers] = getMatchesToLoad(state, matches, submission, nextLocation, isRevalidationRequired, cancelledDeferredRoutes, cancelledFetcherLoads, {\n      [match.route.id]: actionResult.data\n    }, undefined, // No need to send through errors since we short circuit above\n    fetchLoadMatches); // Put all revalidating fetchers into the loading state, except for the\n    // current fetcher which we want to keep in it's current loading state which\n    // contains it's action submission info + action data\n\n    revalidatingFetchers.filter(_ref5 => {\n      let [staleKey] = _ref5;\n      return staleKey !== key;\n    }).forEach(_ref6 => {\n      let [staleKey] = _ref6;\n      let existingFetcher = state.fetchers.get(staleKey);\n      let revalidatingFetcher = {\n        state: \"loading\",\n        data: existingFetcher && existingFetcher.data,\n        formMethod: undefined,\n        formAction: undefined,\n        formEncType: undefined,\n        formData: undefined\n      };\n      state.fetchers.set(staleKey, revalidatingFetcher);\n      fetchControllers.set(staleKey, abortController);\n    });\n    updateState({\n      fetchers: new Map(state.fetchers)\n    });\n    let {\n      results,\n      loaderResults,\n      fetcherResults\n    } = await callLoadersAndMaybeResolveData(state.matches, matchesToLoad, revalidatingFetchers, revalidationRequest);\n\n    if (abortController.signal.aborted) {\n      return;\n    }\n\n    fetchReloadIds.delete(key);\n    fetchControllers.delete(key);\n    revalidatingFetchers.forEach(_ref7 => {\n      let [staleKey] = _ref7;\n      return fetchControllers.delete(staleKey);\n    });\n    let redirect = findRedirect(results);\n\n    if (redirect) {\n      let redirectNavigation = getLoaderRedirect(state, redirect);\n      await startRedirectNavigation(redirect, redirectNavigation);\n      return;\n    } // Process and commit output from loaders\n\n\n    let {\n      loaderData,\n      errors\n    } = processLoaderData(state, state.matches, matchesToLoad, loaderResults, undefined, revalidatingFetchers, fetcherResults, activeDeferreds);\n    let doneFetcher = {\n      state: \"idle\",\n      data: actionResult.data,\n      formMethod: undefined,\n      formAction: undefined,\n      formEncType: undefined,\n      formData: undefined\n    };\n    state.fetchers.set(key, doneFetcher);\n    let didAbortFetchLoads = abortStaleFetchLoads(loadId); // If we are currently in a navigation loading state and this fetcher is\n    // more recent than the navigation, we want the newer data so abort the\n    // navigation and complete it with the fetcher data\n\n    if (state.navigation.state === \"loading\" && loadId > pendingNavigationLoadId) {\n      invariant(pendingAction, \"Expected pending action\");\n      pendingNavigationController && pendingNavigationController.abort();\n      completeNavigation(state.navigation.location, {\n        matches,\n        loaderData,\n        errors,\n        fetchers: new Map(state.fetchers)\n      });\n    } else {\n      // otherwise just update with the fetcher data, preserving any existing\n      // loaderData for loaders that did not need to reload.  We have to\n      // manually merge here since we aren't going through completeNavigation\n      updateState(_extends({\n        errors,\n        loaderData: mergeLoaderData(state.loaderData, loaderData, matches)\n      }, didAbortFetchLoads ? {\n        fetchers: new Map(state.fetchers)\n      } : {}));\n      isRevalidationRequired = false;\n    }\n  } // Call the matched loader for fetcher.load(), handling redirects, errors, etc.\n\n\n  async function handleFetcherLoader(key, routeId, path, match) {\n    let existingFetcher = state.fetchers.get(key); // Put this fetcher into it's loading state\n\n    let loadingFetcher = {\n      state: \"loading\",\n      formMethod: undefined,\n      formAction: undefined,\n      formEncType: undefined,\n      formData: undefined,\n      data: existingFetcher && existingFetcher.data\n    };\n    state.fetchers.set(key, loadingFetcher);\n    updateState({\n      fetchers: new Map(state.fetchers)\n    }); // Call the loader for this fetcher route match\n\n    let abortController = new AbortController();\n    let fetchRequest = createRequest(path, abortController.signal);\n    fetchControllers.set(key, abortController);\n    let result = await callLoaderOrAction(\"loader\", fetchRequest, match); // Deferred isn't supported or fetcher loads, await everything and treat it\n    // as a normal load.  resolveDeferredData will return undefined if this\n    // fetcher gets aborted, so we just leave result untouched and short circuit\n    // below if that happens\n\n    if (isDeferredResult(result)) {\n      result = (await resolveDeferredData(result, fetchRequest.signal, true)) || result;\n    } // We can delete this so long as we weren't aborted by ou our own fetcher\n    // re-load which would have put _new_ controller is in fetchControllers\n\n\n    if (fetchControllers.get(key) === abortController) {\n      fetchControllers.delete(key);\n    }\n\n    if (fetchRequest.signal.aborted) {\n      return;\n    } // If the loader threw a redirect Response, start a new REPLACE navigation\n\n\n    if (isRedirectResult(result)) {\n      let redirectNavigation = getLoaderRedirect(state, result);\n      await startRedirectNavigation(result, redirectNavigation);\n      return;\n    } // Process any non-redirect errors thrown\n\n\n    if (isErrorResult(result)) {\n      let boundaryMatch = findNearestBoundary(state.matches, routeId);\n      state.fetchers.delete(key); // TODO: In remix, this would reset to IDLE_NAVIGATION if it was a catch -\n      // do we need to behave any differently with our non-redirect errors?\n      // What if it was a non-redirect Response?\n\n      updateState({\n        fetchers: new Map(state.fetchers),\n        errors: {\n          [boundaryMatch.route.id]: result.error\n        }\n      });\n      return;\n    }\n\n    invariant(!isDeferredResult(result), \"Unhandled fetcher deferred data\"); // Put the fetcher back into an idle state\n\n    let doneFetcher = {\n      state: \"idle\",\n      data: result.data,\n      formMethod: undefined,\n      formAction: undefined,\n      formEncType: undefined,\n      formData: undefined\n    };\n    state.fetchers.set(key, doneFetcher);\n    updateState({\n      fetchers: new Map(state.fetchers)\n    });\n  }\n  /**\n   * Utility function to handle redirects returned from an action or loader.\n   * Normally, a redirect \"replaces\" the navigation that triggered it.  So, for\n   * example:\n   *\n   *  - user is on /a\n   *  - user clicks a link to /b\n   *  - loader for /b redirects to /c\n   *\n   * In a non-JS app the browser would track the in-flight navigation to /b and\n   * then replace it with /c when it encountered the redirect response.  In\n   * the end it would only ever update the URL bar with /c.\n   *\n   * In client-side routing using pushState/replaceState, we aim to emulate\n   * this behavior and we also do not update history until the end of the\n   * navigation (including processed redirects).  This means that we never\n   * actually touch history until we've processed redirects, so we just use\n   * the history action from the original navigation (PUSH or REPLACE).\n   */\n\n\n  async function startRedirectNavigation(redirect, navigation, replace) {\n    if (redirect.revalidate) {\n      isRevalidationRequired = true;\n    }\n\n    invariant(navigation.location, \"Expected a location on the redirect navigation\"); // There's no need to abort on redirects, since we don't detect the\n    // redirect until the action/loaders have settled\n\n    pendingNavigationController = null;\n    let redirectHistoryAction = replace === true ? Action.Replace : Action.Push;\n    await startNavigation(redirectHistoryAction, navigation.location, {\n      overrideNavigation: navigation\n    });\n  }\n\n  async function callLoadersAndMaybeResolveData(currentMatches, matchesToLoad, fetchersToLoad, request) {\n    // Call all navigation loaders and revalidating fetcher loaders in parallel,\n    // then slice off the results into separate arrays so we can handle them\n    // accordingly\n    let results = await Promise.all([...matchesToLoad.map(m => callLoaderOrAction(\"loader\", request, m)), ...fetchersToLoad.map(_ref8 => {\n      let [, href, match] = _ref8;\n      return callLoaderOrAction(\"loader\", createRequest(href, request.signal), match);\n    })]);\n    let loaderResults = results.slice(0, matchesToLoad.length);\n    let fetcherResults = results.slice(matchesToLoad.length);\n    await Promise.all([resolveDeferredResults(currentMatches, matchesToLoad, loaderResults, request.signal, false, state.loaderData), resolveDeferredResults(currentMatches, fetchersToLoad.map(_ref9 => {\n      let [,, match] = _ref9;\n      return match;\n    }), fetcherResults, request.signal, true)]);\n    return {\n      results,\n      loaderResults,\n      fetcherResults\n    };\n  }\n\n  function interruptActiveLoads() {\n    // Every interruption triggers a revalidation\n    isRevalidationRequired = true; // Cancel pending route-level deferreds and mark cancelled routes for\n    // revalidation\n\n    cancelledDeferredRoutes.push(...cancelActiveDeferreds()); // Abort in-flight fetcher loads\n\n    fetchLoadMatches.forEach((_, key) => {\n      if (fetchControllers.has(key)) {\n        cancelledFetcherLoads.push(key);\n        abortFetcher(key);\n      }\n    });\n  }\n\n  function setFetcherError(key, routeId, error) {\n    let boundaryMatch = findNearestBoundary(state.matches, routeId);\n    deleteFetcher(key);\n    updateState({\n      errors: {\n        [boundaryMatch.route.id]: error\n      },\n      fetchers: new Map(state.fetchers)\n    });\n  }\n\n  function deleteFetcher(key) {\n    if (fetchControllers.has(key)) abortFetcher(key);\n    fetchLoadMatches.delete(key);\n    fetchReloadIds.delete(key);\n    fetchRedirectIds.delete(key);\n    state.fetchers.delete(key);\n  }\n\n  function abortFetcher(key) {\n    let controller = fetchControllers.get(key);\n    invariant(controller, \"Expected fetch controller: \" + key);\n    controller.abort();\n    fetchControllers.delete(key);\n  }\n\n  function markFetchersDone(keys) {\n    for (let key of keys) {\n      let fetcher = getFetcher(key);\n      let doneFetcher = {\n        state: \"idle\",\n        data: fetcher.data,\n        formMethod: undefined,\n        formAction: undefined,\n        formEncType: undefined,\n        formData: undefined\n      };\n      state.fetchers.set(key, doneFetcher);\n    }\n  }\n\n  function markFetchRedirectsDone() {\n    let doneKeys = [];\n\n    for (let key of fetchRedirectIds) {\n      let fetcher = state.fetchers.get(key);\n      invariant(fetcher, \"Expected fetcher: \" + key);\n\n      if (fetcher.state === \"loading\") {\n        fetchRedirectIds.delete(key);\n        doneKeys.push(key);\n      }\n    }\n\n    markFetchersDone(doneKeys);\n  }\n\n  function abortStaleFetchLoads(landedId) {\n    let yeetedKeys = [];\n\n    for (let [key, id] of fetchReloadIds) {\n      if (id < landedId) {\n        let fetcher = state.fetchers.get(key);\n        invariant(fetcher, \"Expected fetcher: \" + key);\n\n        if (fetcher.state === \"loading\") {\n          abortFetcher(key);\n          fetchReloadIds.delete(key);\n          yeetedKeys.push(key);\n        }\n      }\n    }\n\n    markFetchersDone(yeetedKeys);\n    return yeetedKeys.length > 0;\n  }\n\n  function cancelActiveDeferreds(predicate) {\n    let cancelledRouteIds = [];\n    activeDeferreds.forEach((dfd, routeId) => {\n      if (!predicate || predicate(routeId)) {\n        // Cancel the deferred - but do not remove from activeDeferreds here -\n        // we rely on the subscribers to do that so our tests can assert proper\n        // cleanup via _internalActiveDeferreds\n        dfd.cancel();\n        cancelledRouteIds.push(routeId);\n        activeDeferreds.delete(routeId);\n      }\n    });\n    return cancelledRouteIds;\n  } // Opt in to capturing and reporting scroll positions during navigations,\n  // used by the <ScrollRestoration> component\n\n\n  function enableScrollRestoration(positions, getPosition, getKey) {\n    savedScrollPositions = positions;\n    getScrollPosition = getPosition;\n\n    getScrollRestorationKey = getKey || (location => location.key); // Perform initial hydration scroll restoration, since we miss the boat on\n    // the initial updateState() because we've not yet rendered <ScrollRestoration/>\n    // and therefore have no savedScrollPositions available\n\n\n    if (!initialScrollRestored && state.navigation === IDLE_NAVIGATION) {\n      initialScrollRestored = true;\n      let y = getSavedScrollPosition(state.location, state.matches);\n\n      if (y != null) {\n        updateState({\n          restoreScrollPosition: y\n        });\n      }\n    }\n\n    return () => {\n      savedScrollPositions = null;\n      getScrollPosition = null;\n      getScrollRestorationKey = null;\n    };\n  }\n\n  function saveScrollPosition(location, matches) {\n    if (savedScrollPositions && getScrollRestorationKey && getScrollPosition) {\n      let userMatches = matches.map(m => createUseMatchesMatch(m, state.loaderData));\n      let key = getScrollRestorationKey(location, userMatches) || location.key;\n      savedScrollPositions[key] = getScrollPosition();\n    }\n  }\n\n  function getSavedScrollPosition(location, matches) {\n    if (savedScrollPositions && getScrollRestorationKey && getScrollPosition) {\n      let userMatches = matches.map(m => createUseMatchesMatch(m, state.loaderData));\n      let key = getScrollRestorationKey(location, userMatches) || location.key;\n      let y = savedScrollPositions[key];\n\n      if (typeof y === \"number\") {\n        return y;\n      }\n    }\n\n    return null;\n  }\n\n  router = {\n    get basename() {\n      return init.basename;\n    },\n\n    get state() {\n      return state;\n    },\n\n    get routes() {\n      return dataRoutes;\n    },\n\n    initialize,\n    subscribe,\n    enableScrollRestoration,\n    navigate,\n    fetch,\n    revalidate,\n    createHref,\n    getFetcher,\n    deleteFetcher,\n    dispose,\n    _internalFetchControllers: fetchControllers,\n    _internalActiveDeferreds: activeDeferreds\n  };\n  return router;\n} //#endregion\n////////////////////////////////////////////////////////////////////////////////\n//#region createStaticHandler\n////////////////////////////////////////////////////////////////////////////////\n\nfunction unstable_createStaticHandler(routes) {\n  invariant(routes.length > 0, \"You must provide a non-empty routes array to unstable_createStaticHandler\");\n  let dataRoutes = convertRoutesToDataRoutes(routes);\n\n  async function query(request) {\n    let {\n      location,\n      result\n    } = await queryImpl(request);\n\n    if (result instanceof Response) {\n      return result;\n    } // When returning StaticHandlerContext, we patch back in the location here\n    // since we need it for React Context.  But this helps keep our submit and\n    // loadRouteData operating on a Request instead of a Location\n\n\n    return _extends({\n      location\n    }, result);\n  }\n\n  async function queryRoute(request, routeId) {\n    let {\n      result\n    } = await queryImpl(request, routeId);\n\n    if (result instanceof Response) {\n      return result;\n    }\n\n    let error = result.errors ? Object.values(result.errors)[0] : undefined;\n\n    if (error !== undefined) {\n      // While we always re-throw Responses returned from loaders/actions\n      // directly for route requests and prevent the unwrapping into an\n      // ErrorResponse, we still need this for error cases _prior_ the\n      // execution of the loader/action, such as a 404/405 error.\n      if (isRouteErrorResponse(error)) {\n        return new Response(error.data, {\n          status: error.status,\n          statusText: error.statusText\n        });\n      } // If we got back result.errors, that means the loader/action threw\n      // _something_ that wasn't a Response, but it's not guaranteed/required\n      // to be an `instanceof Error` either, so we have to use throw here to\n      // preserve the \"error\" state outside of queryImpl.\n\n\n      throw error;\n    } // Pick off the right state value to return\n\n\n    let routeData = [result.actionData, result.loaderData].find(v => v);\n    let value = Object.values(routeData || {})[0];\n\n    if (isRouteErrorResponse(value)) {\n      return new Response(value.data, {\n        status: value.status,\n        statusText: value.statusText\n      });\n    }\n\n    return value;\n  }\n\n  async function queryImpl(request, routeId) {\n    invariant(request.method !== \"HEAD\", \"query()/queryRoute() do not support HEAD requests\");\n    invariant(request.signal, \"query()/queryRoute() requests must contain an AbortController signal\");\n    let {\n      location,\n      matches,\n      shortCircuitState\n    } = matchRequest(request, routeId);\n\n    try {\n      if (shortCircuitState) {\n        return {\n          location,\n          result: shortCircuitState\n        };\n      }\n\n      if (request.method !== \"GET\") {\n        let result = await submit(request, matches, getTargetMatch(matches, location), routeId != null);\n        return {\n          location,\n          result\n        };\n      }\n\n      let result = await loadRouteData(request, matches, routeId != null);\n      return {\n        location,\n        result: _extends({}, result, {\n          actionData: null,\n          actionHeaders: {}\n        })\n      };\n    } catch (e) {\n      if (e instanceof Response) {\n        return {\n          location,\n          result: e\n        };\n      }\n\n      throw e;\n    }\n  }\n\n  async function submit(request, matches, actionMatch, isRouteRequest) {\n    let result;\n\n    if (!actionMatch.route.action) {\n      let href = createHref(new URL(request.url));\n      result = getMethodNotAllowedResult(href);\n    } else {\n      result = await callLoaderOrAction(\"action\", request, actionMatch, true, isRouteRequest);\n\n      if (request.signal.aborted) {\n        let method = isRouteRequest ? \"queryRoute\" : \"query\";\n        throw new Error(method + \"() call aborted\");\n      }\n    }\n\n    if (isRedirectResult(result)) {\n      // Uhhhh - this should never happen, we should always throw these from\n      // calLoaderOrAction, but the type narrowing here keeps TS happy and we\n      // can get back on the \"throw all redirect responses\" train here should\n      // this ever happen :/\n      throw new Response(null, {\n        status: result.status,\n        headers: {\n          Location: result.location\n        }\n      });\n    }\n\n    if (isDeferredResult(result)) {\n      throw new Error(\"defer() is not supported in actions\");\n    }\n\n    if (isRouteRequest) {\n      if (isErrorResult(result)) {\n        let boundaryMatch = findNearestBoundary(matches, actionMatch.route.id);\n        return {\n          matches: [actionMatch],\n          loaderData: {},\n          actionData: null,\n          errors: {\n            [boundaryMatch.route.id]: result.error\n          },\n          // Note: statusCode + headers are unused here since queryRoute will\n          // return the raw Response or value\n          statusCode: 500,\n          loaderHeaders: {},\n          actionHeaders: {}\n        };\n      }\n\n      return {\n        matches: [actionMatch],\n        loaderData: {},\n        actionData: {\n          [actionMatch.route.id]: result.data\n        },\n        errors: null,\n        // Note: statusCode + headers are unused here since queryRoute will\n        // return the raw Response or value\n        statusCode: 200,\n        loaderHeaders: {},\n        actionHeaders: {}\n      };\n    }\n\n    if (isErrorResult(result)) {\n      // Store off the pending error - we use it to determine which loaders\n      // to call and will commit it when we complete the navigation\n      let boundaryMatch = findNearestBoundary(matches, actionMatch.route.id);\n      let context = await loadRouteData(request, matches, isRouteRequest, {\n        [boundaryMatch.route.id]: result.error\n      }); // action status codes take precedence over loader status codes\n\n      return _extends({}, context, {\n        statusCode: isRouteErrorResponse(result.error) ? result.error.status : 500,\n        actionData: null,\n        actionHeaders: _extends({}, result.headers ? {\n          [actionMatch.route.id]: result.headers\n        } : {})\n      });\n    }\n\n    let context = await loadRouteData(request, matches, isRouteRequest);\n    return _extends({}, context, result.statusCode ? {\n      statusCode: result.statusCode\n    } : {}, {\n      actionData: {\n        [actionMatch.route.id]: result.data\n      },\n      actionHeaders: _extends({}, result.headers ? {\n        [actionMatch.route.id]: result.headers\n      } : {})\n    });\n  }\n\n  async function loadRouteData(request, matches, isRouteRequest, pendingActionError) {\n    let matchesToLoad = getLoaderMatchesUntilBoundary(matches, Object.keys(pendingActionError || {})[0]).filter(m => m.route.loader); // Short circuit if we have no loaders to run\n\n    if (matchesToLoad.length === 0) {\n      return {\n        matches,\n        loaderData: {},\n        errors: pendingActionError || null,\n        statusCode: 200,\n        loaderHeaders: {}\n      };\n    }\n\n    let results = await Promise.all([...matchesToLoad.map(m => callLoaderOrAction(\"loader\", request, m, true, isRouteRequest))]);\n\n    if (request.signal.aborted) {\n      let method = isRouteRequest ? \"queryRoute\" : \"query\";\n      throw new Error(method + \"() call aborted\");\n    } // Can't do anything with these without the Remix side of things, so just\n    // cancel them for now\n\n\n    results.forEach(result => {\n      if (isDeferredResult(result)) {\n        result.deferredData.cancel();\n      }\n    }); // Process and commit output from loaders\n\n    let context = processRouteLoaderData(matches, matchesToLoad, results, pendingActionError);\n    return _extends({}, context, {\n      matches\n    });\n  }\n\n  function matchRequest(req, routeId) {\n    let url = new URL(req.url);\n    let location = createLocation(\"\", createPath(url), null, \"default\");\n    let matches = matchRoutes(dataRoutes, location);\n\n    if (matches && routeId) {\n      matches = matches.filter(m => m.route.id === routeId);\n    } // Short circuit with a 404 if we match nothing\n\n\n    if (!matches) {\n      let {\n        matches: notFoundMatches,\n        route,\n        error\n      } = getNotFoundMatches(dataRoutes);\n      return {\n        location,\n        matches: notFoundMatches,\n        shortCircuitState: {\n          matches: notFoundMatches,\n          loaderData: {},\n          actionData: null,\n          errors: {\n            [route.id]: error\n          },\n          statusCode: 404,\n          loaderHeaders: {},\n          actionHeaders: {}\n        }\n      };\n    }\n\n    return {\n      location,\n      matches\n    };\n  }\n\n  return {\n    dataRoutes,\n    query,\n    queryRoute\n  };\n} //#endregion\n////////////////////////////////////////////////////////////////////////////////\n//#region Helpers\n////////////////////////////////////////////////////////////////////////////////\n\n/**\n * Given an existing StaticHandlerContext and an error thrown at render time,\n * provide an updated StaticHandlerContext suitable for a second SSR render\n */\n\nfunction getStaticContextFromError(routes, context, error) {\n  let newContext = _extends({}, context, {\n    statusCode: 500,\n    errors: {\n      [context._deepestRenderedBoundaryId || routes[0].id]: error\n    }\n  });\n\n  return newContext;\n} // Normalize navigation options by converting formMethod=GET formData objects to\n// URLSearchParams so they behave identically to links with query params\n\nfunction normalizeNavigateOptions(to, opts, isFetcher) {\n  if (isFetcher === void 0) {\n    isFetcher = false;\n  }\n\n  let path = typeof to === \"string\" ? to : createPath(to); // Return location verbatim on non-submission navigations\n\n  if (!opts || !(\"formMethod\" in opts) && !(\"formData\" in opts)) {\n    return {\n      path\n    };\n  } // Create a Submission on non-GET navigations\n\n\n  if (opts.formMethod != null && opts.formMethod !== \"get\") {\n    return {\n      path,\n      submission: {\n        formMethod: opts.formMethod,\n        formAction: createHref(parsePath(path)),\n        formEncType: opts && opts.formEncType || \"application/x-www-form-urlencoded\",\n        formData: opts.formData\n      }\n    };\n  } // No formData to flatten for GET submission\n\n\n  if (!opts.formData) {\n    return {\n      path\n    };\n  } // Flatten submission onto URLSearchParams for GET submissions\n\n\n  let parsedPath = parsePath(path);\n\n  try {\n    let searchParams = convertFormDataToSearchParams(opts.formData); // Since fetcher GET submissions only run a single loader (as opposed to\n    // navigation GET submissions which run all loaders), we need to preserve\n    // any incoming ?index params\n\n    if (isFetcher && parsedPath.search && hasNakedIndexQuery(parsedPath.search)) {\n      searchParams.append(\"index\", \"\");\n    }\n\n    parsedPath.search = \"?\" + searchParams;\n  } catch (e) {\n    return {\n      path,\n      error: new ErrorResponse(400, \"Bad Request\", \"Cannot submit binary form data using GET\")\n    };\n  }\n\n  return {\n    path: createPath(parsedPath)\n  };\n}\n\nfunction getLoaderRedirect(state, redirect) {\n  let {\n    formMethod,\n    formAction,\n    formEncType,\n    formData\n  } = state.navigation;\n  let navigation = {\n    state: \"loading\",\n    location: createLocation(state.location, redirect.location),\n    formMethod: formMethod || undefined,\n    formAction: formAction || undefined,\n    formEncType: formEncType || undefined,\n    formData: formData || undefined\n  };\n  return navigation;\n} // Filter out all routes below any caught error as they aren't going to\n// render so we don't need to load them\n\n\nfunction getLoaderMatchesUntilBoundary(matches, boundaryId) {\n  let boundaryMatches = matches;\n\n  if (boundaryId) {\n    let index = matches.findIndex(m => m.route.id === boundaryId);\n\n    if (index >= 0) {\n      boundaryMatches = matches.slice(0, index);\n    }\n  }\n\n  return boundaryMatches;\n}\n\nfunction getMatchesToLoad(state, matches, submission, location, isRevalidationRequired, cancelledDeferredRoutes, cancelledFetcherLoads, pendingActionData, pendingError, fetchLoadMatches) {\n  let actionResult = pendingError ? Object.values(pendingError)[0] : pendingActionData ? Object.values(pendingActionData)[0] : null; // Pick navigation matches that are net-new or qualify for revalidation\n\n  let boundaryId = pendingError ? Object.keys(pendingError)[0] : undefined;\n  let boundaryMatches = getLoaderMatchesUntilBoundary(matches, boundaryId);\n  let navigationMatches = boundaryMatches.filter((match, index) => match.route.loader != null && (isNewLoader(state.loaderData, state.matches[index], match) || // If this route had a pending deferred cancelled it must be revalidated\n  cancelledDeferredRoutes.some(id => id === match.route.id) || shouldRevalidateLoader(state.location, state.matches[index], submission, location, match, isRevalidationRequired, actionResult))); // Pick fetcher.loads that need to be revalidated\n\n  let revalidatingFetchers = [];\n  fetchLoadMatches && fetchLoadMatches.forEach((_ref10, key) => {\n    let [href, match] = _ref10;\n\n    // This fetcher was cancelled from a prior action submission - force reload\n    if (cancelledFetcherLoads.includes(key)) {\n      revalidatingFetchers.push([key, href, match]);\n    } else if (isRevalidationRequired) {\n      let shouldRevalidate = shouldRevalidateLoader(href, match, submission, href, match, isRevalidationRequired, actionResult);\n\n      if (shouldRevalidate) {\n        revalidatingFetchers.push([key, href, match]);\n      }\n    }\n  });\n  return [navigationMatches, revalidatingFetchers];\n}\n\nfunction isNewLoader(currentLoaderData, currentMatch, match) {\n  let isNew = // [a] -> [a, b]\n  !currentMatch || // [a, b] -> [a, c]\n  match.route.id !== currentMatch.route.id; // Handle the case that we don't have data for a re-used route, potentially\n  // from a prior error or from a cancelled pending deferred\n\n  let isMissingData = currentLoaderData[match.route.id] === undefined; // Always load if this is a net-new route or we don't yet have data\n\n  return isNew || isMissingData;\n}\n\nfunction isNewRouteInstance(currentMatch, match) {\n  let currentPath = currentMatch.route.path;\n  return (// param change for this match, /users/123 -> /users/456\n    currentMatch.pathname !== match.pathname || // splat param changed, which is not present in match.path\n    // e.g. /files/images/avatar.jpg -> files/finances.xls\n    currentPath && currentPath.endsWith(\"*\") && currentMatch.params[\"*\"] !== match.params[\"*\"]\n  );\n}\n\nfunction shouldRevalidateLoader(currentLocation, currentMatch, submission, location, match, isRevalidationRequired, actionResult) {\n  let currentUrl = createURL(currentLocation);\n  let currentParams = currentMatch.params;\n  let nextUrl = createURL(location);\n  let nextParams = match.params; // This is the default implementation as to when we revalidate.  If the route\n  // provides it's own implementation, then we give them full control but\n  // provide this value so they can leverage it if needed after they check\n  // their own specific use cases\n  // Note that fetchers always provide the same current/next locations so the\n  // URL-based checks here don't apply to fetcher shouldRevalidate calls\n\n  let defaultShouldRevalidate = isNewRouteInstance(currentMatch, match) || // Clicked the same link, resubmitted a GET form\n  currentUrl.toString() === nextUrl.toString() || // Search params affect all loaders\n  currentUrl.search !== nextUrl.search || // Forced revalidation due to submission, useRevalidate, or X-Remix-Revalidate\n  isRevalidationRequired;\n\n  if (match.route.shouldRevalidate) {\n    let routeChoice = match.route.shouldRevalidate(_extends({\n      currentUrl,\n      currentParams,\n      nextUrl,\n      nextParams\n    }, submission, {\n      actionResult,\n      defaultShouldRevalidate\n    }));\n\n    if (typeof routeChoice === \"boolean\") {\n      return routeChoice;\n    }\n  }\n\n  return defaultShouldRevalidate;\n}\n\nasync function callLoaderOrAction(type, request, match, skipRedirects, isRouteRequest) {\n  if (skipRedirects === void 0) {\n    skipRedirects = false;\n  }\n\n  if (isRouteRequest === void 0) {\n    isRouteRequest = false;\n  }\n\n  let resultType;\n  let result; // Setup a promise we can race against so that abort signals short circuit\n\n  let reject;\n  let abortPromise = new Promise((_, r) => reject = r);\n\n  let onReject = () => reject();\n\n  request.signal.addEventListener(\"abort\", onReject);\n\n  try {\n    let handler = match.route[type];\n    invariant(handler, \"Could not find the \" + type + \" to run on the \\\"\" + match.route.id + \"\\\" route\");\n    result = await Promise.race([handler({\n      request,\n      params: match.params\n    }), abortPromise]);\n  } catch (e) {\n    resultType = ResultType.error;\n    result = e;\n  } finally {\n    request.signal.removeEventListener(\"abort\", onReject);\n  }\n\n  if (result instanceof Response) {\n    // Process redirects\n    let status = result.status;\n    let location = result.headers.get(\"Location\"); // For SSR single-route requests, we want to hand Responses back directly\n    // without unwrapping\n\n    if (isRouteRequest) {\n      throw result;\n    }\n\n    if (status >= 300 && status <= 399 && location != null) {\n      // Don't process redirects in the router during SSR document requests.\n      // Instead, throw the Response and let the server handle it with an HTTP\n      // redirect\n      if (skipRedirects) {\n        throw result;\n      }\n\n      return {\n        type: ResultType.redirect,\n        status,\n        location,\n        revalidate: result.headers.get(\"X-Remix-Revalidate\") !== null\n      };\n    }\n\n    let data;\n    let contentType = result.headers.get(\"Content-Type\");\n\n    if (contentType && contentType.startsWith(\"application/json\")) {\n      data = await result.json();\n    } else {\n      data = await result.text();\n    }\n\n    if (resultType === ResultType.error) {\n      return {\n        type: resultType,\n        error: new ErrorResponse(status, result.statusText, data),\n        headers: result.headers\n      };\n    }\n\n    return {\n      type: ResultType.data,\n      data,\n      statusCode: result.status,\n      headers: result.headers\n    };\n  }\n\n  if (resultType === ResultType.error) {\n    return {\n      type: resultType,\n      error: result\n    };\n  }\n\n  if (result instanceof DeferredData) {\n    return {\n      type: ResultType.deferred,\n      deferredData: result\n    };\n  }\n\n  return {\n    type: ResultType.data,\n    data: result\n  };\n}\n\nfunction createRequest(location, signal, submission) {\n  let url = createURL(location).toString();\n  let init = {\n    signal\n  };\n\n  if (submission) {\n    let {\n      formMethod,\n      formEncType,\n      formData\n    } = submission;\n    init.method = formMethod.toUpperCase();\n    init.body = formEncType === \"application/x-www-form-urlencoded\" ? convertFormDataToSearchParams(formData) : formData;\n  } // Content-Type is inferred (https://fetch.spec.whatwg.org/#dom-request)\n\n\n  return new Request(url, init);\n}\n\nfunction convertFormDataToSearchParams(formData) {\n  let searchParams = new URLSearchParams();\n\n  for (let [key, value] of formData.entries()) {\n    invariant(typeof value === \"string\", 'File inputs are not supported with encType \"application/x-www-form-urlencoded\", ' + 'please use \"multipart/form-data\" instead.');\n    searchParams.append(key, value);\n  }\n\n  return searchParams;\n}\n\nfunction processRouteLoaderData(matches, matchesToLoad, results, pendingError, activeDeferreds) {\n  // Fill in loaderData/errors from our loaders\n  let loaderData = {};\n  let errors = null;\n  let statusCode;\n  let foundError = false;\n  let loaderHeaders = {}; // Process loader results into state.loaderData/state.errors\n\n  results.forEach((result, index) => {\n    let id = matchesToLoad[index].route.id;\n    invariant(!isRedirectResult(result), \"Cannot handle redirect results in processLoaderData\");\n\n    if (isErrorResult(result)) {\n      // Look upwards from the matched route for the closest ancestor\n      // error boundary, defaulting to the root match\n      let boundaryMatch = findNearestBoundary(matches, id);\n      let error = result.error; // If we have a pending action error, we report it at the highest-route\n      // that throws a loader error, and then clear it out to indicate that\n      // it was consumed\n\n      if (pendingError) {\n        error = Object.values(pendingError)[0];\n        pendingError = undefined;\n      }\n\n      errors = Object.assign(errors || {}, {\n        [boundaryMatch.route.id]: error\n      }); // Once we find our first (highest) error, we set the status code and\n      // prevent deeper status codes from overriding\n\n      if (!foundError) {\n        foundError = true;\n        statusCode = isRouteErrorResponse(result.error) ? result.error.status : 500;\n      }\n\n      if (result.headers) {\n        loaderHeaders[id] = result.headers;\n      }\n    } else if (isDeferredResult(result)) {\n      activeDeferreds && activeDeferreds.set(id, result.deferredData);\n      loaderData[id] = result.deferredData.data; // TODO: Add statusCode/headers once we wire up streaming in Remix\n    } else {\n      loaderData[id] = result.data; // Error status codes always override success status codes, but if all\n      // loaders are successful we take the deepest status code.\n\n      if (result.statusCode != null && result.statusCode !== 200 && !foundError) {\n        statusCode = result.statusCode;\n      }\n\n      if (result.headers) {\n        loaderHeaders[id] = result.headers;\n      }\n    }\n  }); // If we didn't consume the pending action error (i.e., all loaders\n  // resolved), then consume it here\n\n  if (pendingError) {\n    errors = pendingError;\n  }\n\n  return {\n    loaderData,\n    errors,\n    statusCode: statusCode || 200,\n    loaderHeaders\n  };\n}\n\nfunction processLoaderData(state, matches, matchesToLoad, results, pendingError, revalidatingFetchers, fetcherResults, activeDeferreds) {\n  let {\n    loaderData,\n    errors\n  } = processRouteLoaderData(matches, matchesToLoad, results, pendingError, activeDeferreds); // Process results from our revalidating fetchers\n\n  for (let index = 0; index < revalidatingFetchers.length; index++) {\n    let [key,, match] = revalidatingFetchers[index];\n    invariant(fetcherResults !== undefined && fetcherResults[index] !== undefined, \"Did not find corresponding fetcher result\");\n    let result = fetcherResults[index]; // Process fetcher non-redirect errors\n\n    if (isErrorResult(result)) {\n      let boundaryMatch = findNearestBoundary(state.matches, match.route.id);\n\n      if (!(errors && errors[boundaryMatch.route.id])) {\n        errors = _extends({}, errors, {\n          [boundaryMatch.route.id]: result.error\n        });\n      }\n\n      state.fetchers.delete(key);\n    } else if (isRedirectResult(result)) {\n      // Should never get here, redirects should get processed above, but we\n      // keep this to type narrow to a success result in the else\n      throw new Error(\"Unhandled fetcher revalidation redirect\");\n    } else if (isDeferredResult(result)) {\n      // Should never get here, deferred data should be awaited for fetchers\n      // in resolveDeferredResults\n      throw new Error(\"Unhandled fetcher deferred data\");\n    } else {\n      let doneFetcher = {\n        state: \"idle\",\n        data: result.data,\n        formMethod: undefined,\n        formAction: undefined,\n        formEncType: undefined,\n        formData: undefined\n      };\n      state.fetchers.set(key, doneFetcher);\n    }\n  }\n\n  return {\n    loaderData,\n    errors\n  };\n}\n\nfunction mergeLoaderData(loaderData, newLoaderData, matches) {\n  let mergedLoaderData = _extends({}, newLoaderData);\n\n  matches.forEach(match => {\n    let id = match.route.id;\n\n    if (newLoaderData[id] === undefined && loaderData[id] !== undefined) {\n      mergedLoaderData[id] = loaderData[id];\n    }\n  });\n  return mergedLoaderData;\n} // Find the nearest error boundary, looking upwards from the leaf route (or the\n// route specified by routeId) for the closest ancestor error boundary,\n// defaulting to the root match\n\n\nfunction findNearestBoundary(matches, routeId) {\n  let eligibleMatches = routeId ? matches.slice(0, matches.findIndex(m => m.route.id === routeId) + 1) : [...matches];\n  return eligibleMatches.reverse().find(m => m.route.hasErrorBoundary === true) || matches[0];\n}\n\nfunction getNotFoundMatches(routes) {\n  // Prefer a root layout route if present, otherwise shim in a route object\n  let route = routes.find(r => r.index || r.path === \"\" || r.path === \"/\") || {\n    id: \"__shim-404-route__\"\n  };\n  return {\n    matches: [{\n      params: {},\n      pathname: \"\",\n      pathnameBase: \"\",\n      route\n    }],\n    route,\n    error: new ErrorResponse(404, \"Not Found\", null)\n  };\n}\n\nfunction getMethodNotAllowedResult(path) {\n  let href = typeof path === \"string\" ? path : createHref(path);\n  console.warn(\"You're trying to submit to a route that does not have an action.  To \" + \"fix this, please add an `action` function to the route for \" + (\"[\" + href + \"]\"));\n  return {\n    type: ResultType.error,\n    error: new ErrorResponse(405, \"Method Not Allowed\", \"No action found for [\" + href + \"]\")\n  };\n} // Find any returned redirect errors, starting from the lowest match\n\n\nfunction findRedirect(results) {\n  for (let i = results.length - 1; i >= 0; i--) {\n    let result = results[i];\n\n    if (isRedirectResult(result)) {\n      return result;\n    }\n  }\n} // Create an href to represent a \"server\" URL without the hash\n\n\nfunction createHref(location) {\n  return (location.pathname || \"\") + (location.search || \"\");\n}\n\nfunction isHashChangeOnly(a, b) {\n  return a.pathname === b.pathname && a.search === b.search && a.hash !== b.hash;\n}\n\nfunction isDeferredResult(result) {\n  return result.type === ResultType.deferred;\n}\n\nfunction isErrorResult(result) {\n  return result.type === ResultType.error;\n}\n\nfunction isRedirectResult(result) {\n  return (result && result.type) === ResultType.redirect;\n}\n\nasync function resolveDeferredResults(currentMatches, matchesToLoad, results, signal, isFetcher, currentLoaderData) {\n  for (let index = 0; index < results.length; index++) {\n    let result = results[index];\n    let match = matchesToLoad[index];\n    let currentMatch = currentMatches.find(m => m.route.id === match.route.id);\n    let isRevalidatingLoader = currentMatch != null && !isNewRouteInstance(currentMatch, match) && (currentLoaderData && currentLoaderData[match.route.id]) !== undefined;\n\n    if (isDeferredResult(result) && (isFetcher || isRevalidatingLoader)) {\n      // Note: we do not have to touch activeDeferreds here since we race them\n      // against the signal in resolveDeferredData and they'll get aborted\n      // there if needed\n      await resolveDeferredData(result, signal, isFetcher).then(result => {\n        if (result) {\n          results[index] = result || results[index];\n        }\n      });\n    }\n  }\n}\n\nasync function resolveDeferredData(result, signal, unwrap) {\n  if (unwrap === void 0) {\n    unwrap = false;\n  }\n\n  let aborted = await result.deferredData.resolveData(signal);\n\n  if (aborted) {\n    return;\n  }\n\n  if (unwrap) {\n    try {\n      return {\n        type: ResultType.data,\n        data: result.deferredData.unwrappedData\n      };\n    } catch (e) {\n      // Handle any TrackedPromise._error values encountered while unwrapping\n      return {\n        type: ResultType.error,\n        error: e\n      };\n    }\n  }\n\n  return {\n    type: ResultType.data,\n    data: result.deferredData.data\n  };\n}\n\nfunction hasNakedIndexQuery(search) {\n  return new URLSearchParams(search).getAll(\"index\").some(v => v === \"\");\n} // Note: This should match the format exported by useMatches, so if you change\n// this please also change that :)  Eventually we'll DRY this up\n\n\nfunction createUseMatchesMatch(match, loaderData) {\n  let {\n    route,\n    pathname,\n    params\n  } = match;\n  return {\n    id: route.id,\n    pathname,\n    params,\n    data: loaderData[route.id],\n    handle: route.handle\n  };\n}\n\nfunction getTargetMatch(matches, location) {\n  let search = typeof location === \"string\" ? parsePath(location).search : location.search;\n\n  if (matches[matches.length - 1].route.index && !hasNakedIndexQuery(search || \"\")) {\n    return matches.slice(-2)[0];\n  }\n\n  return matches.slice(-1)[0];\n}\n\nfunction createURL(location) {\n  let base = typeof window !== \"undefined\" && typeof window.location !== \"undefined\" ? window.location.origin : \"unknown://unknown\";\n  let href = typeof location === \"string\" ? location : createHref(location);\n  return new URL(href, base);\n} //#endregion\n\nexport { AbortedDeferredError, Action, ErrorResponse, IDLE_FETCHER, IDLE_NAVIGATION, convertRoutesToDataRoutes as UNSAFE_convertRoutesToDataRoutes, createBrowserHistory, createHashHistory, createMemoryHistory, createPath, createRouter, defer, generatePath, getStaticContextFromError, getToPathname, invariant, isRouteErrorResponse, joinPaths, json, matchPath, matchRoutes, normalizePathname, parsePath, redirect, resolvePath, resolveTo, stripBasename, unstable_createStaticHandler, warning };\n//# sourceMappingURL=router.js.map\n","/**\n * React Router v6.4.2\n *\n * Copyright (c) Remix Software Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE.md file in the root directory of this source tree.\n *\n * @license MIT\n */\nimport { invariant, resolveTo, joinPaths, matchPath, warning, parsePath, matchRoutes, Action, isRouteErrorResponse, createMemoryHistory, stripBasename, AbortedDeferredError, createRouter } from '@remix-run/router';\nexport { AbortedDeferredError, Action as NavigationType, createPath, defer, generatePath, isRouteErrorResponse, json, matchPath, matchRoutes, parsePath, redirect, resolvePath } from '@remix-run/router';\nimport * as React from 'react';\n\nfunction _extends() {\n  _extends = Object.assign ? Object.assign.bind() : function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n  return _extends.apply(this, arguments);\n}\n\n/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n/**\n * inlined Object.is polyfill to avoid requiring consumers ship their own\n * https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/is\n */\n\nfunction isPolyfill(x, y) {\n  return x === y && (x !== 0 || 1 / x === 1 / y) || x !== x && y !== y // eslint-disable-line no-self-compare\n  ;\n}\n\nconst is = typeof Object.is === \"function\" ? Object.is : isPolyfill; // Intentionally not using named imports because Rollup uses dynamic\n// dispatch for CommonJS interop named imports.\n\nconst {\n  useState,\n  useEffect,\n  useLayoutEffect,\n  useDebugValue\n} = React;\nlet didWarnOld18Alpha = false;\nlet didWarnUncachedGetSnapshot = false; // Disclaimer: This shim breaks many of the rules of React, and only works\n// because of a very particular set of implementation details and assumptions\n// -- change any one of them and it will break. The most important assumption\n// is that updates are always synchronous, because concurrent rendering is\n// only available in versions of React that also have a built-in\n// useSyncExternalStore API. And we only use this shim when the built-in API\n// does not exist.\n//\n// Do not assume that the clever hacks used by this hook also work in general.\n// The point of this shim is to replace the need for hacks by other libraries.\n\nfunction useSyncExternalStore$2(subscribe, getSnapshot, // Note: The shim does not use getServerSnapshot, because pre-18 versions of\n// React do not expose a way to check if we're hydrating. So users of the shim\n// will need to track that themselves and return the correct value\n// from `getSnapshot`.\ngetServerSnapshot) {\n  if (process.env.NODE_ENV !== \"production\") {\n    if (!didWarnOld18Alpha) {\n      if (\"startTransition\" in React) {\n        didWarnOld18Alpha = true;\n        console.error(\"You are using an outdated, pre-release alpha of React 18 that \" + \"does not support useSyncExternalStore. The \" + \"use-sync-external-store shim will not work correctly. Upgrade \" + \"to a newer pre-release.\");\n      }\n    }\n  } // Read the current snapshot from the store on every render. Again, this\n  // breaks the rules of React, and only works here because of specific\n  // implementation details, most importantly that updates are\n  // always synchronous.\n\n\n  const value = getSnapshot();\n\n  if (process.env.NODE_ENV !== \"production\") {\n    if (!didWarnUncachedGetSnapshot) {\n      const cachedValue = getSnapshot();\n\n      if (!is(value, cachedValue)) {\n        console.error(\"The result of getSnapshot should be cached to avoid an infinite loop\");\n        didWarnUncachedGetSnapshot = true;\n      }\n    }\n  } // Because updates are synchronous, we don't queue them. Instead we force a\n  // re-render whenever the subscribed state changes by updating an some\n  // arbitrary useState hook. Then, during render, we call getSnapshot to read\n  // the current value.\n  //\n  // Because we don't actually use the state returned by the useState hook, we\n  // can save a bit of memory by storing other stuff in that slot.\n  //\n  // To implement the early bailout, we need to track some things on a mutable\n  // object. Usually, we would put that in a useRef hook, but we can stash it in\n  // our useState hook instead.\n  //\n  // To force a re-render, we call forceUpdate({inst}). That works because the\n  // new object always fails an equality check.\n\n\n  const [{\n    inst\n  }, forceUpdate] = useState({\n    inst: {\n      value,\n      getSnapshot\n    }\n  }); // Track the latest getSnapshot function with a ref. This needs to be updated\n  // in the layout phase so we can access it during the tearing check that\n  // happens on subscribe.\n\n  useLayoutEffect(() => {\n    inst.value = value;\n    inst.getSnapshot = getSnapshot; // Whenever getSnapshot or subscribe changes, we need to check in the\n    // commit phase if there was an interleaved mutation. In concurrent mode\n    // this can happen all the time, but even in synchronous mode, an earlier\n    // effect may have mutated the store.\n\n    if (checkIfSnapshotChanged(inst)) {\n      // Force a re-render.\n      forceUpdate({\n        inst\n      });\n    } // eslint-disable-next-line react-hooks/exhaustive-deps\n\n  }, [subscribe, value, getSnapshot]);\n  useEffect(() => {\n    // Check for changes right before subscribing. Subsequent changes will be\n    // detected in the subscription handler.\n    if (checkIfSnapshotChanged(inst)) {\n      // Force a re-render.\n      forceUpdate({\n        inst\n      });\n    }\n\n    const handleStoreChange = () => {\n      // TODO: Because there is no cross-renderer API for batching updates, it's\n      // up to the consumer of this library to wrap their subscription event\n      // with unstable_batchedUpdates. Should we try to detect when this isn't\n      // the case and print a warning in development?\n      // The store changed. Check if the snapshot changed since the last time we\n      // read from the store.\n      if (checkIfSnapshotChanged(inst)) {\n        // Force a re-render.\n        forceUpdate({\n          inst\n        });\n      }\n    }; // Subscribe to the store and return a clean-up function.\n\n\n    return subscribe(handleStoreChange); // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [subscribe]);\n  useDebugValue(value);\n  return value;\n}\n\nfunction checkIfSnapshotChanged(inst) {\n  const latestGetSnapshot = inst.getSnapshot;\n  const prevValue = inst.value;\n\n  try {\n    const nextValue = latestGetSnapshot();\n    return !is(prevValue, nextValue);\n  } catch (error) {\n    return true;\n  }\n}\n\n/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow\n */\nfunction useSyncExternalStore$1(subscribe, getSnapshot, getServerSnapshot) {\n  // Note: The shim does not use getServerSnapshot, because pre-18 versions of\n  // React do not expose a way to check if we're hydrating. So users of the shim\n  // will need to track that themselves and return the correct value\n  // from `getSnapshot`.\n  return getSnapshot();\n}\n\n/**\n * Inlined into the react-router repo since use-sync-external-store does not\n * provide a UMD-compatible package, so we need this to be able to distribute\n * UMD react-router bundles\n */\nconst canUseDOM = !!(typeof window !== \"undefined\" && typeof window.document !== \"undefined\" && typeof window.document.createElement !== \"undefined\");\nconst isServerEnvironment = !canUseDOM;\nconst shim = isServerEnvironment ? useSyncExternalStore$1 : useSyncExternalStore$2;\nconst useSyncExternalStore = \"useSyncExternalStore\" in React ? (module => module.useSyncExternalStore)(React) : shim;\n\n// Contexts for data routers\nconst DataStaticRouterContext = /*#__PURE__*/React.createContext(null);\n\nif (process.env.NODE_ENV !== \"production\") {\n  DataStaticRouterContext.displayName = \"DataStaticRouterContext\";\n}\n\nconst DataRouterContext = /*#__PURE__*/React.createContext(null);\n\nif (process.env.NODE_ENV !== \"production\") {\n  DataRouterContext.displayName = \"DataRouter\";\n}\n\nconst DataRouterStateContext = /*#__PURE__*/React.createContext(null);\n\nif (process.env.NODE_ENV !== \"production\") {\n  DataRouterStateContext.displayName = \"DataRouterState\";\n}\n\nconst AwaitContext = /*#__PURE__*/React.createContext(null);\n\nif (process.env.NODE_ENV !== \"production\") {\n  AwaitContext.displayName = \"Await\";\n}\n\nconst NavigationContext = /*#__PURE__*/React.createContext(null);\n\nif (process.env.NODE_ENV !== \"production\") {\n  NavigationContext.displayName = \"Navigation\";\n}\n\nconst LocationContext = /*#__PURE__*/React.createContext(null);\n\nif (process.env.NODE_ENV !== \"production\") {\n  LocationContext.displayName = \"Location\";\n}\n\nconst RouteContext = /*#__PURE__*/React.createContext({\n  outlet: null,\n  matches: []\n});\n\nif (process.env.NODE_ENV !== \"production\") {\n  RouteContext.displayName = \"Route\";\n}\n\nconst RouteErrorContext = /*#__PURE__*/React.createContext(null);\n\nif (process.env.NODE_ENV !== \"production\") {\n  RouteErrorContext.displayName = \"RouteError\";\n}\n\n/**\n * Returns the full href for the given \"to\" value. This is useful for building\n * custom links that are also accessible and preserve right-click behavior.\n *\n * @see https://reactrouter.com/docs/en/v6/hooks/use-href\n */\n\nfunction useHref(to, _temp) {\n  let {\n    relative\n  } = _temp === void 0 ? {} : _temp;\n  !useInRouterContext() ? process.env.NODE_ENV !== \"production\" ? invariant(false, // TODO: This error is probably because they somehow have 2 versions of the\n  // router loaded. We can help them understand how to avoid that.\n  \"useHref() may be used only in the context of a <Router> component.\") : invariant(false) : void 0;\n  let {\n    basename,\n    navigator\n  } = React.useContext(NavigationContext);\n  let {\n    hash,\n    pathname,\n    search\n  } = useResolvedPath(to, {\n    relative\n  });\n  let joinedPathname = pathname; // If we're operating within a basename, prepend it to the pathname prior\n  // to creating the href.  If this is a root navigation, then just use the raw\n  // basename which allows the basename to have full control over the presence\n  // of a trailing slash on root links\n\n  if (basename !== \"/\") {\n    joinedPathname = pathname === \"/\" ? basename : joinPaths([basename, pathname]);\n  }\n\n  return navigator.createHref({\n    pathname: joinedPathname,\n    search,\n    hash\n  });\n}\n/**\n * Returns true if this component is a descendant of a <Router>.\n *\n * @see https://reactrouter.com/docs/en/v6/hooks/use-in-router-context\n */\n\nfunction useInRouterContext() {\n  return React.useContext(LocationContext) != null;\n}\n/**\n * Returns the current location object, which represents the current URL in web\n * browsers.\n *\n * Note: If you're using this it may mean you're doing some of your own\n * \"routing\" in your app, and we'd like to know what your use case is. We may\n * be able to provide something higher-level to better suit your needs.\n *\n * @see https://reactrouter.com/docs/en/v6/hooks/use-location\n */\n\nfunction useLocation() {\n  !useInRouterContext() ? process.env.NODE_ENV !== \"production\" ? invariant(false, // TODO: This error is probably because they somehow have 2 versions of the\n  // router loaded. We can help them understand how to avoid that.\n  \"useLocation() may be used only in the context of a <Router> component.\") : invariant(false) : void 0;\n  return React.useContext(LocationContext).location;\n}\n/**\n * Returns the current navigation action which describes how the router came to\n * the current location, either by a pop, push, or replace on the history stack.\n *\n * @see https://reactrouter.com/docs/en/v6/hooks/use-navigation-type\n */\n\nfunction useNavigationType() {\n  return React.useContext(LocationContext).navigationType;\n}\n/**\n * Returns true if the URL for the given \"to\" value matches the current URL.\n * This is useful for components that need to know \"active\" state, e.g.\n * <NavLink>.\n *\n * @see https://reactrouter.com/docs/en/v6/hooks/use-match\n */\n\nfunction useMatch(pattern) {\n  !useInRouterContext() ? process.env.NODE_ENV !== \"production\" ? invariant(false, // TODO: This error is probably because they somehow have 2 versions of the\n  // router loaded. We can help them understand how to avoid that.\n  \"useMatch() may be used only in the context of a <Router> component.\") : invariant(false) : void 0;\n  let {\n    pathname\n  } = useLocation();\n  return React.useMemo(() => matchPath(pattern, pathname), [pathname, pattern]);\n}\n/**\n * The interface for the navigate() function returned from useNavigate().\n */\n\n/**\n * When processing relative navigation we want to ignore ancestor routes that\n * do not contribute to the path, such that index/pathless layout routes don't\n * interfere.\n *\n * For example, when moving a route element into an index route and/or a\n * pathless layout route, relative link behavior contained within should stay\n * the same.  Both of the following examples should link back to the root:\n *\n *   <Route path=\"/\">\n *     <Route path=\"accounts\" element={<Link to=\"..\"}>\n *   </Route>\n *\n *   <Route path=\"/\">\n *     <Route path=\"accounts\">\n *       <Route element={<AccountsLayout />}>       // <-- Does not contribute\n *         <Route index element={<Link to=\"..\"} />  // <-- Does not contribute\n *       </Route\n *     </Route>\n *   </Route>\n */\nfunction getPathContributingMatches(matches) {\n  return matches.filter((match, index) => index === 0 || !match.route.index && match.pathnameBase !== matches[index - 1].pathnameBase);\n}\n/**\n * Returns an imperative method for changing the location. Used by <Link>s, but\n * may also be used by other elements to change the location.\n *\n * @see https://reactrouter.com/docs/en/v6/hooks/use-navigate\n */\n\n\nfunction useNavigate() {\n  !useInRouterContext() ? process.env.NODE_ENV !== \"production\" ? invariant(false, // TODO: This error is probably because they somehow have 2 versions of the\n  // router loaded. We can help them understand how to avoid that.\n  \"useNavigate() may be used only in the context of a <Router> component.\") : invariant(false) : void 0;\n  let {\n    basename,\n    navigator\n  } = React.useContext(NavigationContext);\n  let {\n    matches\n  } = React.useContext(RouteContext);\n  let {\n    pathname: locationPathname\n  } = useLocation();\n  let routePathnamesJson = JSON.stringify(getPathContributingMatches(matches).map(match => match.pathnameBase));\n  let activeRef = React.useRef(false);\n  React.useEffect(() => {\n    activeRef.current = true;\n  });\n  let navigate = React.useCallback(function (to, options) {\n    if (options === void 0) {\n      options = {};\n    }\n\n    process.env.NODE_ENV !== \"production\" ? warning(activeRef.current, \"You should call navigate() in a React.useEffect(), not when \" + \"your component is first rendered.\") : void 0;\n    if (!activeRef.current) return;\n\n    if (typeof to === \"number\") {\n      navigator.go(to);\n      return;\n    }\n\n    let path = resolveTo(to, JSON.parse(routePathnamesJson), locationPathname, options.relative === \"path\"); // If we're operating within a basename, prepend it to the pathname prior\n    // to handing off to history.  If this is a root navigation, then we\n    // navigate to the raw basename which allows the basename to have full\n    // control over the presence of a trailing slash on root links\n\n    if (basename !== \"/\") {\n      path.pathname = path.pathname === \"/\" ? basename : joinPaths([basename, path.pathname]);\n    }\n\n    (!!options.replace ? navigator.replace : navigator.push)(path, options.state, options);\n  }, [basename, navigator, routePathnamesJson, locationPathname]);\n  return navigate;\n}\nconst OutletContext = /*#__PURE__*/React.createContext(null);\n/**\n * Returns the context (if provided) for the child route at this level of the route\n * hierarchy.\n * @see https://reactrouter.com/docs/en/v6/hooks/use-outlet-context\n */\n\nfunction useOutletContext() {\n  return React.useContext(OutletContext);\n}\n/**\n * Returns the element for the child route at this level of the route\n * hierarchy. Used internally by <Outlet> to render child routes.\n *\n * @see https://reactrouter.com/docs/en/v6/hooks/use-outlet\n */\n\nfunction useOutlet(context) {\n  let outlet = React.useContext(RouteContext).outlet;\n\n  if (outlet) {\n    return /*#__PURE__*/React.createElement(OutletContext.Provider, {\n      value: context\n    }, outlet);\n  }\n\n  return outlet;\n}\n/**\n * Returns an object of key/value pairs of the dynamic params from the current\n * URL that were matched by the route path.\n *\n * @see https://reactrouter.com/docs/en/v6/hooks/use-params\n */\n\nfunction useParams() {\n  let {\n    matches\n  } = React.useContext(RouteContext);\n  let routeMatch = matches[matches.length - 1];\n  return routeMatch ? routeMatch.params : {};\n}\n/**\n * Resolves the pathname of the given `to` value against the current location.\n *\n * @see https://reactrouter.com/docs/en/v6/hooks/use-resolved-path\n */\n\nfunction useResolvedPath(to, _temp2) {\n  let {\n    relative\n  } = _temp2 === void 0 ? {} : _temp2;\n  let {\n    matches\n  } = React.useContext(RouteContext);\n  let {\n    pathname: locationPathname\n  } = useLocation();\n  let routePathnamesJson = JSON.stringify(getPathContributingMatches(matches).map(match => match.pathnameBase));\n  return React.useMemo(() => resolveTo(to, JSON.parse(routePathnamesJson), locationPathname, relative === \"path\"), [to, routePathnamesJson, locationPathname, relative]);\n}\n/**\n * Returns the element of the route that matched the current location, prepared\n * with the correct context to render the remainder of the route tree. Route\n * elements in the tree must render an <Outlet> to render their child route's\n * element.\n *\n * @see https://reactrouter.com/docs/en/v6/hooks/use-routes\n */\n\nfunction useRoutes(routes, locationArg) {\n  !useInRouterContext() ? process.env.NODE_ENV !== \"production\" ? invariant(false, // TODO: This error is probably because they somehow have 2 versions of the\n  // router loaded. We can help them understand how to avoid that.\n  \"useRoutes() may be used only in the context of a <Router> component.\") : invariant(false) : void 0;\n  let dataRouterStateContext = React.useContext(DataRouterStateContext);\n  let {\n    matches: parentMatches\n  } = React.useContext(RouteContext);\n  let routeMatch = parentMatches[parentMatches.length - 1];\n  let parentParams = routeMatch ? routeMatch.params : {};\n  let parentPathname = routeMatch ? routeMatch.pathname : \"/\";\n  let parentPathnameBase = routeMatch ? routeMatch.pathnameBase : \"/\";\n  let parentRoute = routeMatch && routeMatch.route;\n\n  if (process.env.NODE_ENV !== \"production\") {\n    // You won't get a warning about 2 different <Routes> under a <Route>\n    // without a trailing *, but this is a best-effort warning anyway since we\n    // cannot even give the warning unless they land at the parent route.\n    //\n    // Example:\n    //\n    // <Routes>\n    //   {/* This route path MUST end with /* because otherwise\n    //       it will never match /blog/post/123 */}\n    //   <Route path=\"blog\" element={<Blog />} />\n    //   <Route path=\"blog/feed\" element={<BlogFeed />} />\n    // </Routes>\n    //\n    // function Blog() {\n    //   return (\n    //     <Routes>\n    //       <Route path=\"post/:id\" element={<Post />} />\n    //     </Routes>\n    //   );\n    // }\n    let parentPath = parentRoute && parentRoute.path || \"\";\n    warningOnce(parentPathname, !parentRoute || parentPath.endsWith(\"*\"), \"You rendered descendant <Routes> (or called `useRoutes()`) at \" + (\"\\\"\" + parentPathname + \"\\\" (under <Route path=\\\"\" + parentPath + \"\\\">) but the \") + \"parent route path has no trailing \\\"*\\\". This means if you navigate \" + \"deeper, the parent won't match anymore and therefore the child \" + \"routes will never render.\\n\\n\" + (\"Please change the parent <Route path=\\\"\" + parentPath + \"\\\"> to <Route \") + (\"path=\\\"\" + (parentPath === \"/\" ? \"*\" : parentPath + \"/*\") + \"\\\">.\"));\n  }\n\n  let locationFromContext = useLocation();\n  let location;\n\n  if (locationArg) {\n    var _parsedLocationArg$pa;\n\n    let parsedLocationArg = typeof locationArg === \"string\" ? parsePath(locationArg) : locationArg;\n    !(parentPathnameBase === \"/\" || ((_parsedLocationArg$pa = parsedLocationArg.pathname) == null ? void 0 : _parsedLocationArg$pa.startsWith(parentPathnameBase))) ? process.env.NODE_ENV !== \"production\" ? invariant(false, \"When overriding the location using `<Routes location>` or `useRoutes(routes, location)`, \" + \"the location pathname must begin with the portion of the URL pathname that was \" + (\"matched by all parent routes. The current pathname base is \\\"\" + parentPathnameBase + \"\\\" \") + (\"but pathname \\\"\" + parsedLocationArg.pathname + \"\\\" was given in the `location` prop.\")) : invariant(false) : void 0;\n    location = parsedLocationArg;\n  } else {\n    location = locationFromContext;\n  }\n\n  let pathname = location.pathname || \"/\";\n  let remainingPathname = parentPathnameBase === \"/\" ? pathname : pathname.slice(parentPathnameBase.length) || \"/\";\n  let matches = matchRoutes(routes, {\n    pathname: remainingPathname\n  });\n\n  if (process.env.NODE_ENV !== \"production\") {\n    process.env.NODE_ENV !== \"production\" ? warning(parentRoute || matches != null, \"No routes matched location \\\"\" + location.pathname + location.search + location.hash + \"\\\" \") : void 0;\n    process.env.NODE_ENV !== \"production\" ? warning(matches == null || matches[matches.length - 1].route.element !== undefined, \"Matched leaf route at location \\\"\" + location.pathname + location.search + location.hash + \"\\\" does not have an element. \" + \"This means it will render an <Outlet /> with a null value by default resulting in an \\\"empty\\\" page.\") : void 0;\n  }\n\n  let renderedMatches = _renderMatches(matches && matches.map(match => Object.assign({}, match, {\n    params: Object.assign({}, parentParams, match.params),\n    pathname: joinPaths([parentPathnameBase, match.pathname]),\n    pathnameBase: match.pathnameBase === \"/\" ? parentPathnameBase : joinPaths([parentPathnameBase, match.pathnameBase])\n  })), parentMatches, dataRouterStateContext || undefined); // When a user passes in a `locationArg`, the associated routes need to\n  // be wrapped in a new `LocationContext.Provider` in order for `useLocation`\n  // to use the scoped location instead of the global location.\n\n\n  if (locationArg) {\n    return /*#__PURE__*/React.createElement(LocationContext.Provider, {\n      value: {\n        location: _extends({\n          pathname: \"/\",\n          search: \"\",\n          hash: \"\",\n          state: null,\n          key: \"default\"\n        }, location),\n        navigationType: Action.Pop\n      }\n    }, renderedMatches);\n  }\n\n  return renderedMatches;\n}\n\nfunction DefaultErrorElement() {\n  let error = useRouteError();\n  let message = isRouteErrorResponse(error) ? error.status + \" \" + error.statusText : error instanceof Error ? error.message : JSON.stringify(error);\n  let stack = error instanceof Error ? error.stack : null;\n  let lightgrey = \"rgba(200,200,200, 0.5)\";\n  let preStyles = {\n    padding: \"0.5rem\",\n    backgroundColor: lightgrey\n  };\n  let codeStyles = {\n    padding: \"2px 4px\",\n    backgroundColor: lightgrey\n  };\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"h2\", null, \"Unhandled Thrown Error!\"), /*#__PURE__*/React.createElement(\"h3\", {\n    style: {\n      fontStyle: \"italic\"\n    }\n  }, message), stack ? /*#__PURE__*/React.createElement(\"pre\", {\n    style: preStyles\n  }, stack) : null, /*#__PURE__*/React.createElement(\"p\", null, \"\\uD83D\\uDCBF Hey developer \\uD83D\\uDC4B\"), /*#__PURE__*/React.createElement(\"p\", null, \"You can provide a way better UX than this when your app throws errors by providing your own\\xA0\", /*#__PURE__*/React.createElement(\"code\", {\n    style: codeStyles\n  }, \"errorElement\"), \" props on\\xA0\", /*#__PURE__*/React.createElement(\"code\", {\n    style: codeStyles\n  }, \"<Route>\")));\n}\n\nclass RenderErrorBoundary extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      location: props.location,\n      error: props.error\n    };\n  }\n\n  static getDerivedStateFromError(error) {\n    return {\n      error: error\n    };\n  }\n\n  static getDerivedStateFromProps(props, state) {\n    // When we get into an error state, the user will likely click \"back\" to the\n    // previous page that didn't have an error. Because this wraps the entire\n    // application, that will have no effect--the error page continues to display.\n    // This gives us a mechanism to recover from the error when the location changes.\n    //\n    // Whether we're in an error state or not, we update the location in state\n    // so that when we are in an error state, it gets reset when a new location\n    // comes in and the user recovers from the error.\n    if (state.location !== props.location) {\n      return {\n        error: props.error,\n        location: props.location\n      };\n    } // If we're not changing locations, preserve the location but still surface\n    // any new errors that may come through. We retain the existing error, we do\n    // this because the error provided from the app state may be cleared without\n    // the location changing.\n\n\n    return {\n      error: props.error || state.error,\n      location: state.location\n    };\n  }\n\n  componentDidCatch(error, errorInfo) {\n    console.error(\"React Router caught the following error during render\", error, errorInfo);\n  }\n\n  render() {\n    return this.state.error ? /*#__PURE__*/React.createElement(RouteErrorContext.Provider, {\n      value: this.state.error,\n      children: this.props.component\n    }) : this.props.children;\n  }\n\n}\n\nfunction RenderedRoute(_ref) {\n  let {\n    routeContext,\n    match,\n    children\n  } = _ref;\n  let dataStaticRouterContext = React.useContext(DataStaticRouterContext); // Track how deep we got in our render pass to emulate SSR componentDidCatch\n  // in a DataStaticRouter\n\n  if (dataStaticRouterContext && match.route.errorElement) {\n    dataStaticRouterContext._deepestRenderedBoundaryId = match.route.id;\n  }\n\n  return /*#__PURE__*/React.createElement(RouteContext.Provider, {\n    value: routeContext\n  }, children);\n}\n\nfunction _renderMatches(matches, parentMatches, dataRouterState) {\n  if (parentMatches === void 0) {\n    parentMatches = [];\n  }\n\n  if (matches == null) {\n    if (dataRouterState != null && dataRouterState.errors) {\n      // Don't bail if we have data router errors so we can render them in the\n      // boundary.  Use the pre-matched (or shimmed) matches\n      matches = dataRouterState.matches;\n    } else {\n      return null;\n    }\n  }\n\n  let renderedMatches = matches; // If we have data errors, trim matches to the highest error boundary\n\n  let errors = dataRouterState == null ? void 0 : dataRouterState.errors;\n\n  if (errors != null) {\n    let errorIndex = renderedMatches.findIndex(m => m.route.id && (errors == null ? void 0 : errors[m.route.id]));\n    !(errorIndex >= 0) ? process.env.NODE_ENV !== \"production\" ? invariant(false, \"Could not find a matching route for the current errors: \" + errors) : invariant(false) : void 0;\n    renderedMatches = renderedMatches.slice(0, Math.min(renderedMatches.length, errorIndex + 1));\n  }\n\n  return renderedMatches.reduceRight((outlet, match, index) => {\n    let error = match.route.id ? errors == null ? void 0 : errors[match.route.id] : null; // Only data routers handle errors\n\n    let errorElement = dataRouterState ? match.route.errorElement || /*#__PURE__*/React.createElement(DefaultErrorElement, null) : null;\n\n    let getChildren = () => /*#__PURE__*/React.createElement(RenderedRoute, {\n      match: match,\n      routeContext: {\n        outlet,\n        matches: parentMatches.concat(renderedMatches.slice(0, index + 1))\n      }\n    }, error ? errorElement : match.route.element !== undefined ? match.route.element : outlet); // Only wrap in an error boundary within data router usages when we have an\n    // errorElement on this route.  Otherwise let it bubble up to an ancestor\n    // errorElement\n\n\n    return dataRouterState && (match.route.errorElement || index === 0) ? /*#__PURE__*/React.createElement(RenderErrorBoundary, {\n      location: dataRouterState.location,\n      component: errorElement,\n      error: error,\n      children: getChildren()\n    }) : getChildren();\n  }, null);\n}\nvar DataRouterHook;\n\n(function (DataRouterHook) {\n  DataRouterHook[\"UseRevalidator\"] = \"useRevalidator\";\n})(DataRouterHook || (DataRouterHook = {}));\n\nvar DataRouterStateHook;\n\n(function (DataRouterStateHook) {\n  DataRouterStateHook[\"UseLoaderData\"] = \"useLoaderData\";\n  DataRouterStateHook[\"UseActionData\"] = \"useActionData\";\n  DataRouterStateHook[\"UseRouteError\"] = \"useRouteError\";\n  DataRouterStateHook[\"UseNavigation\"] = \"useNavigation\";\n  DataRouterStateHook[\"UseRouteLoaderData\"] = \"useRouteLoaderData\";\n  DataRouterStateHook[\"UseMatches\"] = \"useMatches\";\n  DataRouterStateHook[\"UseRevalidator\"] = \"useRevalidator\";\n})(DataRouterStateHook || (DataRouterStateHook = {}));\n\nfunction getDataRouterConsoleError(hookName) {\n  return hookName + \" must be used within a data router.  See https://reactrouter.com/en/main/routers/picking-a-router.\";\n}\n\nfunction useDataRouterContext(hookName) {\n  let ctx = React.useContext(DataRouterContext);\n  !ctx ? process.env.NODE_ENV !== \"production\" ? invariant(false, getDataRouterConsoleError(hookName)) : invariant(false) : void 0;\n  return ctx;\n}\n\nfunction useDataRouterState(hookName) {\n  let state = React.useContext(DataRouterStateContext);\n  !state ? process.env.NODE_ENV !== \"production\" ? invariant(false, getDataRouterConsoleError(hookName)) : invariant(false) : void 0;\n  return state;\n}\n/**\n * Returns the current navigation, defaulting to an \"idle\" navigation when\n * no navigation is in progress\n */\n\n\nfunction useNavigation() {\n  let state = useDataRouterState(DataRouterStateHook.UseNavigation);\n  return state.navigation;\n}\n/**\n * Returns a revalidate function for manually triggering revalidation, as well\n * as the current state of any manual revalidations\n */\n\nfunction useRevalidator() {\n  let dataRouterContext = useDataRouterContext(DataRouterHook.UseRevalidator);\n  let state = useDataRouterState(DataRouterStateHook.UseRevalidator);\n  return {\n    revalidate: dataRouterContext.router.revalidate,\n    state: state.revalidation\n  };\n}\n/**\n * Returns the active route matches, useful for accessing loaderData for\n * parent/child routes or the route \"handle\" property\n */\n\nfunction useMatches() {\n  let {\n    matches,\n    loaderData\n  } = useDataRouterState(DataRouterStateHook.UseMatches);\n  return React.useMemo(() => matches.map(match => {\n    let {\n      pathname,\n      params\n    } = match; // Note: This structure matches that created by createUseMatchesMatch\n    // in the @remix-run/router , so if you change this please also change\n    // that :)  Eventually we'll DRY this up\n\n    return {\n      id: match.route.id,\n      pathname,\n      params,\n      data: loaderData[match.route.id],\n      handle: match.route.handle\n    };\n  }), [matches, loaderData]);\n}\n/**\n * Returns the loader data for the nearest ancestor Route loader\n */\n\nfunction useLoaderData() {\n  let state = useDataRouterState(DataRouterStateHook.UseLoaderData);\n  let route = React.useContext(RouteContext);\n  !route ? process.env.NODE_ENV !== \"production\" ? invariant(false, \"useLoaderData must be used inside a RouteContext\") : invariant(false) : void 0;\n  let thisRoute = route.matches[route.matches.length - 1];\n  !thisRoute.route.id ? process.env.NODE_ENV !== \"production\" ? invariant(false, \"useLoaderData can only be used on routes that contain a unique \\\"id\\\"\") : invariant(false) : void 0;\n  return state.loaderData[thisRoute.route.id];\n}\n/**\n * Returns the loaderData for the given routeId\n */\n\nfunction useRouteLoaderData(routeId) {\n  let state = useDataRouterState(DataRouterStateHook.UseRouteLoaderData);\n  return state.loaderData[routeId];\n}\n/**\n * Returns the action data for the nearest ancestor Route action\n */\n\nfunction useActionData() {\n  let state = useDataRouterState(DataRouterStateHook.UseActionData);\n  let route = React.useContext(RouteContext);\n  !route ? process.env.NODE_ENV !== \"production\" ? invariant(false, \"useActionData must be used inside a RouteContext\") : invariant(false) : void 0;\n  return Object.values((state == null ? void 0 : state.actionData) || {})[0];\n}\n/**\n * Returns the nearest ancestor Route error, which could be a loader/action\n * error or a render error.  This is intended to be called from your\n * errorElement to display a proper error message.\n */\n\nfunction useRouteError() {\n  var _state$errors;\n\n  let error = React.useContext(RouteErrorContext);\n  let state = useDataRouterState(DataRouterStateHook.UseRouteError);\n  let route = React.useContext(RouteContext);\n  let thisRoute = route.matches[route.matches.length - 1]; // If this was a render error, we put it in a RouteError context inside\n  // of RenderErrorBoundary\n\n  if (error) {\n    return error;\n  }\n\n  !route ? process.env.NODE_ENV !== \"production\" ? invariant(false, \"useRouteError must be used inside a RouteContext\") : invariant(false) : void 0;\n  !thisRoute.route.id ? process.env.NODE_ENV !== \"production\" ? invariant(false, \"useRouteError can only be used on routes that contain a unique \\\"id\\\"\") : invariant(false) : void 0; // Otherwise look for errors from our data router state\n\n  return (_state$errors = state.errors) == null ? void 0 : _state$errors[thisRoute.route.id];\n}\n/**\n * Returns the happy-path data from the nearest ancestor <Await /> value\n */\n\nfunction useAsyncValue() {\n  let value = React.useContext(AwaitContext);\n  return value == null ? void 0 : value._data;\n}\n/**\n * Returns the error from the nearest ancestor <Await /> value\n */\n\nfunction useAsyncError() {\n  let value = React.useContext(AwaitContext);\n  return value == null ? void 0 : value._error;\n}\nconst alreadyWarned = {};\n\nfunction warningOnce(key, cond, message) {\n  if (!cond && !alreadyWarned[key]) {\n    alreadyWarned[key] = true;\n    process.env.NODE_ENV !== \"production\" ? warning(false, message) : void 0;\n  }\n}\n\n/**\n * Given a Remix Router instance, render the appropriate UI\n */\nfunction RouterProvider(_ref) {\n  let {\n    fallbackElement,\n    router\n  } = _ref;\n  // Sync router state to our component state to force re-renders\n  let state = useSyncExternalStore(router.subscribe, () => router.state, // We have to provide this so React@18 doesn't complain during hydration,\n  // but we pass our serialized hydration data into the router so state here\n  // is already synced with what the server saw\n  () => router.state);\n  let navigator = React.useMemo(() => {\n    return {\n      createHref: router.createHref,\n      go: n => router.navigate(n),\n      push: (to, state, opts) => router.navigate(to, {\n        state,\n        preventScrollReset: opts == null ? void 0 : opts.preventScrollReset\n      }),\n      replace: (to, state, opts) => router.navigate(to, {\n        replace: true,\n        state,\n        preventScrollReset: opts == null ? void 0 : opts.preventScrollReset\n      })\n    };\n  }, [router]);\n  let basename = router.basename || \"/\";\n  return /*#__PURE__*/React.createElement(DataRouterContext.Provider, {\n    value: {\n      router,\n      navigator,\n      static: false,\n      // Do we need this?\n      basename\n    }\n  }, /*#__PURE__*/React.createElement(DataRouterStateContext.Provider, {\n    value: state\n  }, /*#__PURE__*/React.createElement(Router, {\n    basename: router.basename,\n    location: router.state.location,\n    navigationType: router.state.historyAction,\n    navigator: navigator\n  }, router.state.initialized ? /*#__PURE__*/React.createElement(Routes, null) : fallbackElement)));\n}\n\n/**\n * A <Router> that stores all entries in memory.\n *\n * @see https://reactrouter.com/docs/en/v6/routers/memory-router\n */\nfunction MemoryRouter(_ref2) {\n  let {\n    basename,\n    children,\n    initialEntries,\n    initialIndex\n  } = _ref2;\n  let historyRef = React.useRef();\n\n  if (historyRef.current == null) {\n    historyRef.current = createMemoryHistory({\n      initialEntries,\n      initialIndex,\n      v5Compat: true\n    });\n  }\n\n  let history = historyRef.current;\n  let [state, setState] = React.useState({\n    action: history.action,\n    location: history.location\n  });\n  React.useLayoutEffect(() => history.listen(setState), [history]);\n  return /*#__PURE__*/React.createElement(Router, {\n    basename: basename,\n    children: children,\n    location: state.location,\n    navigationType: state.action,\n    navigator: history\n  });\n}\n\n/**\n * Changes the current location.\n *\n * Note: This API is mostly useful in React.Component subclasses that are not\n * able to use hooks. In functional components, we recommend you use the\n * `useNavigate` hook instead.\n *\n * @see https://reactrouter.com/docs/en/v6/components/navigate\n */\nfunction Navigate(_ref3) {\n  let {\n    to,\n    replace,\n    state,\n    relative\n  } = _ref3;\n  !useInRouterContext() ? process.env.NODE_ENV !== \"production\" ? invariant(false, // TODO: This error is probably because they somehow have 2 versions of\n  // the router loaded. We can help them understand how to avoid that.\n  \"<Navigate> may be used only in the context of a <Router> component.\") : invariant(false) : void 0;\n  process.env.NODE_ENV !== \"production\" ? warning(!React.useContext(NavigationContext).static, \"<Navigate> must not be used on the initial render in a <StaticRouter>. \" + \"This is a no-op, but you should modify your code so the <Navigate> is \" + \"only ever rendered in response to some user interaction or state change.\") : void 0;\n  let dataRouterState = React.useContext(DataRouterStateContext);\n  let navigate = useNavigate();\n  React.useEffect(() => {\n    // Avoid kicking off multiple navigations if we're in the middle of a\n    // data-router navigation, since components get re-rendered when we enter\n    // a submitting/loading state\n    if (dataRouterState && dataRouterState.navigation.state !== \"idle\") {\n      return;\n    }\n\n    navigate(to, {\n      replace,\n      state,\n      relative\n    });\n  });\n  return null;\n}\n\n/**\n * Renders the child route's element, if there is one.\n *\n * @see https://reactrouter.com/docs/en/v6/components/outlet\n */\nfunction Outlet(props) {\n  return useOutlet(props.context);\n}\n\n/**\n * Declares an element that should be rendered at a certain URL path.\n *\n * @see https://reactrouter.com/docs/en/v6/components/route\n */\nfunction Route(_props) {\n  process.env.NODE_ENV !== \"production\" ? invariant(false, \"A <Route> is only ever to be used as the child of <Routes> element, \" + \"never rendered directly. Please wrap your <Route> in a <Routes>.\") : invariant(false) ;\n}\n\n/**\n * Provides location context for the rest of the app.\n *\n * Note: You usually won't render a <Router> directly. Instead, you'll render a\n * router that is more specific to your environment such as a <BrowserRouter>\n * in web browsers or a <StaticRouter> for server rendering.\n *\n * @see https://reactrouter.com/docs/en/v6/routers/router\n */\nfunction Router(_ref4) {\n  let {\n    basename: basenameProp = \"/\",\n    children = null,\n    location: locationProp,\n    navigationType = Action.Pop,\n    navigator,\n    static: staticProp = false\n  } = _ref4;\n  !!useInRouterContext() ? process.env.NODE_ENV !== \"production\" ? invariant(false, \"You cannot render a <Router> inside another <Router>.\" + \" You should never have more than one in your app.\") : invariant(false) : void 0; // Preserve trailing slashes on basename, so we can let the user control\n  // the enforcement of trailing slashes throughout the app\n\n  let basename = basenameProp.replace(/^\\/*/, \"/\");\n  let navigationContext = React.useMemo(() => ({\n    basename,\n    navigator,\n    static: staticProp\n  }), [basename, navigator, staticProp]);\n\n  if (typeof locationProp === \"string\") {\n    locationProp = parsePath(locationProp);\n  }\n\n  let {\n    pathname = \"/\",\n    search = \"\",\n    hash = \"\",\n    state = null,\n    key = \"default\"\n  } = locationProp;\n  let location = React.useMemo(() => {\n    let trailingPathname = stripBasename(pathname, basename);\n\n    if (trailingPathname == null) {\n      return null;\n    }\n\n    return {\n      pathname: trailingPathname,\n      search,\n      hash,\n      state,\n      key\n    };\n  }, [basename, pathname, search, hash, state, key]);\n  process.env.NODE_ENV !== \"production\" ? warning(location != null, \"<Router basename=\\\"\" + basename + \"\\\"> is not able to match the URL \" + (\"\\\"\" + pathname + search + hash + \"\\\" because it does not start with the \") + \"basename, so the <Router> won't render anything.\") : void 0;\n\n  if (location == null) {\n    return null;\n  }\n\n  return /*#__PURE__*/React.createElement(NavigationContext.Provider, {\n    value: navigationContext\n  }, /*#__PURE__*/React.createElement(LocationContext.Provider, {\n    children: children,\n    value: {\n      location,\n      navigationType\n    }\n  }));\n}\n\n/**\n * A container for a nested tree of <Route> elements that renders the branch\n * that best matches the current location.\n *\n * @see https://reactrouter.com/docs/en/v6/components/routes\n */\nfunction Routes(_ref5) {\n  let {\n    children,\n    location\n  } = _ref5;\n  let dataRouterContext = React.useContext(DataRouterContext); // When in a DataRouterContext _without_ children, we use the router routes\n  // directly.  If we have children, then we're in a descendant tree and we\n  // need to use child routes.\n\n  let routes = dataRouterContext && !children ? dataRouterContext.router.routes : createRoutesFromChildren(children);\n  return useRoutes(routes, location);\n}\n\n/**\n * Component to use for rendering lazily loaded data from returning defer()\n * in a loader function\n */\nfunction Await(_ref6) {\n  let {\n    children,\n    errorElement,\n    resolve\n  } = _ref6;\n  return /*#__PURE__*/React.createElement(AwaitErrorBoundary, {\n    resolve: resolve,\n    errorElement: errorElement\n  }, /*#__PURE__*/React.createElement(ResolveAwait, null, children));\n}\nvar AwaitRenderStatus;\n\n(function (AwaitRenderStatus) {\n  AwaitRenderStatus[AwaitRenderStatus[\"pending\"] = 0] = \"pending\";\n  AwaitRenderStatus[AwaitRenderStatus[\"success\"] = 1] = \"success\";\n  AwaitRenderStatus[AwaitRenderStatus[\"error\"] = 2] = \"error\";\n})(AwaitRenderStatus || (AwaitRenderStatus = {}));\n\nconst neverSettledPromise = new Promise(() => {});\n\nclass AwaitErrorBoundary extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      error: null\n    };\n  }\n\n  static getDerivedStateFromError(error) {\n    return {\n      error\n    };\n  }\n\n  componentDidCatch(error, errorInfo) {\n    console.error(\"<Await> caught the following error during render\", error, errorInfo);\n  }\n\n  render() {\n    let {\n      children,\n      errorElement,\n      resolve\n    } = this.props;\n    let promise = null;\n    let status = AwaitRenderStatus.pending;\n\n    if (!(resolve instanceof Promise)) {\n      // Didn't get a promise - provide as a resolved promise\n      status = AwaitRenderStatus.success;\n      promise = Promise.resolve();\n      Object.defineProperty(promise, \"_tracked\", {\n        get: () => true\n      });\n      Object.defineProperty(promise, \"_data\", {\n        get: () => resolve\n      });\n    } else if (this.state.error) {\n      // Caught a render error, provide it as a rejected promise\n      status = AwaitRenderStatus.error;\n      let renderError = this.state.error;\n      promise = Promise.reject().catch(() => {}); // Avoid unhandled rejection warnings\n\n      Object.defineProperty(promise, \"_tracked\", {\n        get: () => true\n      });\n      Object.defineProperty(promise, \"_error\", {\n        get: () => renderError\n      });\n    } else if (resolve._tracked) {\n      // Already tracked promise - check contents\n      promise = resolve;\n      status = promise._error !== undefined ? AwaitRenderStatus.error : promise._data !== undefined ? AwaitRenderStatus.success : AwaitRenderStatus.pending;\n    } else {\n      // Raw (untracked) promise - track it\n      status = AwaitRenderStatus.pending;\n      Object.defineProperty(resolve, \"_tracked\", {\n        get: () => true\n      });\n      promise = resolve.then(data => Object.defineProperty(resolve, \"_data\", {\n        get: () => data\n      }), error => Object.defineProperty(resolve, \"_error\", {\n        get: () => error\n      }));\n    }\n\n    if (status === AwaitRenderStatus.error && promise._error instanceof AbortedDeferredError) {\n      // Freeze the UI by throwing a never resolved promise\n      throw neverSettledPromise;\n    }\n\n    if (status === AwaitRenderStatus.error && !errorElement) {\n      // No errorElement, throw to the nearest route-level error boundary\n      throw promise._error;\n    }\n\n    if (status === AwaitRenderStatus.error) {\n      // Render via our errorElement\n      return /*#__PURE__*/React.createElement(AwaitContext.Provider, {\n        value: promise,\n        children: errorElement\n      });\n    }\n\n    if (status === AwaitRenderStatus.success) {\n      // Render children with resolved value\n      return /*#__PURE__*/React.createElement(AwaitContext.Provider, {\n        value: promise,\n        children: children\n      });\n    } // Throw to the suspense boundary\n\n\n    throw promise;\n  }\n\n}\n/**\n * @private\n * Indirection to leverage useAsyncValue for a render-prop API on <Await>\n */\n\n\nfunction ResolveAwait(_ref7) {\n  let {\n    children\n  } = _ref7;\n  let data = useAsyncValue();\n\n  if (typeof children === \"function\") {\n    return children(data);\n  }\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, children);\n} ///////////////////////////////////////////////////////////////////////////////\n// UTILS\n///////////////////////////////////////////////////////////////////////////////\n\n/**\n * Creates a route config from a React \"children\" object, which is usually\n * either a `<Route>` element or an array of them. Used internally by\n * `<Routes>` to create a route config from its children.\n *\n * @see https://reactrouter.com/docs/en/v6/utils/create-routes-from-children\n */\n\n\nfunction createRoutesFromChildren(children, parentPath) {\n  if (parentPath === void 0) {\n    parentPath = [];\n  }\n\n  let routes = [];\n  React.Children.forEach(children, (element, index) => {\n    if (! /*#__PURE__*/React.isValidElement(element)) {\n      // Ignore non-elements. This allows people to more easily inline\n      // conditionals in their route config.\n      return;\n    }\n\n    if (element.type === React.Fragment) {\n      // Transparently support React.Fragment and its children.\n      routes.push.apply(routes, createRoutesFromChildren(element.props.children, parentPath));\n      return;\n    }\n\n    !(element.type === Route) ? process.env.NODE_ENV !== \"production\" ? invariant(false, \"[\" + (typeof element.type === \"string\" ? element.type : element.type.name) + \"] is not a <Route> component. All component children of <Routes> must be a <Route> or <React.Fragment>\") : invariant(false) : void 0;\n    !(!element.props.index || !element.props.children) ? process.env.NODE_ENV !== \"production\" ? invariant(false, \"An index route cannot have child routes.\") : invariant(false) : void 0;\n    let treePath = [...parentPath, index];\n    let route = {\n      id: element.props.id || treePath.join(\"-\"),\n      caseSensitive: element.props.caseSensitive,\n      element: element.props.element,\n      index: element.props.index,\n      path: element.props.path,\n      loader: element.props.loader,\n      action: element.props.action,\n      errorElement: element.props.errorElement,\n      hasErrorBoundary: element.props.errorElement != null,\n      shouldRevalidate: element.props.shouldRevalidate,\n      handle: element.props.handle\n    };\n\n    if (element.props.children) {\n      route.children = createRoutesFromChildren(element.props.children, treePath);\n    }\n\n    routes.push(route);\n  });\n  return routes;\n}\n/**\n * Renders the result of `matchRoutes()` into a React element.\n */\n\nfunction renderMatches(matches) {\n  return _renderMatches(matches);\n}\n/**\n * @private\n * Walk the route tree and add hasErrorBoundary if it's not provided, so that\n * users providing manual route arrays can just specify errorElement\n */\n\nfunction enhanceManualRouteObjects(routes) {\n  return routes.map(route => {\n    let routeClone = _extends({}, route);\n\n    if (routeClone.hasErrorBoundary == null) {\n      routeClone.hasErrorBoundary = routeClone.errorElement != null;\n    }\n\n    if (routeClone.children) {\n      routeClone.children = enhanceManualRouteObjects(routeClone.children);\n    }\n\n    return routeClone;\n  });\n}\n\nfunction createMemoryRouter(routes, opts) {\n  return createRouter({\n    basename: opts == null ? void 0 : opts.basename,\n    history: createMemoryHistory({\n      initialEntries: opts == null ? void 0 : opts.initialEntries,\n      initialIndex: opts == null ? void 0 : opts.initialIndex\n    }),\n    hydrationData: opts == null ? void 0 : opts.hydrationData,\n    routes: enhanceManualRouteObjects(routes)\n  }).initialize();\n} ///////////////////////////////////////////////////////////////////////////////\n\nexport { Await, MemoryRouter, Navigate, Outlet, Route, Router, RouterProvider, Routes, DataRouterContext as UNSAFE_DataRouterContext, DataRouterStateContext as UNSAFE_DataRouterStateContext, DataStaticRouterContext as UNSAFE_DataStaticRouterContext, LocationContext as UNSAFE_LocationContext, NavigationContext as UNSAFE_NavigationContext, RouteContext as UNSAFE_RouteContext, enhanceManualRouteObjects as UNSAFE_enhanceManualRouteObjects, createMemoryRouter, createRoutesFromChildren, createRoutesFromChildren as createRoutesFromElements, renderMatches, useActionData, useAsyncError, useAsyncValue, useHref, useInRouterContext, useLoaderData, useLocation, useMatch, useMatches, useNavigate, useNavigation, useNavigationType, useOutlet, useOutletContext, useParams, useResolvedPath, useRevalidator, useRouteError, useRouteLoaderData, useRoutes };\n//# sourceMappingURL=index.js.map\n","/**\n * React Router DOM v6.4.2\n *\n * Copyright (c) Remix Software Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE.md file in the root directory of this source tree.\n *\n * @license MIT\n */\nimport * as React from 'react';\nimport { UNSAFE_enhanceManualRouteObjects, Router, useHref, createPath, useResolvedPath, useMatch, UNSAFE_DataRouterStateContext, useNavigate, useLocation, UNSAFE_NavigationContext, UNSAFE_RouteContext, useMatches, useNavigation, UNSAFE_DataRouterContext } from 'react-router';\nexport { AbortedDeferredError, Await, MemoryRouter, Navigate, NavigationType, Outlet, Route, Router, RouterProvider, Routes, UNSAFE_DataRouterContext, UNSAFE_DataRouterStateContext, UNSAFE_DataStaticRouterContext, UNSAFE_LocationContext, UNSAFE_NavigationContext, UNSAFE_RouteContext, UNSAFE_enhanceManualRouteObjects, createMemoryRouter, createPath, createRoutesFromChildren, createRoutesFromElements, defer, generatePath, isRouteErrorResponse, json, matchPath, matchRoutes, parsePath, redirect, renderMatches, resolvePath, useActionData, useAsyncError, useAsyncValue, useHref, useInRouterContext, useLoaderData, useLocation, useMatch, useMatches, useNavigate, useNavigation, useNavigationType, useOutlet, useOutletContext, useParams, useResolvedPath, useRevalidator, useRouteError, useRouteLoaderData, useRoutes } from 'react-router';\nimport { createRouter, createBrowserHistory, createHashHistory, matchPath, invariant, joinPaths } from '@remix-run/router';\n\nfunction _extends() {\n  _extends = Object.assign ? Object.assign.bind() : function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n  return _extends.apply(this, arguments);\n}\n\nfunction _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}\n\nconst defaultMethod = \"get\";\nconst defaultEncType = \"application/x-www-form-urlencoded\";\nfunction isHtmlElement(object) {\n  return object != null && typeof object.tagName === \"string\";\n}\nfunction isButtonElement(object) {\n  return isHtmlElement(object) && object.tagName.toLowerCase() === \"button\";\n}\nfunction isFormElement(object) {\n  return isHtmlElement(object) && object.tagName.toLowerCase() === \"form\";\n}\nfunction isInputElement(object) {\n  return isHtmlElement(object) && object.tagName.toLowerCase() === \"input\";\n}\n\nfunction isModifiedEvent(event) {\n  return !!(event.metaKey || event.altKey || event.ctrlKey || event.shiftKey);\n}\n\nfunction shouldProcessLinkClick(event, target) {\n  return event.button === 0 && ( // Ignore everything but left clicks\n  !target || target === \"_self\") && // Let browser handle \"target=_blank\" etc.\n  !isModifiedEvent(event) // Ignore clicks with modifier keys\n  ;\n}\n/**\n * Creates a URLSearchParams object using the given initializer.\n *\n * This is identical to `new URLSearchParams(init)` except it also\n * supports arrays as values in the object form of the initializer\n * instead of just strings. This is convenient when you need multiple\n * values for a given key, but don't want to use an array initializer.\n *\n * For example, instead of:\n *\n *   let searchParams = new URLSearchParams([\n *     ['sort', 'name'],\n *     ['sort', 'price']\n *   ]);\n *\n * you can do:\n *\n *   let searchParams = createSearchParams({\n *     sort: ['name', 'price']\n *   });\n */\n\nfunction createSearchParams(init) {\n  if (init === void 0) {\n    init = \"\";\n  }\n\n  return new URLSearchParams(typeof init === \"string\" || Array.isArray(init) || init instanceof URLSearchParams ? init : Object.keys(init).reduce((memo, key) => {\n    let value = init[key];\n    return memo.concat(Array.isArray(value) ? value.map(v => [key, v]) : [[key, value]]);\n  }, []));\n}\nfunction getSearchParamsForLocation(locationSearch, defaultSearchParams) {\n  let searchParams = createSearchParams(locationSearch);\n\n  for (let key of defaultSearchParams.keys()) {\n    if (!searchParams.has(key)) {\n      defaultSearchParams.getAll(key).forEach(value => {\n        searchParams.append(key, value);\n      });\n    }\n  }\n\n  return searchParams;\n}\nfunction getFormSubmissionInfo(target, defaultAction, options) {\n  let method;\n  let action;\n  let encType;\n  let formData;\n\n  if (isFormElement(target)) {\n    let submissionTrigger = options.submissionTrigger;\n    method = options.method || target.getAttribute(\"method\") || defaultMethod;\n    action = options.action || target.getAttribute(\"action\") || defaultAction;\n    encType = options.encType || target.getAttribute(\"enctype\") || defaultEncType;\n    formData = new FormData(target);\n\n    if (submissionTrigger && submissionTrigger.name) {\n      formData.append(submissionTrigger.name, submissionTrigger.value);\n    }\n  } else if (isButtonElement(target) || isInputElement(target) && (target.type === \"submit\" || target.type === \"image\")) {\n    let form = target.form;\n\n    if (form == null) {\n      throw new Error(\"Cannot submit a <button> or <input type=\\\"submit\\\"> without a <form>\");\n    } // <button>/<input type=\"submit\"> may override attributes of <form>\n\n\n    method = options.method || target.getAttribute(\"formmethod\") || form.getAttribute(\"method\") || defaultMethod;\n    action = options.action || target.getAttribute(\"formaction\") || form.getAttribute(\"action\") || defaultAction;\n    encType = options.encType || target.getAttribute(\"formenctype\") || form.getAttribute(\"enctype\") || defaultEncType;\n    formData = new FormData(form); // Include name + value from a <button>, appending in case the button name\n    // matches an existing input name\n\n    if (target.name) {\n      formData.append(target.name, target.value);\n    }\n  } else if (isHtmlElement(target)) {\n    throw new Error(\"Cannot submit element that is not <form>, <button>, or \" + \"<input type=\\\"submit|image\\\">\");\n  } else {\n    method = options.method || defaultMethod;\n    action = options.action || defaultAction;\n    encType = options.encType || defaultEncType;\n\n    if (target instanceof FormData) {\n      formData = target;\n    } else {\n      formData = new FormData();\n\n      if (target instanceof URLSearchParams) {\n        for (let [name, value] of target) {\n          formData.append(name, value);\n        }\n      } else if (target != null) {\n        for (let name of Object.keys(target)) {\n          formData.append(name, target[name]);\n        }\n      }\n    }\n  }\n\n  let {\n    protocol,\n    host\n  } = window.location;\n  let url = new URL(action, protocol + \"//\" + host);\n  return {\n    url,\n    method,\n    encType,\n    formData\n  };\n}\n\nconst _excluded = [\"onClick\", \"relative\", \"reloadDocument\", \"replace\", \"state\", \"target\", \"to\", \"preventScrollReset\"],\n      _excluded2 = [\"aria-current\", \"caseSensitive\", \"className\", \"end\", \"style\", \"to\", \"children\"],\n      _excluded3 = [\"reloadDocument\", \"replace\", \"method\", \"action\", \"onSubmit\", \"fetcherKey\", \"routeId\", \"relative\"];\n//#region Routers\n////////////////////////////////////////////////////////////////////////////////\n\nfunction createBrowserRouter(routes, opts) {\n  var _window;\n\n  return createRouter({\n    basename: opts == null ? void 0 : opts.basename,\n    history: createBrowserHistory({\n      window: opts == null ? void 0 : opts.window\n    }),\n    hydrationData: (opts == null ? void 0 : opts.hydrationData) || ((_window = window) == null ? void 0 : _window.__staticRouterHydrationData),\n    routes: UNSAFE_enhanceManualRouteObjects(routes)\n  }).initialize();\n}\nfunction createHashRouter(routes, opts) {\n  var _window2;\n\n  return createRouter({\n    basename: opts == null ? void 0 : opts.basename,\n    history: createHashHistory({\n      window: opts == null ? void 0 : opts.window\n    }),\n    hydrationData: (opts == null ? void 0 : opts.hydrationData) || ((_window2 = window) == null ? void 0 : _window2.__staticRouterHydrationData),\n    routes: UNSAFE_enhanceManualRouteObjects(routes)\n  }).initialize();\n}\n/**\n * A `<Router>` for use in web browsers. Provides the cleanest URLs.\n */\n\nfunction BrowserRouter(_ref) {\n  let {\n    basename,\n    children,\n    window\n  } = _ref;\n  let historyRef = React.useRef();\n\n  if (historyRef.current == null) {\n    historyRef.current = createBrowserHistory({\n      window,\n      v5Compat: true\n    });\n  }\n\n  let history = historyRef.current;\n  let [state, setState] = React.useState({\n    action: history.action,\n    location: history.location\n  });\n  React.useLayoutEffect(() => history.listen(setState), [history]);\n  return /*#__PURE__*/React.createElement(Router, {\n    basename: basename,\n    children: children,\n    location: state.location,\n    navigationType: state.action,\n    navigator: history\n  });\n}\n/**\n * A `<Router>` for use in web browsers. Stores the location in the hash\n * portion of the URL so it is not sent to the server.\n */\n\nfunction HashRouter(_ref2) {\n  let {\n    basename,\n    children,\n    window\n  } = _ref2;\n  let historyRef = React.useRef();\n\n  if (historyRef.current == null) {\n    historyRef.current = createHashHistory({\n      window,\n      v5Compat: true\n    });\n  }\n\n  let history = historyRef.current;\n  let [state, setState] = React.useState({\n    action: history.action,\n    location: history.location\n  });\n  React.useLayoutEffect(() => history.listen(setState), [history]);\n  return /*#__PURE__*/React.createElement(Router, {\n    basename: basename,\n    children: children,\n    location: state.location,\n    navigationType: state.action,\n    navigator: history\n  });\n}\n/**\n * A `<Router>` that accepts a pre-instantiated history object. It's important\n * to note that using your own history object is highly discouraged and may add\n * two versions of the history library to your bundles unless you use the same\n * version of the history library that React Router uses internally.\n */\n\nfunction HistoryRouter(_ref3) {\n  let {\n    basename,\n    children,\n    history\n  } = _ref3;\n  const [state, setState] = React.useState({\n    action: history.action,\n    location: history.location\n  });\n  React.useLayoutEffect(() => history.listen(setState), [history]);\n  return /*#__PURE__*/React.createElement(Router, {\n    basename: basename,\n    children: children,\n    location: state.location,\n    navigationType: state.action,\n    navigator: history\n  });\n}\n\nif (process.env.NODE_ENV !== \"production\") {\n  HistoryRouter.displayName = \"unstable_HistoryRouter\";\n}\n/**\n * The public API for rendering a history-aware <a>.\n */\n\nconst Link = /*#__PURE__*/React.forwardRef(function LinkWithRef(_ref4, ref) {\n  let {\n    onClick,\n    relative,\n    reloadDocument,\n    replace,\n    state,\n    target,\n    to,\n    preventScrollReset\n  } = _ref4,\n      rest = _objectWithoutPropertiesLoose(_ref4, _excluded);\n\n  let href = useHref(to, {\n    relative\n  });\n  let internalOnClick = useLinkClickHandler(to, {\n    replace,\n    state,\n    target,\n    preventScrollReset,\n    relative\n  });\n\n  function handleClick(event) {\n    if (onClick) onClick(event);\n\n    if (!event.defaultPrevented) {\n      internalOnClick(event);\n    }\n  }\n\n  return (\n    /*#__PURE__*/\n    // eslint-disable-next-line jsx-a11y/anchor-has-content\n    React.createElement(\"a\", _extends({}, rest, {\n      href: href,\n      onClick: reloadDocument ? onClick : handleClick,\n      ref: ref,\n      target: target\n    }))\n  );\n});\n\nif (process.env.NODE_ENV !== \"production\") {\n  Link.displayName = \"Link\";\n}\n/**\n * A <Link> wrapper that knows if it's \"active\" or not.\n */\n\n\nconst NavLink = /*#__PURE__*/React.forwardRef(function NavLinkWithRef(_ref5, ref) {\n  let {\n    \"aria-current\": ariaCurrentProp = \"page\",\n    caseSensitive = false,\n    className: classNameProp = \"\",\n    end = false,\n    style: styleProp,\n    to,\n    children\n  } = _ref5,\n      rest = _objectWithoutPropertiesLoose(_ref5, _excluded2);\n\n  let path = useResolvedPath(to);\n  let match = useMatch({\n    path: path.pathname,\n    end,\n    caseSensitive\n  });\n  let routerState = React.useContext(UNSAFE_DataRouterStateContext);\n  let nextLocation = routerState == null ? void 0 : routerState.navigation.location;\n  let nextPath = useResolvedPath(nextLocation || \"\");\n  let nextMatch = React.useMemo(() => nextLocation ? matchPath({\n    path: path.pathname,\n    end,\n    caseSensitive\n  }, nextPath.pathname) : null, [nextLocation, path.pathname, caseSensitive, end, nextPath.pathname]);\n  let isPending = nextMatch != null;\n  let isActive = match != null;\n  let ariaCurrent = isActive ? ariaCurrentProp : undefined;\n  let className;\n\n  if (typeof classNameProp === \"function\") {\n    className = classNameProp({\n      isActive,\n      isPending\n    });\n  } else {\n    // If the className prop is not a function, we use a default `active`\n    // class for <NavLink />s that are active. In v5 `active` was the default\n    // value for `activeClassName`, but we are removing that API and can still\n    // use the old default behavior for a cleaner upgrade path and keep the\n    // simple styling rules working as they currently do.\n    className = [classNameProp, isActive ? \"active\" : null, isPending ? \"pending\" : null].filter(Boolean).join(\" \");\n  }\n\n  let style = typeof styleProp === \"function\" ? styleProp({\n    isActive,\n    isPending\n  }) : styleProp;\n  return /*#__PURE__*/React.createElement(Link, _extends({}, rest, {\n    \"aria-current\": ariaCurrent,\n    className: className,\n    ref: ref,\n    style: style,\n    to: to\n  }), typeof children === \"function\" ? children({\n    isActive,\n    isPending\n  }) : children);\n});\n\nif (process.env.NODE_ENV !== \"production\") {\n  NavLink.displayName = \"NavLink\";\n}\n/**\n * A `@remix-run/router`-aware `<form>`. It behaves like a normal form except\n * that the interaction with the server is with `fetch` instead of new document\n * requests, allowing components to add nicer UX to the page as the form is\n * submitted and returns with data.\n */\n\n\nconst Form = /*#__PURE__*/React.forwardRef((props, ref) => {\n  return /*#__PURE__*/React.createElement(FormImpl, _extends({}, props, {\n    ref: ref\n  }));\n});\n\nif (process.env.NODE_ENV !== \"production\") {\n  Form.displayName = \"Form\";\n}\n\nconst FormImpl = /*#__PURE__*/React.forwardRef((_ref6, forwardedRef) => {\n  let {\n    reloadDocument,\n    replace,\n    method = defaultMethod,\n    action,\n    onSubmit,\n    fetcherKey,\n    routeId,\n    relative\n  } = _ref6,\n      props = _objectWithoutPropertiesLoose(_ref6, _excluded3);\n\n  let submit = useSubmitImpl(fetcherKey, routeId);\n  let formMethod = method.toLowerCase() === \"get\" ? \"get\" : \"post\";\n  let formAction = useFormAction(action, {\n    relative\n  });\n\n  let submitHandler = event => {\n    onSubmit && onSubmit(event);\n    if (event.defaultPrevented) return;\n    event.preventDefault();\n    let submitter = event.nativeEvent.submitter;\n    submit(submitter || event.currentTarget, {\n      method,\n      replace,\n      relative\n    });\n  };\n\n  return /*#__PURE__*/React.createElement(\"form\", _extends({\n    ref: forwardedRef,\n    method: formMethod,\n    action: formAction,\n    onSubmit: reloadDocument ? onSubmit : submitHandler\n  }, props));\n});\n\nif (process.env.NODE_ENV !== \"production\") {\n  Form.displayName = \"Form\";\n}\n/**\n * This component will emulate the browser's scroll restoration on location\n * changes.\n */\n\n\nfunction ScrollRestoration(_ref7) {\n  let {\n    getKey,\n    storageKey\n  } = _ref7;\n  useScrollRestoration({\n    getKey,\n    storageKey\n  });\n  return null;\n}\n\nif (process.env.NODE_ENV !== \"production\") {\n  ScrollRestoration.displayName = \"ScrollRestoration\";\n} //#endregion\n////////////////////////////////////////////////////////////////////////////////\n//#region Hooks\n////////////////////////////////////////////////////////////////////////////////\n\n\nvar DataRouterHook;\n\n(function (DataRouterHook) {\n  DataRouterHook[\"UseScrollRestoration\"] = \"useScrollRestoration\";\n  DataRouterHook[\"UseSubmitImpl\"] = \"useSubmitImpl\";\n  DataRouterHook[\"UseFetcher\"] = \"useFetcher\";\n})(DataRouterHook || (DataRouterHook = {}));\n\nvar DataRouterStateHook;\n\n(function (DataRouterStateHook) {\n  DataRouterStateHook[\"UseFetchers\"] = \"useFetchers\";\n  DataRouterStateHook[\"UseScrollRestoration\"] = \"useScrollRestoration\";\n})(DataRouterStateHook || (DataRouterStateHook = {}));\n\nfunction getDataRouterConsoleError(hookName) {\n  return hookName + \" must be used within a data router.  See https://reactrouter.com/en/main/routers/picking-a-router.\";\n}\n\nfunction useDataRouterContext(hookName) {\n  let ctx = React.useContext(UNSAFE_DataRouterContext);\n  !ctx ? process.env.NODE_ENV !== \"production\" ? invariant(false, getDataRouterConsoleError(hookName)) : invariant(false) : void 0;\n  return ctx;\n}\n\nfunction useDataRouterState(hookName) {\n  let state = React.useContext(UNSAFE_DataRouterStateContext);\n  !state ? process.env.NODE_ENV !== \"production\" ? invariant(false, getDataRouterConsoleError(hookName)) : invariant(false) : void 0;\n  return state;\n}\n/**\n * Handles the click behavior for router `<Link>` components. This is useful if\n * you need to create custom `<Link>` components with the same click behavior we\n * use in our exported `<Link>`.\n */\n\n\nfunction useLinkClickHandler(to, _temp) {\n  let {\n    target,\n    replace: replaceProp,\n    state,\n    preventScrollReset,\n    relative\n  } = _temp === void 0 ? {} : _temp;\n  let navigate = useNavigate();\n  let location = useLocation();\n  let path = useResolvedPath(to, {\n    relative\n  });\n  return React.useCallback(event => {\n    if (shouldProcessLinkClick(event, target)) {\n      event.preventDefault(); // If the URL hasn't changed, a regular <a> will do a replace instead of\n      // a push, so do the same here unless the replace prop is explicitly set\n\n      let replace = replaceProp !== undefined ? replaceProp : createPath(location) === createPath(path);\n      navigate(to, {\n        replace,\n        state,\n        preventScrollReset,\n        relative\n      });\n    }\n  }, [location, navigate, path, replaceProp, state, target, to, preventScrollReset, relative]);\n}\n/**\n * A convenient wrapper for reading and writing search parameters via the\n * URLSearchParams interface.\n */\n\nfunction useSearchParams(defaultInit) {\n  process.env.NODE_ENV !== \"production\" ? warning(typeof URLSearchParams !== \"undefined\", \"You cannot use the `useSearchParams` hook in a browser that does not \" + \"support the URLSearchParams API. If you need to support Internet \" + \"Explorer 11, we recommend you load a polyfill such as \" + \"https://github.com/ungap/url-search-params\\n\\n\" + \"If you're unsure how to load polyfills, we recommend you check out \" + \"https://polyfill.io/v3/ which provides some recommendations about how \" + \"to load polyfills only for users that need them, instead of for every \" + \"user.\") : void 0;\n  let defaultSearchParamsRef = React.useRef(createSearchParams(defaultInit));\n  let location = useLocation();\n  let searchParams = React.useMemo(() => getSearchParamsForLocation(location.search, defaultSearchParamsRef.current), [location.search]);\n  let navigate = useNavigate();\n  let setSearchParams = React.useCallback((nextInit, navigateOptions) => {\n    const newSearchParams = createSearchParams(typeof nextInit === \"function\" ? nextInit(searchParams) : nextInit);\n    navigate(\"?\" + newSearchParams, navigateOptions);\n  }, [navigate, searchParams]);\n  return [searchParams, setSearchParams];\n}\n/**\n * Returns a function that may be used to programmatically submit a form (or\n * some arbitrary data) to the server.\n */\n\nfunction useSubmit() {\n  return useSubmitImpl();\n}\n\nfunction useSubmitImpl(fetcherKey, routeId) {\n  let {\n    router\n  } = useDataRouterContext(DataRouterHook.UseSubmitImpl);\n  let defaultAction = useFormAction();\n  return React.useCallback(function (target, options) {\n    if (options === void 0) {\n      options = {};\n    }\n\n    if (typeof document === \"undefined\") {\n      throw new Error(\"You are calling submit during the server render. \" + \"Try calling submit within a `useEffect` or callback instead.\");\n    }\n\n    let {\n      method,\n      encType,\n      formData,\n      url\n    } = getFormSubmissionInfo(target, defaultAction, options);\n    let href = url.pathname + url.search;\n    let opts = {\n      replace: options.replace,\n      formData,\n      formMethod: method,\n      formEncType: encType\n    };\n\n    if (fetcherKey) {\n      !(routeId != null) ? process.env.NODE_ENV !== \"production\" ? invariant(false, \"No routeId available for useFetcher()\") : invariant(false) : void 0;\n      router.fetch(fetcherKey, routeId, href, opts);\n    } else {\n      router.navigate(href, opts);\n    }\n  }, [defaultAction, router, fetcherKey, routeId]);\n}\n\nfunction useFormAction(action, _temp2) {\n  let {\n    relative\n  } = _temp2 === void 0 ? {} : _temp2;\n  let {\n    basename\n  } = React.useContext(UNSAFE_NavigationContext);\n  let routeContext = React.useContext(UNSAFE_RouteContext);\n  !routeContext ? process.env.NODE_ENV !== \"production\" ? invariant(false, \"useFormAction must be used inside a RouteContext\") : invariant(false) : void 0;\n  let [match] = routeContext.matches.slice(-1);\n  let resolvedAction = action != null ? action : \".\"; // Shallow clone path so we can modify it below, otherwise we modify the\n  // object referenced by useMemo inside useResolvedPath\n\n  let path = _extends({}, useResolvedPath(resolvedAction, {\n    relative\n  })); // Previously we set the default action to \".\". The problem with this is that\n  // `useResolvedPath(\".\")` excludes search params and the hash of the resolved\n  // URL. This is the intended behavior of when \".\" is specifically provided as\n  // the form action, but inconsistent w/ browsers when the action is omitted.\n  // https://github.com/remix-run/remix/issues/927\n\n\n  let location = useLocation();\n\n  if (action == null) {\n    // Safe to write to these directly here since if action was undefined, we\n    // would have called useResolvedPath(\".\") which will never include a search\n    // or hash\n    path.search = location.search;\n    path.hash = location.hash; // When grabbing search params from the URL, remove the automatically\n    // inserted ?index param so we match the useResolvedPath search behavior\n    // which would not include ?index\n\n    if (match.route.index) {\n      let params = new URLSearchParams(path.search);\n      params.delete(\"index\");\n      path.search = params.toString() ? \"?\" + params.toString() : \"\";\n    }\n  }\n\n  if ((!action || action === \".\") && match.route.index) {\n    path.search = path.search ? path.search.replace(/^\\?/, \"?index&\") : \"?index\";\n  } // If we're operating within a basename, prepend it to the pathname prior\n  // to creating the form action.  If this is a root navigation, then just use\n  // the raw basename which allows the basename to have full control over the\n  // presence of a trailing slash on root actions\n\n\n  if (basename !== \"/\") {\n    path.pathname = path.pathname === \"/\" ? basename : joinPaths([basename, path.pathname]);\n  }\n\n  return createPath(path);\n}\n\nfunction createFetcherForm(fetcherKey, routeId) {\n  let FetcherForm = /*#__PURE__*/React.forwardRef((props, ref) => {\n    return /*#__PURE__*/React.createElement(FormImpl, _extends({}, props, {\n      ref: ref,\n      fetcherKey: fetcherKey,\n      routeId: routeId\n    }));\n  });\n\n  if (process.env.NODE_ENV !== \"production\") {\n    FetcherForm.displayName = \"fetcher.Form\";\n  }\n\n  return FetcherForm;\n}\n\nlet fetcherId = 0;\n/**\n * Interacts with route loaders and actions without causing a navigation. Great\n * for any interaction that stays on the same page.\n */\n\nfunction useFetcher() {\n  var _route$matches;\n\n  let {\n    router\n  } = useDataRouterContext(DataRouterHook.UseFetcher);\n  let route = React.useContext(UNSAFE_RouteContext);\n  !route ? process.env.NODE_ENV !== \"production\" ? invariant(false, \"useFetcher must be used inside a RouteContext\") : invariant(false) : void 0;\n  let routeId = (_route$matches = route.matches[route.matches.length - 1]) == null ? void 0 : _route$matches.route.id;\n  !(routeId != null) ? process.env.NODE_ENV !== \"production\" ? invariant(false, \"useFetcher can only be used on routes that contain a unique \\\"id\\\"\") : invariant(false) : void 0;\n  let [fetcherKey] = React.useState(() => String(++fetcherId));\n  let [Form] = React.useState(() => {\n    !routeId ? process.env.NODE_ENV !== \"production\" ? invariant(false, \"No routeId available for fetcher.Form()\") : invariant(false) : void 0;\n    return createFetcherForm(fetcherKey, routeId);\n  });\n  let [load] = React.useState(() => href => {\n    !router ? process.env.NODE_ENV !== \"production\" ? invariant(false, \"No router available for fetcher.load()\") : invariant(false) : void 0;\n    !routeId ? process.env.NODE_ENV !== \"production\" ? invariant(false, \"No routeId available for fetcher.load()\") : invariant(false) : void 0;\n    router.fetch(fetcherKey, routeId, href);\n  });\n  let submit = useSubmitImpl(fetcherKey, routeId);\n  let fetcher = router.getFetcher(fetcherKey);\n  let fetcherWithComponents = React.useMemo(() => _extends({\n    Form,\n    submit,\n    load\n  }, fetcher), [fetcher, Form, submit, load]);\n  React.useEffect(() => {\n    // Is this busted when the React team gets real weird and calls effects\n    // twice on mount?  We really just need to garbage collect here when this\n    // fetcher is no longer around.\n    return () => {\n      if (!router) {\n        console.warn(\"No fetcher available to clean up from useFetcher()\");\n        return;\n      }\n\n      router.deleteFetcher(fetcherKey);\n    };\n  }, [router, fetcherKey]);\n  return fetcherWithComponents;\n}\n/**\n * Provides all fetchers currently on the page. Useful for layouts and parent\n * routes that need to provide pending/optimistic UI regarding the fetch.\n */\n\nfunction useFetchers() {\n  let state = useDataRouterState(DataRouterStateHook.UseFetchers);\n  return [...state.fetchers.values()];\n}\nconst SCROLL_RESTORATION_STORAGE_KEY = \"react-router-scroll-positions\";\nlet savedScrollPositions = {};\n/**\n * When rendered inside a RouterProvider, will restore scroll positions on navigations\n */\n\nfunction useScrollRestoration(_temp3) {\n  let {\n    getKey,\n    storageKey\n  } = _temp3 === void 0 ? {} : _temp3;\n  let {\n    router\n  } = useDataRouterContext(DataRouterHook.UseScrollRestoration);\n  let {\n    restoreScrollPosition,\n    preventScrollReset\n  } = useDataRouterState(DataRouterStateHook.UseScrollRestoration);\n  let location = useLocation();\n  let matches = useMatches();\n  let navigation = useNavigation(); // Trigger manual scroll restoration while we're active\n\n  React.useEffect(() => {\n    window.history.scrollRestoration = \"manual\";\n    return () => {\n      window.history.scrollRestoration = \"auto\";\n    };\n  }, []); // Save positions on unload\n\n  useBeforeUnload(React.useCallback(() => {\n    if (navigation.state === \"idle\") {\n      let key = (getKey ? getKey(location, matches) : null) || location.key;\n      savedScrollPositions[key] = window.scrollY;\n    }\n\n    sessionStorage.setItem(storageKey || SCROLL_RESTORATION_STORAGE_KEY, JSON.stringify(savedScrollPositions));\n    window.history.scrollRestoration = \"auto\";\n  }, [storageKey, getKey, navigation.state, location, matches])); // Read in any saved scroll locations\n\n  React.useLayoutEffect(() => {\n    try {\n      let sessionPositions = sessionStorage.getItem(storageKey || SCROLL_RESTORATION_STORAGE_KEY);\n\n      if (sessionPositions) {\n        savedScrollPositions = JSON.parse(sessionPositions);\n      }\n    } catch (e) {// no-op, use default empty object\n    }\n  }, [storageKey]); // Enable scroll restoration in the router\n\n  React.useLayoutEffect(() => {\n    let disableScrollRestoration = router == null ? void 0 : router.enableScrollRestoration(savedScrollPositions, () => window.scrollY, getKey);\n    return () => disableScrollRestoration && disableScrollRestoration();\n  }, [router, getKey]); // Restore scrolling when state.restoreScrollPosition changes\n\n  React.useLayoutEffect(() => {\n    // Explicit false means don't do anything (used for submissions)\n    if (restoreScrollPosition === false) {\n      return;\n    } // been here before, scroll to it\n\n\n    if (typeof restoreScrollPosition === \"number\") {\n      window.scrollTo(0, restoreScrollPosition);\n      return;\n    } // try to scroll to the hash\n\n\n    if (location.hash) {\n      let el = document.getElementById(location.hash.slice(1));\n\n      if (el) {\n        el.scrollIntoView();\n        return;\n      }\n    } // Opt out of scroll reset if this link requested it\n\n\n    if (preventScrollReset === true) {\n      return;\n    } // otherwise go to the top on new locations\n\n\n    window.scrollTo(0, 0);\n  }, [location, restoreScrollPosition, preventScrollReset]);\n}\n\nfunction useBeforeUnload(callback) {\n  React.useEffect(() => {\n    window.addEventListener(\"beforeunload\", callback);\n    return () => {\n      window.removeEventListener(\"beforeunload\", callback);\n    };\n  }, [callback]);\n} //#endregion\n////////////////////////////////////////////////////////////////////////////////\n//#region Utils\n////////////////////////////////////////////////////////////////////////////////\n\n\nfunction warning(cond, message) {\n  if (!cond) {\n    // eslint-disable-next-line no-console\n    if (typeof console !== \"undefined\") console.warn(message);\n\n    try {\n      // Welcome to debugging React Router!\n      //\n      // This error is thrown as a convenience so you can more easily\n      // find the source for a warning that appears in the console by\n      // enabling \"pause on exceptions\" in your JavaScript debugger.\n      throw new Error(message); // eslint-disable-next-line no-empty\n    } catch (e) {}\n  }\n} //#endregion\n\nexport { BrowserRouter, Form, HashRouter, Link, NavLink, ScrollRestoration, createBrowserRouter, createHashRouter, createSearchParams, HistoryRouter as unstable_HistoryRouter, useFetcher, useFetchers, useFormAction, useLinkClickHandler, useSearchParams, useSubmit };\n//# sourceMappingURL=index.js.map\n","import _extends from '@babel/runtime/helpers/esm/extends';\n\n/**\r\n * Actions represent the type of change to a location value.\r\n *\r\n * @see https://github.com/remix-run/history/tree/main/docs/api-reference.md#action\r\n */\nvar Action;\n\n(function (Action) {\n  /**\r\n   * A POP indicates a change to an arbitrary index in the history stack, such\r\n   * as a back or forward navigation. It does not describe the direction of the\r\n   * navigation, only that the current index changed.\r\n   *\r\n   * Note: This is the default action for newly created history objects.\r\n   */\n  Action[\"Pop\"] = \"POP\";\n  /**\r\n   * A PUSH indicates a new entry being added to the history stack, such as when\r\n   * a link is clicked and a new page loads. When this happens, all subsequent\r\n   * entries in the stack are lost.\r\n   */\n\n  Action[\"Push\"] = \"PUSH\";\n  /**\r\n   * A REPLACE indicates the entry at the current index in the history stack\r\n   * being replaced by a new one.\r\n   */\n\n  Action[\"Replace\"] = \"REPLACE\";\n})(Action || (Action = {}));\n\nvar readOnly = process.env.NODE_ENV !== \"production\" ? function (obj) {\n  return Object.freeze(obj);\n} : function (obj) {\n  return obj;\n};\n\nfunction warning(cond, message) {\n  if (!cond) {\n    // eslint-disable-next-line no-console\n    if (typeof console !== 'undefined') console.warn(message);\n\n    try {\n      // Welcome to debugging history!\n      //\n      // This error is thrown as a convenience so you can more easily\n      // find the source for a warning that appears in the console by\n      // enabling \"pause on exceptions\" in your JavaScript debugger.\n      throw new Error(message); // eslint-disable-next-line no-empty\n    } catch (e) {}\n  }\n}\n\nvar BeforeUnloadEventType = 'beforeunload';\nvar HashChangeEventType = 'hashchange';\nvar PopStateEventType = 'popstate';\n/**\r\n * Browser history stores the location in regular URLs. This is the standard for\r\n * most web apps, but it requires some configuration on the server to ensure you\r\n * serve the same app at multiple URLs.\r\n *\r\n * @see https://github.com/remix-run/history/tree/main/docs/api-reference.md#createbrowserhistory\r\n */\n\nfunction createBrowserHistory(options) {\n  if (options === void 0) {\n    options = {};\n  }\n\n  var _options = options,\n      _options$window = _options.window,\n      window = _options$window === void 0 ? document.defaultView : _options$window;\n  var globalHistory = window.history;\n\n  function getIndexAndLocation() {\n    var _window$location = window.location,\n        pathname = _window$location.pathname,\n        search = _window$location.search,\n        hash = _window$location.hash;\n    var state = globalHistory.state || {};\n    return [state.idx, readOnly({\n      pathname: pathname,\n      search: search,\n      hash: hash,\n      state: state.usr || null,\n      key: state.key || 'default'\n    })];\n  }\n\n  var blockedPopTx = null;\n\n  function handlePop() {\n    if (blockedPopTx) {\n      blockers.call(blockedPopTx);\n      blockedPopTx = null;\n    } else {\n      var nextAction = Action.Pop;\n\n      var _getIndexAndLocation = getIndexAndLocation(),\n          nextIndex = _getIndexAndLocation[0],\n          nextLocation = _getIndexAndLocation[1];\n\n      if (blockers.length) {\n        if (nextIndex != null) {\n          var delta = index - nextIndex;\n\n          if (delta) {\n            // Revert the POP\n            blockedPopTx = {\n              action: nextAction,\n              location: nextLocation,\n              retry: function retry() {\n                go(delta * -1);\n              }\n            };\n            go(delta);\n          }\n        } else {\n          // Trying to POP to a location with no index. We did not create\n          // this location, so we can't effectively block the navigation.\n          process.env.NODE_ENV !== \"production\" ? warning(false, // TODO: Write up a doc that explains our blocking strategy in\n          // detail and link to it here so people can understand better what\n          // is going on and how to avoid it.\n          \"You are trying to block a POP navigation to a location that was not \" + \"created by the history library. The block will fail silently in \" + \"production, but in general you should do all navigation with the \" + \"history library (instead of using window.history.pushState directly) \" + \"to avoid this situation.\") : void 0;\n        }\n      } else {\n        applyTx(nextAction);\n      }\n    }\n  }\n\n  window.addEventListener(PopStateEventType, handlePop);\n  var action = Action.Pop;\n\n  var _getIndexAndLocation2 = getIndexAndLocation(),\n      index = _getIndexAndLocation2[0],\n      location = _getIndexAndLocation2[1];\n\n  var listeners = createEvents();\n  var blockers = createEvents();\n\n  if (index == null) {\n    index = 0;\n    globalHistory.replaceState(_extends({}, globalHistory.state, {\n      idx: index\n    }), '');\n  }\n\n  function createHref(to) {\n    return typeof to === 'string' ? to : createPath(to);\n  } // state defaults to `null` because `window.history.state` does\n\n\n  function getNextLocation(to, state) {\n    if (state === void 0) {\n      state = null;\n    }\n\n    return readOnly(_extends({\n      pathname: location.pathname,\n      hash: '',\n      search: ''\n    }, typeof to === 'string' ? parsePath(to) : to, {\n      state: state,\n      key: createKey()\n    }));\n  }\n\n  function getHistoryStateAndUrl(nextLocation, index) {\n    return [{\n      usr: nextLocation.state,\n      key: nextLocation.key,\n      idx: index\n    }, createHref(nextLocation)];\n  }\n\n  function allowTx(action, location, retry) {\n    return !blockers.length || (blockers.call({\n      action: action,\n      location: location,\n      retry: retry\n    }), false);\n  }\n\n  function applyTx(nextAction) {\n    action = nextAction;\n\n    var _getIndexAndLocation3 = getIndexAndLocation();\n\n    index = _getIndexAndLocation3[0];\n    location = _getIndexAndLocation3[1];\n    listeners.call({\n      action: action,\n      location: location\n    });\n  }\n\n  function push(to, state) {\n    var nextAction = Action.Push;\n    var nextLocation = getNextLocation(to, state);\n\n    function retry() {\n      push(to, state);\n    }\n\n    if (allowTx(nextAction, nextLocation, retry)) {\n      var _getHistoryStateAndUr = getHistoryStateAndUrl(nextLocation, index + 1),\n          historyState = _getHistoryStateAndUr[0],\n          url = _getHistoryStateAndUr[1]; // TODO: Support forced reloading\n      // try...catch because iOS limits us to 100 pushState calls :/\n\n\n      try {\n        globalHistory.pushState(historyState, '', url);\n      } catch (error) {\n        // They are going to lose state here, but there is no real\n        // way to warn them about it since the page will refresh...\n        window.location.assign(url);\n      }\n\n      applyTx(nextAction);\n    }\n  }\n\n  function replace(to, state) {\n    var nextAction = Action.Replace;\n    var nextLocation = getNextLocation(to, state);\n\n    function retry() {\n      replace(to, state);\n    }\n\n    if (allowTx(nextAction, nextLocation, retry)) {\n      var _getHistoryStateAndUr2 = getHistoryStateAndUrl(nextLocation, index),\n          historyState = _getHistoryStateAndUr2[0],\n          url = _getHistoryStateAndUr2[1]; // TODO: Support forced reloading\n\n\n      globalHistory.replaceState(historyState, '', url);\n      applyTx(nextAction);\n    }\n  }\n\n  function go(delta) {\n    globalHistory.go(delta);\n  }\n\n  var history = {\n    get action() {\n      return action;\n    },\n\n    get location() {\n      return location;\n    },\n\n    createHref: createHref,\n    push: push,\n    replace: replace,\n    go: go,\n    back: function back() {\n      go(-1);\n    },\n    forward: function forward() {\n      go(1);\n    },\n    listen: function listen(listener) {\n      return listeners.push(listener);\n    },\n    block: function block(blocker) {\n      var unblock = blockers.push(blocker);\n\n      if (blockers.length === 1) {\n        window.addEventListener(BeforeUnloadEventType, promptBeforeUnload);\n      }\n\n      return function () {\n        unblock(); // Remove the beforeunload listener so the document may\n        // still be salvageable in the pagehide event.\n        // See https://html.spec.whatwg.org/#unloading-documents\n\n        if (!blockers.length) {\n          window.removeEventListener(BeforeUnloadEventType, promptBeforeUnload);\n        }\n      };\n    }\n  };\n  return history;\n}\n/**\r\n * Hash history stores the location in window.location.hash. This makes it ideal\r\n * for situations where you don't want to send the location to the server for\r\n * some reason, either because you do cannot configure it or the URL space is\r\n * reserved for something else.\r\n *\r\n * @see https://github.com/remix-run/history/tree/main/docs/api-reference.md#createhashhistory\r\n */\n\nfunction createHashHistory(options) {\n  if (options === void 0) {\n    options = {};\n  }\n\n  var _options2 = options,\n      _options2$window = _options2.window,\n      window = _options2$window === void 0 ? document.defaultView : _options2$window;\n  var globalHistory = window.history;\n\n  function getIndexAndLocation() {\n    var _parsePath = parsePath(window.location.hash.substr(1)),\n        _parsePath$pathname = _parsePath.pathname,\n        pathname = _parsePath$pathname === void 0 ? '/' : _parsePath$pathname,\n        _parsePath$search = _parsePath.search,\n        search = _parsePath$search === void 0 ? '' : _parsePath$search,\n        _parsePath$hash = _parsePath.hash,\n        hash = _parsePath$hash === void 0 ? '' : _parsePath$hash;\n\n    var state = globalHistory.state || {};\n    return [state.idx, readOnly({\n      pathname: pathname,\n      search: search,\n      hash: hash,\n      state: state.usr || null,\n      key: state.key || 'default'\n    })];\n  }\n\n  var blockedPopTx = null;\n\n  function handlePop() {\n    if (blockedPopTx) {\n      blockers.call(blockedPopTx);\n      blockedPopTx = null;\n    } else {\n      var nextAction = Action.Pop;\n\n      var _getIndexAndLocation4 = getIndexAndLocation(),\n          nextIndex = _getIndexAndLocation4[0],\n          nextLocation = _getIndexAndLocation4[1];\n\n      if (blockers.length) {\n        if (nextIndex != null) {\n          var delta = index - nextIndex;\n\n          if (delta) {\n            // Revert the POP\n            blockedPopTx = {\n              action: nextAction,\n              location: nextLocation,\n              retry: function retry() {\n                go(delta * -1);\n              }\n            };\n            go(delta);\n          }\n        } else {\n          // Trying to POP to a location with no index. We did not create\n          // this location, so we can't effectively block the navigation.\n          process.env.NODE_ENV !== \"production\" ? warning(false, // TODO: Write up a doc that explains our blocking strategy in\n          // detail and link to it here so people can understand better\n          // what is going on and how to avoid it.\n          \"You are trying to block a POP navigation to a location that was not \" + \"created by the history library. The block will fail silently in \" + \"production, but in general you should do all navigation with the \" + \"history library (instead of using window.history.pushState directly) \" + \"to avoid this situation.\") : void 0;\n        }\n      } else {\n        applyTx(nextAction);\n      }\n    }\n  }\n\n  window.addEventListener(PopStateEventType, handlePop); // popstate does not fire on hashchange in IE 11 and old (trident) Edge\n  // https://developer.mozilla.org/de/docs/Web/API/Window/popstate_event\n\n  window.addEventListener(HashChangeEventType, function () {\n    var _getIndexAndLocation5 = getIndexAndLocation(),\n        nextLocation = _getIndexAndLocation5[1]; // Ignore extraneous hashchange events.\n\n\n    if (createPath(nextLocation) !== createPath(location)) {\n      handlePop();\n    }\n  });\n  var action = Action.Pop;\n\n  var _getIndexAndLocation6 = getIndexAndLocation(),\n      index = _getIndexAndLocation6[0],\n      location = _getIndexAndLocation6[1];\n\n  var listeners = createEvents();\n  var blockers = createEvents();\n\n  if (index == null) {\n    index = 0;\n    globalHistory.replaceState(_extends({}, globalHistory.state, {\n      idx: index\n    }), '');\n  }\n\n  function getBaseHref() {\n    var base = document.querySelector('base');\n    var href = '';\n\n    if (base && base.getAttribute('href')) {\n      var url = window.location.href;\n      var hashIndex = url.indexOf('#');\n      href = hashIndex === -1 ? url : url.slice(0, hashIndex);\n    }\n\n    return href;\n  }\n\n  function createHref(to) {\n    return getBaseHref() + '#' + (typeof to === 'string' ? to : createPath(to));\n  }\n\n  function getNextLocation(to, state) {\n    if (state === void 0) {\n      state = null;\n    }\n\n    return readOnly(_extends({\n      pathname: location.pathname,\n      hash: '',\n      search: ''\n    }, typeof to === 'string' ? parsePath(to) : to, {\n      state: state,\n      key: createKey()\n    }));\n  }\n\n  function getHistoryStateAndUrl(nextLocation, index) {\n    return [{\n      usr: nextLocation.state,\n      key: nextLocation.key,\n      idx: index\n    }, createHref(nextLocation)];\n  }\n\n  function allowTx(action, location, retry) {\n    return !blockers.length || (blockers.call({\n      action: action,\n      location: location,\n      retry: retry\n    }), false);\n  }\n\n  function applyTx(nextAction) {\n    action = nextAction;\n\n    var _getIndexAndLocation7 = getIndexAndLocation();\n\n    index = _getIndexAndLocation7[0];\n    location = _getIndexAndLocation7[1];\n    listeners.call({\n      action: action,\n      location: location\n    });\n  }\n\n  function push(to, state) {\n    var nextAction = Action.Push;\n    var nextLocation = getNextLocation(to, state);\n\n    function retry() {\n      push(to, state);\n    }\n\n    process.env.NODE_ENV !== \"production\" ? warning(nextLocation.pathname.charAt(0) === '/', \"Relative pathnames are not supported in hash history.push(\" + JSON.stringify(to) + \")\") : void 0;\n\n    if (allowTx(nextAction, nextLocation, retry)) {\n      var _getHistoryStateAndUr3 = getHistoryStateAndUrl(nextLocation, index + 1),\n          historyState = _getHistoryStateAndUr3[0],\n          url = _getHistoryStateAndUr3[1]; // TODO: Support forced reloading\n      // try...catch because iOS limits us to 100 pushState calls :/\n\n\n      try {\n        globalHistory.pushState(historyState, '', url);\n      } catch (error) {\n        // They are going to lose state here, but there is no real\n        // way to warn them about it since the page will refresh...\n        window.location.assign(url);\n      }\n\n      applyTx(nextAction);\n    }\n  }\n\n  function replace(to, state) {\n    var nextAction = Action.Replace;\n    var nextLocation = getNextLocation(to, state);\n\n    function retry() {\n      replace(to, state);\n    }\n\n    process.env.NODE_ENV !== \"production\" ? warning(nextLocation.pathname.charAt(0) === '/', \"Relative pathnames are not supported in hash history.replace(\" + JSON.stringify(to) + \")\") : void 0;\n\n    if (allowTx(nextAction, nextLocation, retry)) {\n      var _getHistoryStateAndUr4 = getHistoryStateAndUrl(nextLocation, index),\n          historyState = _getHistoryStateAndUr4[0],\n          url = _getHistoryStateAndUr4[1]; // TODO: Support forced reloading\n\n\n      globalHistory.replaceState(historyState, '', url);\n      applyTx(nextAction);\n    }\n  }\n\n  function go(delta) {\n    globalHistory.go(delta);\n  }\n\n  var history = {\n    get action() {\n      return action;\n    },\n\n    get location() {\n      return location;\n    },\n\n    createHref: createHref,\n    push: push,\n    replace: replace,\n    go: go,\n    back: function back() {\n      go(-1);\n    },\n    forward: function forward() {\n      go(1);\n    },\n    listen: function listen(listener) {\n      return listeners.push(listener);\n    },\n    block: function block(blocker) {\n      var unblock = blockers.push(blocker);\n\n      if (blockers.length === 1) {\n        window.addEventListener(BeforeUnloadEventType, promptBeforeUnload);\n      }\n\n      return function () {\n        unblock(); // Remove the beforeunload listener so the document may\n        // still be salvageable in the pagehide event.\n        // See https://html.spec.whatwg.org/#unloading-documents\n\n        if (!blockers.length) {\n          window.removeEventListener(BeforeUnloadEventType, promptBeforeUnload);\n        }\n      };\n    }\n  };\n  return history;\n}\n/**\r\n * Memory history stores the current location in memory. It is designed for use\r\n * in stateful non-browser environments like tests and React Native.\r\n *\r\n * @see https://github.com/remix-run/history/tree/main/docs/api-reference.md#creatememoryhistory\r\n */\n\nfunction createMemoryHistory(options) {\n  if (options === void 0) {\n    options = {};\n  }\n\n  var _options3 = options,\n      _options3$initialEntr = _options3.initialEntries,\n      initialEntries = _options3$initialEntr === void 0 ? ['/'] : _options3$initialEntr,\n      initialIndex = _options3.initialIndex;\n  var entries = initialEntries.map(function (entry) {\n    var location = readOnly(_extends({\n      pathname: '/',\n      search: '',\n      hash: '',\n      state: null,\n      key: createKey()\n    }, typeof entry === 'string' ? parsePath(entry) : entry));\n    process.env.NODE_ENV !== \"production\" ? warning(location.pathname.charAt(0) === '/', \"Relative pathnames are not supported in createMemoryHistory({ initialEntries }) (invalid entry: \" + JSON.stringify(entry) + \")\") : void 0;\n    return location;\n  });\n  var index = clamp(initialIndex == null ? entries.length - 1 : initialIndex, 0, entries.length - 1);\n  var action = Action.Pop;\n  var location = entries[index];\n  var listeners = createEvents();\n  var blockers = createEvents();\n\n  function createHref(to) {\n    return typeof to === 'string' ? to : createPath(to);\n  }\n\n  function getNextLocation(to, state) {\n    if (state === void 0) {\n      state = null;\n    }\n\n    return readOnly(_extends({\n      pathname: location.pathname,\n      search: '',\n      hash: ''\n    }, typeof to === 'string' ? parsePath(to) : to, {\n      state: state,\n      key: createKey()\n    }));\n  }\n\n  function allowTx(action, location, retry) {\n    return !blockers.length || (blockers.call({\n      action: action,\n      location: location,\n      retry: retry\n    }), false);\n  }\n\n  function applyTx(nextAction, nextLocation) {\n    action = nextAction;\n    location = nextLocation;\n    listeners.call({\n      action: action,\n      location: location\n    });\n  }\n\n  function push(to, state) {\n    var nextAction = Action.Push;\n    var nextLocation = getNextLocation(to, state);\n\n    function retry() {\n      push(to, state);\n    }\n\n    process.env.NODE_ENV !== \"production\" ? warning(location.pathname.charAt(0) === '/', \"Relative pathnames are not supported in memory history.push(\" + JSON.stringify(to) + \")\") : void 0;\n\n    if (allowTx(nextAction, nextLocation, retry)) {\n      index += 1;\n      entries.splice(index, entries.length, nextLocation);\n      applyTx(nextAction, nextLocation);\n    }\n  }\n\n  function replace(to, state) {\n    var nextAction = Action.Replace;\n    var nextLocation = getNextLocation(to, state);\n\n    function retry() {\n      replace(to, state);\n    }\n\n    process.env.NODE_ENV !== \"production\" ? warning(location.pathname.charAt(0) === '/', \"Relative pathnames are not supported in memory history.replace(\" + JSON.stringify(to) + \")\") : void 0;\n\n    if (allowTx(nextAction, nextLocation, retry)) {\n      entries[index] = nextLocation;\n      applyTx(nextAction, nextLocation);\n    }\n  }\n\n  function go(delta) {\n    var nextIndex = clamp(index + delta, 0, entries.length - 1);\n    var nextAction = Action.Pop;\n    var nextLocation = entries[nextIndex];\n\n    function retry() {\n      go(delta);\n    }\n\n    if (allowTx(nextAction, nextLocation, retry)) {\n      index = nextIndex;\n      applyTx(nextAction, nextLocation);\n    }\n  }\n\n  var history = {\n    get index() {\n      return index;\n    },\n\n    get action() {\n      return action;\n    },\n\n    get location() {\n      return location;\n    },\n\n    createHref: createHref,\n    push: push,\n    replace: replace,\n    go: go,\n    back: function back() {\n      go(-1);\n    },\n    forward: function forward() {\n      go(1);\n    },\n    listen: function listen(listener) {\n      return listeners.push(listener);\n    },\n    block: function block(blocker) {\n      return blockers.push(blocker);\n    }\n  };\n  return history;\n} ////////////////////////////////////////////////////////////////////////////////\n// UTILS\n////////////////////////////////////////////////////////////////////////////////\n\nfunction clamp(n, lowerBound, upperBound) {\n  return Math.min(Math.max(n, lowerBound), upperBound);\n}\n\nfunction promptBeforeUnload(event) {\n  // Cancel the event.\n  event.preventDefault(); // Chrome (and legacy IE) requires returnValue to be set.\n\n  event.returnValue = '';\n}\n\nfunction createEvents() {\n  var handlers = [];\n  return {\n    get length() {\n      return handlers.length;\n    },\n\n    push: function push(fn) {\n      handlers.push(fn);\n      return function () {\n        handlers = handlers.filter(function (handler) {\n          return handler !== fn;\n        });\n      };\n    },\n    call: function call(arg) {\n      handlers.forEach(function (fn) {\n        return fn && fn(arg);\n      });\n    }\n  };\n}\n\nfunction createKey() {\n  return Math.random().toString(36).substr(2, 8);\n}\n/**\r\n * Creates a string URL path from the given pathname, search, and hash components.\r\n *\r\n * @see https://github.com/remix-run/history/tree/main/docs/api-reference.md#createpath\r\n */\n\n\nfunction createPath(_ref) {\n  var _ref$pathname = _ref.pathname,\n      pathname = _ref$pathname === void 0 ? '/' : _ref$pathname,\n      _ref$search = _ref.search,\n      search = _ref$search === void 0 ? '' : _ref$search,\n      _ref$hash = _ref.hash,\n      hash = _ref$hash === void 0 ? '' : _ref$hash;\n  if (search && search !== '?') pathname += search.charAt(0) === '?' ? search : '?' + search;\n  if (hash && hash !== '#') pathname += hash.charAt(0) === '#' ? hash : '#' + hash;\n  return pathname;\n}\n/**\r\n * Parses a string URL path into its separate pathname, search, and hash components.\r\n *\r\n * @see https://github.com/remix-run/history/tree/main/docs/api-reference.md#parsepath\r\n */\n\nfunction parsePath(path) {\n  var parsedPath = {};\n\n  if (path) {\n    var hashIndex = path.indexOf('#');\n\n    if (hashIndex >= 0) {\n      parsedPath.hash = path.substr(hashIndex);\n      path = path.substr(0, hashIndex);\n    }\n\n    var searchIndex = path.indexOf('?');\n\n    if (searchIndex >= 0) {\n      parsedPath.search = path.substr(searchIndex);\n      path = path.substr(0, searchIndex);\n    }\n\n    if (path) {\n      parsedPath.pathname = path;\n    }\n  }\n\n  return parsedPath;\n}\n\nexport { Action, createBrowserHistory, createHashHistory, createMemoryHistory, createPath, parsePath };\n//# sourceMappingURL=index.js.map\n","import { createBrowserHistory } from 'history';\r\nconst history = createBrowserHistory();\r\nexport default history;\r\n","const scriptRel = 'modulepreload';const seen = {};const base = '/';export const __vitePreload = function preload(baseModule, deps) {\n    // @ts-ignore\n    if (!__VITE_IS_MODERN__ || !deps || deps.length === 0) {\n        return baseModule();\n    }\n    return Promise.all(deps.map((dep) => {\n        // @ts-ignore\n        dep = `${base}${dep}`;\n        // @ts-ignore\n        if (dep in seen)\n            return;\n        // @ts-ignore\n        seen[dep] = true;\n        const isCss = dep.endsWith('.css');\n        const cssSelector = isCss ? '[rel=\"stylesheet\"]' : '';\n        // @ts-ignore check if the file is already preloaded by SSR markup\n        if (document.querySelector(`link[href=\"${dep}\"]${cssSelector}`)) {\n            return;\n        }\n        // @ts-ignore\n        const link = document.createElement('link');\n        // @ts-ignore\n        link.rel = isCss ? 'stylesheet' : scriptRel;\n        if (!isCss) {\n            link.as = 'script';\n            link.crossOrigin = '';\n        }\n        link.href = dep;\n        // @ts-ignore\n        document.head.appendChild(link);\n        if (isCss) {\n            return new Promise((res, rej) => {\n                link.addEventListener('load', res);\n                link.addEventListener('error', () => rej(new Error(`Unable to preload CSS for ${dep}`)));\n            });\n        }\n    })).then(() => baseModule());\n}","/*\r\n * @Descripttion:\r\n * @version:\r\n * @Author: 小白\r\n * @Date: 2020-10-05 22:06:34\r\n * @LastEditors: lkx\r\n * @LastEditTime: 2022-10-19 09:49:45\r\n */\r\nimport { White } from '@/typings';\r\nimport { lazy } from 'react';\r\nconst Search = lazy(() => import(/* chunkName: \"Search\" */ '@/pages/Search'));\r\nconst List = lazy(() => import(/* chunkName: List */ '@/pages/List'));\r\nconst Home = lazy(() => import(/* chunkName: Home */ '@/pages/Home'));\r\nconst Detail = lazy(() => import(/* chunkName: Detail */ '@/pages/Detail'));\r\nconst Index = lazy(() => import(/* chunkName: Index */ '@/pages/Index'));\r\nconst Other = lazy(() => import(/* chunkName: Other */ '@/pages/Other'));\r\nconst Other1 = lazy(() => import(/* chunkName: Other1 */ '@/pages/Other1'));\r\nconst NoFound = lazy(\r\n  () => import(/* chunkName: NoFound */ '../components/NoFound'),\r\n);\r\nexport const TabBarList: White.RouteTabBar[] = [\r\n  {\r\n    path: '/',\r\n    component: Home,\r\n    icon: 'white-home1',\r\n    sceneMode: 'scroll',\r\n    title: '首页',\r\n  },\r\n  {\r\n    path: '/detail',\r\n    component: Detail,\r\n    icon: 'white-tradingdata',\r\n    sceneMode: 'scroll',\r\n    title: '动态',\r\n  },\r\n  {\r\n    path: '/list',\r\n    component: List,\r\n    icon: 'white-order',\r\n    sceneMode: 'scroll',\r\n    title: '记录',\r\n  },\r\n  {\r\n    path: '/search',\r\n    component: Search,\r\n    icon: 'white-account',\r\n    sceneMode: 'scroll',\r\n    title: '我的',\r\n  },\r\n];\r\n\r\nconst routes: White.RouteConfig[] = [\r\n  {\r\n    path: '/',\r\n    component: Index,\r\n    tabBars: TabBarList,\r\n  },\r\n  {\r\n    path: '/other',\r\n    component: Other,\r\n  },\r\n  {\r\n    path: '/other1',\r\n    sceneMode: 'bottom',\r\n    component: Other1,\r\n  },\r\n  {\r\n    path: '/dcotorDetail',\r\n    component: Detail,\r\n  },\r\n  {\r\n    path: '*',\r\n    component: NoFound,\r\n  },\r\n];\r\n\r\nexport default [...routes];\r\n","import history from '@/utils/history';\r\nimport { FC, memo, useCallback, useEffect, useRef, useState } from 'react';\r\nimport { useLocation, matchPath } from 'react-router-dom';\r\nimport routers from '../../routers';\r\nimport styles from './index.module.less';\r\nconst TabBarView: FC = () => {\r\n  const location = useLocation();\r\n  const tabBars = useRef(routers.find((v) => v.tabBars)?.tabBars);\r\n  const [state, setstate] = useState(\r\n    tabBars.current?.findIndex((v) => v.path === window.location.pathname),\r\n  );\r\n  const OnTabClick = useCallback(\r\n    (index, path) => {\r\n      if (state === index) return;\r\n      setstate(index);\r\n      history.push(path);\r\n    },\r\n    [state],\r\n  );\r\n  useEffect(() => {\r\n    setstate(\r\n      tabBars.current?.findIndex((v) => matchPath(v.path, location.pathname)),\r\n    );\r\n  }, [location]);\r\n  const isTabBar =\r\n    tabBars.current?.findIndex((v) => matchPath(v.path, location.pathname)) !==\r\n    -1;\r\n  return (\r\n    <div\r\n      className={`${styles.tabBar} flex  justify-center items-center ${\r\n        isTabBar ? styles.in_page : styles.out_page\r\n      }`}>\r\n      {tabBars.current?.map(({ title, path, icon }, index) => (\r\n        <div\r\n          className={`flex flex-col justify-center items-center ${\r\n            styles.tabBarItem\r\n          } ${state === index ? styles.chooseed : ''}`}\r\n          key={title}\r\n          onClick={() => {\r\n            OnTabClick(index, path);\r\n          }}>\r\n          <i className={icon} />\r\n          <span>{title}</span>\r\n        </div>\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\nexport default memo(TabBarView);\r\n","import setPrototypeOf from \"./setPrototypeOf.js\";\nexport default function _inheritsLoose(subClass, superClass) {\n  subClass.prototype = Object.create(superClass.prototype);\n  subClass.prototype.constructor = subClass;\n  setPrototypeOf(subClass, superClass);\n}","/** @license React v16.13.1\n * react-is.development.js\n *\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n'use strict';\n\n\n\nif (process.env.NODE_ENV !== \"production\") {\n  (function() {\n'use strict';\n\n// The Symbol used to tag the ReactElement-like types. If there is no native Symbol\n// nor polyfill, then a plain number is used for performance.\nvar hasSymbol = typeof Symbol === 'function' && Symbol.for;\nvar REACT_ELEMENT_TYPE = hasSymbol ? Symbol.for('react.element') : 0xeac7;\nvar REACT_PORTAL_TYPE = hasSymbol ? Symbol.for('react.portal') : 0xeaca;\nvar REACT_FRAGMENT_TYPE = hasSymbol ? Symbol.for('react.fragment') : 0xeacb;\nvar REACT_STRICT_MODE_TYPE = hasSymbol ? Symbol.for('react.strict_mode') : 0xeacc;\nvar REACT_PROFILER_TYPE = hasSymbol ? Symbol.for('react.profiler') : 0xead2;\nvar REACT_PROVIDER_TYPE = hasSymbol ? Symbol.for('react.provider') : 0xeacd;\nvar REACT_CONTEXT_TYPE = hasSymbol ? Symbol.for('react.context') : 0xeace; // TODO: We don't use AsyncMode or ConcurrentMode anymore. They were temporary\n// (unstable) APIs that have been removed. Can we remove the symbols?\n\nvar REACT_ASYNC_MODE_TYPE = hasSymbol ? Symbol.for('react.async_mode') : 0xeacf;\nvar REACT_CONCURRENT_MODE_TYPE = hasSymbol ? Symbol.for('react.concurrent_mode') : 0xeacf;\nvar REACT_FORWARD_REF_TYPE = hasSymbol ? Symbol.for('react.forward_ref') : 0xead0;\nvar REACT_SUSPENSE_TYPE = hasSymbol ? Symbol.for('react.suspense') : 0xead1;\nvar REACT_SUSPENSE_LIST_TYPE = hasSymbol ? Symbol.for('react.suspense_list') : 0xead8;\nvar REACT_MEMO_TYPE = hasSymbol ? Symbol.for('react.memo') : 0xead3;\nvar REACT_LAZY_TYPE = hasSymbol ? Symbol.for('react.lazy') : 0xead4;\nvar REACT_BLOCK_TYPE = hasSymbol ? Symbol.for('react.block') : 0xead9;\nvar REACT_FUNDAMENTAL_TYPE = hasSymbol ? Symbol.for('react.fundamental') : 0xead5;\nvar REACT_RESPONDER_TYPE = hasSymbol ? Symbol.for('react.responder') : 0xead6;\nvar REACT_SCOPE_TYPE = hasSymbol ? Symbol.for('react.scope') : 0xead7;\n\nfunction isValidElementType(type) {\n  return typeof type === 'string' || typeof type === 'function' || // Note: its typeof might be other than 'symbol' or 'number' if it's a polyfill.\n  type === REACT_FRAGMENT_TYPE || type === REACT_CONCURRENT_MODE_TYPE || type === REACT_PROFILER_TYPE || type === REACT_STRICT_MODE_TYPE || type === REACT_SUSPENSE_TYPE || type === REACT_SUSPENSE_LIST_TYPE || typeof type === 'object' && type !== null && (type.$$typeof === REACT_LAZY_TYPE || type.$$typeof === REACT_MEMO_TYPE || type.$$typeof === REACT_PROVIDER_TYPE || type.$$typeof === REACT_CONTEXT_TYPE || type.$$typeof === REACT_FORWARD_REF_TYPE || type.$$typeof === REACT_FUNDAMENTAL_TYPE || type.$$typeof === REACT_RESPONDER_TYPE || type.$$typeof === REACT_SCOPE_TYPE || type.$$typeof === REACT_BLOCK_TYPE);\n}\n\nfunction typeOf(object) {\n  if (typeof object === 'object' && object !== null) {\n    var $$typeof = object.$$typeof;\n\n    switch ($$typeof) {\n      case REACT_ELEMENT_TYPE:\n        var type = object.type;\n\n        switch (type) {\n          case REACT_ASYNC_MODE_TYPE:\n          case REACT_CONCURRENT_MODE_TYPE:\n          case REACT_FRAGMENT_TYPE:\n          case REACT_PROFILER_TYPE:\n          case REACT_STRICT_MODE_TYPE:\n          case REACT_SUSPENSE_TYPE:\n            return type;\n\n          default:\n            var $$typeofType = type && type.$$typeof;\n\n            switch ($$typeofType) {\n              case REACT_CONTEXT_TYPE:\n              case REACT_FORWARD_REF_TYPE:\n              case REACT_LAZY_TYPE:\n              case REACT_MEMO_TYPE:\n              case REACT_PROVIDER_TYPE:\n                return $$typeofType;\n\n              default:\n                return $$typeof;\n            }\n\n        }\n\n      case REACT_PORTAL_TYPE:\n        return $$typeof;\n    }\n  }\n\n  return undefined;\n} // AsyncMode is deprecated along with isAsyncMode\n\nvar AsyncMode = REACT_ASYNC_MODE_TYPE;\nvar ConcurrentMode = REACT_CONCURRENT_MODE_TYPE;\nvar ContextConsumer = REACT_CONTEXT_TYPE;\nvar ContextProvider = REACT_PROVIDER_TYPE;\nvar Element = REACT_ELEMENT_TYPE;\nvar ForwardRef = REACT_FORWARD_REF_TYPE;\nvar Fragment = REACT_FRAGMENT_TYPE;\nvar Lazy = REACT_LAZY_TYPE;\nvar Memo = REACT_MEMO_TYPE;\nvar Portal = REACT_PORTAL_TYPE;\nvar Profiler = REACT_PROFILER_TYPE;\nvar StrictMode = REACT_STRICT_MODE_TYPE;\nvar Suspense = REACT_SUSPENSE_TYPE;\nvar hasWarnedAboutDeprecatedIsAsyncMode = false; // AsyncMode should be deprecated\n\nfunction isAsyncMode(object) {\n  {\n    if (!hasWarnedAboutDeprecatedIsAsyncMode) {\n      hasWarnedAboutDeprecatedIsAsyncMode = true; // Using console['warn'] to evade Babel and ESLint\n\n      console['warn']('The ReactIs.isAsyncMode() alias has been deprecated, ' + 'and will be removed in React 17+. Update your code to use ' + 'ReactIs.isConcurrentMode() instead. It has the exact same API.');\n    }\n  }\n\n  return isConcurrentMode(object) || typeOf(object) === REACT_ASYNC_MODE_TYPE;\n}\nfunction isConcurrentMode(object) {\n  return typeOf(object) === REACT_CONCURRENT_MODE_TYPE;\n}\nfunction isContextConsumer(object) {\n  return typeOf(object) === REACT_CONTEXT_TYPE;\n}\nfunction isContextProvider(object) {\n  return typeOf(object) === REACT_PROVIDER_TYPE;\n}\nfunction isElement(object) {\n  return typeof object === 'object' && object !== null && object.$$typeof === REACT_ELEMENT_TYPE;\n}\nfunction isForwardRef(object) {\n  return typeOf(object) === REACT_FORWARD_REF_TYPE;\n}\nfunction isFragment(object) {\n  return typeOf(object) === REACT_FRAGMENT_TYPE;\n}\nfunction isLazy(object) {\n  return typeOf(object) === REACT_LAZY_TYPE;\n}\nfunction isMemo(object) {\n  return typeOf(object) === REACT_MEMO_TYPE;\n}\nfunction isPortal(object) {\n  return typeOf(object) === REACT_PORTAL_TYPE;\n}\nfunction isProfiler(object) {\n  return typeOf(object) === REACT_PROFILER_TYPE;\n}\nfunction isStrictMode(object) {\n  return typeOf(object) === REACT_STRICT_MODE_TYPE;\n}\nfunction isSuspense(object) {\n  return typeOf(object) === REACT_SUSPENSE_TYPE;\n}\n\nexports.AsyncMode = AsyncMode;\nexports.ConcurrentMode = ConcurrentMode;\nexports.ContextConsumer = ContextConsumer;\nexports.ContextProvider = ContextProvider;\nexports.Element = Element;\nexports.ForwardRef = ForwardRef;\nexports.Fragment = Fragment;\nexports.Lazy = Lazy;\nexports.Memo = Memo;\nexports.Portal = Portal;\nexports.Profiler = Profiler;\nexports.StrictMode = StrictMode;\nexports.Suspense = Suspense;\nexports.isAsyncMode = isAsyncMode;\nexports.isConcurrentMode = isConcurrentMode;\nexports.isContextConsumer = isContextConsumer;\nexports.isContextProvider = isContextProvider;\nexports.isElement = isElement;\nexports.isForwardRef = isForwardRef;\nexports.isFragment = isFragment;\nexports.isLazy = isLazy;\nexports.isMemo = isMemo;\nexports.isPortal = isPortal;\nexports.isProfiler = isProfiler;\nexports.isStrictMode = isStrictMode;\nexports.isSuspense = isSuspense;\nexports.isValidElementType = isValidElementType;\nexports.typeOf = typeOf;\n  })();\n}\n","'use strict';\n\nif (process.env.NODE_ENV === 'production') {\n  module.exports = require('./cjs/react-is.production.min.js');\n} else {\n  module.exports = require('./cjs/react-is.development.js');\n}\n","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n'use strict';\n\nvar ReactPropTypesSecret = 'SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED';\n\nmodule.exports = ReactPropTypesSecret;\n","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n'use strict';\n\nvar printWarning = function() {};\n\nif (process.env.NODE_ENV !== 'production') {\n  var ReactPropTypesSecret = require('./lib/ReactPropTypesSecret');\n  var loggedTypeFailures = {};\n  var has = require('./lib/has');\n\n  printWarning = function(text) {\n    var message = 'Warning: ' + text;\n    if (typeof console !== 'undefined') {\n      console.error(message);\n    }\n    try {\n      // --- Welcome to debugging React ---\n      // This error was thrown as a convenience so that you can use this stack\n      // to find the callsite that caused this warning to fire.\n      throw new Error(message);\n    } catch (x) { /**/ }\n  };\n}\n\n/**\n * Assert that the values match with the type specs.\n * Error messages are memorized and will only be shown once.\n *\n * @param {object} typeSpecs Map of name to a ReactPropType\n * @param {object} values Runtime values that need to be type-checked\n * @param {string} location e.g. \"prop\", \"context\", \"child context\"\n * @param {string} componentName Name of the component for error messages.\n * @param {?Function} getStack Returns the component stack.\n * @private\n */\nfunction checkPropTypes(typeSpecs, values, location, componentName, getStack) {\n  if (process.env.NODE_ENV !== 'production') {\n    for (var typeSpecName in typeSpecs) {\n      if (has(typeSpecs, typeSpecName)) {\n        var error;\n        // Prop type validation may throw. In case they do, we don't want to\n        // fail the render phase where it didn't fail before. So we log it.\n        // After these have been cleaned up, we'll let them throw.\n        try {\n          // This is intentionally an invariant that gets caught. It's the same\n          // behavior as without this statement except with a better message.\n          if (typeof typeSpecs[typeSpecName] !== 'function') {\n            var err = Error(\n              (componentName || 'React class') + ': ' + location + ' type `' + typeSpecName + '` is invalid; ' +\n              'it must be a function, usually from the `prop-types` package, but received `' + typeof typeSpecs[typeSpecName] + '`.' +\n              'This often happens because of typos such as `PropTypes.function` instead of `PropTypes.func`.'\n            );\n            err.name = 'Invariant Violation';\n            throw err;\n          }\n          error = typeSpecs[typeSpecName](values, typeSpecName, componentName, location, null, ReactPropTypesSecret);\n        } catch (ex) {\n          error = ex;\n        }\n        if (error && !(error instanceof Error)) {\n          printWarning(\n            (componentName || 'React class') + ': type specification of ' +\n            location + ' `' + typeSpecName + '` is invalid; the type checker ' +\n            'function must return `null` or an `Error` but returned a ' + typeof error + '. ' +\n            'You may have forgotten to pass an argument to the type checker ' +\n            'creator (arrayOf, instanceOf, objectOf, oneOf, oneOfType, and ' +\n            'shape all require an argument).'\n          );\n        }\n        if (error instanceof Error && !(error.message in loggedTypeFailures)) {\n          // Only monitor this failure once because there tends to be a lot of the\n          // same error.\n          loggedTypeFailures[error.message] = true;\n\n          var stack = getStack ? getStack() : '';\n\n          printWarning(\n            'Failed ' + location + ' type: ' + error.message + (stack != null ? stack : '')\n          );\n        }\n      }\n    }\n  }\n}\n\n/**\n * Resets warning cache when testing.\n *\n * @private\n */\ncheckPropTypes.resetWarningCache = function() {\n  if (process.env.NODE_ENV !== 'production') {\n    loggedTypeFailures = {};\n  }\n}\n\nmodule.exports = checkPropTypes;\n","module.exports = Function.call.bind(Object.prototype.hasOwnProperty);\n","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n'use strict';\n\nvar ReactIs = require('react-is');\nvar assign = require('object-assign');\n\nvar ReactPropTypesSecret = require('./lib/ReactPropTypesSecret');\nvar has = require('./lib/has');\nvar checkPropTypes = require('./checkPropTypes');\n\nvar printWarning = function() {};\n\nif (process.env.NODE_ENV !== 'production') {\n  printWarning = function(text) {\n    var message = 'Warning: ' + text;\n    if (typeof console !== 'undefined') {\n      console.error(message);\n    }\n    try {\n      // --- Welcome to debugging React ---\n      // This error was thrown as a convenience so that you can use this stack\n      // to find the callsite that caused this warning to fire.\n      throw new Error(message);\n    } catch (x) {}\n  };\n}\n\nfunction emptyFunctionThatReturnsNull() {\n  return null;\n}\n\nmodule.exports = function(isValidElement, throwOnDirectAccess) {\n  /* global Symbol */\n  var ITERATOR_SYMBOL = typeof Symbol === 'function' && Symbol.iterator;\n  var FAUX_ITERATOR_SYMBOL = '@@iterator'; // Before Symbol spec.\n\n  /**\n   * Returns the iterator method function contained on the iterable object.\n   *\n   * Be sure to invoke the function with the iterable as context:\n   *\n   *     var iteratorFn = getIteratorFn(myIterable);\n   *     if (iteratorFn) {\n   *       var iterator = iteratorFn.call(myIterable);\n   *       ...\n   *     }\n   *\n   * @param {?object} maybeIterable\n   * @return {?function}\n   */\n  function getIteratorFn(maybeIterable) {\n    var iteratorFn = maybeIterable && (ITERATOR_SYMBOL && maybeIterable[ITERATOR_SYMBOL] || maybeIterable[FAUX_ITERATOR_SYMBOL]);\n    if (typeof iteratorFn === 'function') {\n      return iteratorFn;\n    }\n  }\n\n  /**\n   * Collection of methods that allow declaration and validation of props that are\n   * supplied to React components. Example usage:\n   *\n   *   var Props = require('ReactPropTypes');\n   *   var MyArticle = React.createClass({\n   *     propTypes: {\n   *       // An optional string prop named \"description\".\n   *       description: Props.string,\n   *\n   *       // A required enum prop named \"category\".\n   *       category: Props.oneOf(['News','Photos']).isRequired,\n   *\n   *       // A prop named \"dialog\" that requires an instance of Dialog.\n   *       dialog: Props.instanceOf(Dialog).isRequired\n   *     },\n   *     render: function() { ... }\n   *   });\n   *\n   * A more formal specification of how these methods are used:\n   *\n   *   type := array|bool|func|object|number|string|oneOf([...])|instanceOf(...)\n   *   decl := ReactPropTypes.{type}(.isRequired)?\n   *\n   * Each and every declaration produces a function with the same signature. This\n   * allows the creation of custom validation functions. For example:\n   *\n   *  var MyLink = React.createClass({\n   *    propTypes: {\n   *      // An optional string or URI prop named \"href\".\n   *      href: function(props, propName, componentName) {\n   *        var propValue = props[propName];\n   *        if (propValue != null && typeof propValue !== 'string' &&\n   *            !(propValue instanceof URI)) {\n   *          return new Error(\n   *            'Expected a string or an URI for ' + propName + ' in ' +\n   *            componentName\n   *          );\n   *        }\n   *      }\n   *    },\n   *    render: function() {...}\n   *  });\n   *\n   * @internal\n   */\n\n  var ANONYMOUS = '<<anonymous>>';\n\n  // Important!\n  // Keep this list in sync with production version in `./factoryWithThrowingShims.js`.\n  var ReactPropTypes = {\n    array: createPrimitiveTypeChecker('array'),\n    bigint: createPrimitiveTypeChecker('bigint'),\n    bool: createPrimitiveTypeChecker('boolean'),\n    func: createPrimitiveTypeChecker('function'),\n    number: createPrimitiveTypeChecker('number'),\n    object: createPrimitiveTypeChecker('object'),\n    string: createPrimitiveTypeChecker('string'),\n    symbol: createPrimitiveTypeChecker('symbol'),\n\n    any: createAnyTypeChecker(),\n    arrayOf: createArrayOfTypeChecker,\n    element: createElementTypeChecker(),\n    elementType: createElementTypeTypeChecker(),\n    instanceOf: createInstanceTypeChecker,\n    node: createNodeChecker(),\n    objectOf: createObjectOfTypeChecker,\n    oneOf: createEnumTypeChecker,\n    oneOfType: createUnionTypeChecker,\n    shape: createShapeTypeChecker,\n    exact: createStrictShapeTypeChecker,\n  };\n\n  /**\n   * inlined Object.is polyfill to avoid requiring consumers ship their own\n   * https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/is\n   */\n  /*eslint-disable no-self-compare*/\n  function is(x, y) {\n    // SameValue algorithm\n    if (x === y) {\n      // Steps 1-5, 7-10\n      // Steps 6.b-6.e: +0 != -0\n      return x !== 0 || 1 / x === 1 / y;\n    } else {\n      // Step 6.a: NaN == NaN\n      return x !== x && y !== y;\n    }\n  }\n  /*eslint-enable no-self-compare*/\n\n  /**\n   * We use an Error-like object for backward compatibility as people may call\n   * PropTypes directly and inspect their output. However, we don't use real\n   * Errors anymore. We don't inspect their stack anyway, and creating them\n   * is prohibitively expensive if they are created too often, such as what\n   * happens in oneOfType() for any type before the one that matched.\n   */\n  function PropTypeError(message, data) {\n    this.message = message;\n    this.data = data && typeof data === 'object' ? data: {};\n    this.stack = '';\n  }\n  // Make `instanceof Error` still work for returned errors.\n  PropTypeError.prototype = Error.prototype;\n\n  function createChainableTypeChecker(validate) {\n    if (process.env.NODE_ENV !== 'production') {\n      var manualPropTypeCallCache = {};\n      var manualPropTypeWarningCount = 0;\n    }\n    function checkType(isRequired, props, propName, componentName, location, propFullName, secret) {\n      componentName = componentName || ANONYMOUS;\n      propFullName = propFullName || propName;\n\n      if (secret !== ReactPropTypesSecret) {\n        if (throwOnDirectAccess) {\n          // New behavior only for users of `prop-types` package\n          var err = new Error(\n            'Calling PropTypes validators directly is not supported by the `prop-types` package. ' +\n            'Use `PropTypes.checkPropTypes()` to call them. ' +\n            'Read more at http://fb.me/use-check-prop-types'\n          );\n          err.name = 'Invariant Violation';\n          throw err;\n        } else if (process.env.NODE_ENV !== 'production' && typeof console !== 'undefined') {\n          // Old behavior for people using React.PropTypes\n          var cacheKey = componentName + ':' + propName;\n          if (\n            !manualPropTypeCallCache[cacheKey] &&\n            // Avoid spamming the console because they are often not actionable except for lib authors\n            manualPropTypeWarningCount < 3\n          ) {\n            printWarning(\n              'You are manually calling a React.PropTypes validation ' +\n              'function for the `' + propFullName + '` prop on `' + componentName + '`. This is deprecated ' +\n              'and will throw in the standalone `prop-types` package. ' +\n              'You may be seeing this warning due to a third-party PropTypes ' +\n              'library. See https://fb.me/react-warning-dont-call-proptypes ' + 'for details.'\n            );\n            manualPropTypeCallCache[cacheKey] = true;\n            manualPropTypeWarningCount++;\n          }\n        }\n      }\n      if (props[propName] == null) {\n        if (isRequired) {\n          if (props[propName] === null) {\n            return new PropTypeError('The ' + location + ' `' + propFullName + '` is marked as required ' + ('in `' + componentName + '`, but its value is `null`.'));\n          }\n          return new PropTypeError('The ' + location + ' `' + propFullName + '` is marked as required in ' + ('`' + componentName + '`, but its value is `undefined`.'));\n        }\n        return null;\n      } else {\n        return validate(props, propName, componentName, location, propFullName);\n      }\n    }\n\n    var chainedCheckType = checkType.bind(null, false);\n    chainedCheckType.isRequired = checkType.bind(null, true);\n\n    return chainedCheckType;\n  }\n\n  function createPrimitiveTypeChecker(expectedType) {\n    function validate(props, propName, componentName, location, propFullName, secret) {\n      var propValue = props[propName];\n      var propType = getPropType(propValue);\n      if (propType !== expectedType) {\n        // `propValue` being instance of, say, date/regexp, pass the 'object'\n        // check, but we can offer a more precise error message here rather than\n        // 'of type `object`'.\n        var preciseType = getPreciseType(propValue);\n\n        return new PropTypeError(\n          'Invalid ' + location + ' `' + propFullName + '` of type ' + ('`' + preciseType + '` supplied to `' + componentName + '`, expected ') + ('`' + expectedType + '`.'),\n          {expectedType: expectedType}\n        );\n      }\n      return null;\n    }\n    return createChainableTypeChecker(validate);\n  }\n\n  function createAnyTypeChecker() {\n    return createChainableTypeChecker(emptyFunctionThatReturnsNull);\n  }\n\n  function createArrayOfTypeChecker(typeChecker) {\n    function validate(props, propName, componentName, location, propFullName) {\n      if (typeof typeChecker !== 'function') {\n        return new PropTypeError('Property `' + propFullName + '` of component `' + componentName + '` has invalid PropType notation inside arrayOf.');\n      }\n      var propValue = props[propName];\n      if (!Array.isArray(propValue)) {\n        var propType = getPropType(propValue);\n        return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of type ' + ('`' + propType + '` supplied to `' + componentName + '`, expected an array.'));\n      }\n      for (var i = 0; i < propValue.length; i++) {\n        var error = typeChecker(propValue, i, componentName, location, propFullName + '[' + i + ']', ReactPropTypesSecret);\n        if (error instanceof Error) {\n          return error;\n        }\n      }\n      return null;\n    }\n    return createChainableTypeChecker(validate);\n  }\n\n  function createElementTypeChecker() {\n    function validate(props, propName, componentName, location, propFullName) {\n      var propValue = props[propName];\n      if (!isValidElement(propValue)) {\n        var propType = getPropType(propValue);\n        return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of type ' + ('`' + propType + '` supplied to `' + componentName + '`, expected a single ReactElement.'));\n      }\n      return null;\n    }\n    return createChainableTypeChecker(validate);\n  }\n\n  function createElementTypeTypeChecker() {\n    function validate(props, propName, componentName, location, propFullName) {\n      var propValue = props[propName];\n      if (!ReactIs.isValidElementType(propValue)) {\n        var propType = getPropType(propValue);\n        return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of type ' + ('`' + propType + '` supplied to `' + componentName + '`, expected a single ReactElement type.'));\n      }\n      return null;\n    }\n    return createChainableTypeChecker(validate);\n  }\n\n  function createInstanceTypeChecker(expectedClass) {\n    function validate(props, propName, componentName, location, propFullName) {\n      if (!(props[propName] instanceof expectedClass)) {\n        var expectedClassName = expectedClass.name || ANONYMOUS;\n        var actualClassName = getClassName(props[propName]);\n        return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of type ' + ('`' + actualClassName + '` supplied to `' + componentName + '`, expected ') + ('instance of `' + expectedClassName + '`.'));\n      }\n      return null;\n    }\n    return createChainableTypeChecker(validate);\n  }\n\n  function createEnumTypeChecker(expectedValues) {\n    if (!Array.isArray(expectedValues)) {\n      if (process.env.NODE_ENV !== 'production') {\n        if (arguments.length > 1) {\n          printWarning(\n            'Invalid arguments supplied to oneOf, expected an array, got ' + arguments.length + ' arguments. ' +\n            'A common mistake is to write oneOf(x, y, z) instead of oneOf([x, y, z]).'\n          );\n        } else {\n          printWarning('Invalid argument supplied to oneOf, expected an array.');\n        }\n      }\n      return emptyFunctionThatReturnsNull;\n    }\n\n    function validate(props, propName, componentName, location, propFullName) {\n      var propValue = props[propName];\n      for (var i = 0; i < expectedValues.length; i++) {\n        if (is(propValue, expectedValues[i])) {\n          return null;\n        }\n      }\n\n      var valuesString = JSON.stringify(expectedValues, function replacer(key, value) {\n        var type = getPreciseType(value);\n        if (type === 'symbol') {\n          return String(value);\n        }\n        return value;\n      });\n      return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of value `' + String(propValue) + '` ' + ('supplied to `' + componentName + '`, expected one of ' + valuesString + '.'));\n    }\n    return createChainableTypeChecker(validate);\n  }\n\n  function createObjectOfTypeChecker(typeChecker) {\n    function validate(props, propName, componentName, location, propFullName) {\n      if (typeof typeChecker !== 'function') {\n        return new PropTypeError('Property `' + propFullName + '` of component `' + componentName + '` has invalid PropType notation inside objectOf.');\n      }\n      var propValue = props[propName];\n      var propType = getPropType(propValue);\n      if (propType !== 'object') {\n        return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of type ' + ('`' + propType + '` supplied to `' + componentName + '`, expected an object.'));\n      }\n      for (var key in propValue) {\n        if (has(propValue, key)) {\n          var error = typeChecker(propValue, key, componentName, location, propFullName + '.' + key, ReactPropTypesSecret);\n          if (error instanceof Error) {\n            return error;\n          }\n        }\n      }\n      return null;\n    }\n    return createChainableTypeChecker(validate);\n  }\n\n  function createUnionTypeChecker(arrayOfTypeCheckers) {\n    if (!Array.isArray(arrayOfTypeCheckers)) {\n      process.env.NODE_ENV !== 'production' ? printWarning('Invalid argument supplied to oneOfType, expected an instance of array.') : void 0;\n      return emptyFunctionThatReturnsNull;\n    }\n\n    for (var i = 0; i < arrayOfTypeCheckers.length; i++) {\n      var checker = arrayOfTypeCheckers[i];\n      if (typeof checker !== 'function') {\n        printWarning(\n          'Invalid argument supplied to oneOfType. Expected an array of check functions, but ' +\n          'received ' + getPostfixForTypeWarning(checker) + ' at index ' + i + '.'\n        );\n        return emptyFunctionThatReturnsNull;\n      }\n    }\n\n    function validate(props, propName, componentName, location, propFullName) {\n      var expectedTypes = [];\n      for (var i = 0; i < arrayOfTypeCheckers.length; i++) {\n        var checker = arrayOfTypeCheckers[i];\n        var checkerResult = checker(props, propName, componentName, location, propFullName, ReactPropTypesSecret);\n        if (checkerResult == null) {\n          return null;\n        }\n        if (checkerResult.data && has(checkerResult.data, 'expectedType')) {\n          expectedTypes.push(checkerResult.data.expectedType);\n        }\n      }\n      var expectedTypesMessage = (expectedTypes.length > 0) ? ', expected one of type [' + expectedTypes.join(', ') + ']': '';\n      return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` supplied to ' + ('`' + componentName + '`' + expectedTypesMessage + '.'));\n    }\n    return createChainableTypeChecker(validate);\n  }\n\n  function createNodeChecker() {\n    function validate(props, propName, componentName, location, propFullName) {\n      if (!isNode(props[propName])) {\n        return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` supplied to ' + ('`' + componentName + '`, expected a ReactNode.'));\n      }\n      return null;\n    }\n    return createChainableTypeChecker(validate);\n  }\n\n  function invalidValidatorError(componentName, location, propFullName, key, type) {\n    return new PropTypeError(\n      (componentName || 'React class') + ': ' + location + ' type `' + propFullName + '.' + key + '` is invalid; ' +\n      'it must be a function, usually from the `prop-types` package, but received `' + type + '`.'\n    );\n  }\n\n  function createShapeTypeChecker(shapeTypes) {\n    function validate(props, propName, componentName, location, propFullName) {\n      var propValue = props[propName];\n      var propType = getPropType(propValue);\n      if (propType !== 'object') {\n        return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of type `' + propType + '` ' + ('supplied to `' + componentName + '`, expected `object`.'));\n      }\n      for (var key in shapeTypes) {\n        var checker = shapeTypes[key];\n        if (typeof checker !== 'function') {\n          return invalidValidatorError(componentName, location, propFullName, key, getPreciseType(checker));\n        }\n        var error = checker(propValue, key, componentName, location, propFullName + '.' + key, ReactPropTypesSecret);\n        if (error) {\n          return error;\n        }\n      }\n      return null;\n    }\n    return createChainableTypeChecker(validate);\n  }\n\n  function createStrictShapeTypeChecker(shapeTypes) {\n    function validate(props, propName, componentName, location, propFullName) {\n      var propValue = props[propName];\n      var propType = getPropType(propValue);\n      if (propType !== 'object') {\n        return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of type `' + propType + '` ' + ('supplied to `' + componentName + '`, expected `object`.'));\n      }\n      // We need to check all keys in case some are required but missing from props.\n      var allKeys = assign({}, props[propName], shapeTypes);\n      for (var key in allKeys) {\n        var checker = shapeTypes[key];\n        if (has(shapeTypes, key) && typeof checker !== 'function') {\n          return invalidValidatorError(componentName, location, propFullName, key, getPreciseType(checker));\n        }\n        if (!checker) {\n          return new PropTypeError(\n            'Invalid ' + location + ' `' + propFullName + '` key `' + key + '` supplied to `' + componentName + '`.' +\n            '\\nBad object: ' + JSON.stringify(props[propName], null, '  ') +\n            '\\nValid keys: ' + JSON.stringify(Object.keys(shapeTypes), null, '  ')\n          );\n        }\n        var error = checker(propValue, key, componentName, location, propFullName + '.' + key, ReactPropTypesSecret);\n        if (error) {\n          return error;\n        }\n      }\n      return null;\n    }\n\n    return createChainableTypeChecker(validate);\n  }\n\n  function isNode(propValue) {\n    switch (typeof propValue) {\n      case 'number':\n      case 'string':\n      case 'undefined':\n        return true;\n      case 'boolean':\n        return !propValue;\n      case 'object':\n        if (Array.isArray(propValue)) {\n          return propValue.every(isNode);\n        }\n        if (propValue === null || isValidElement(propValue)) {\n          return true;\n        }\n\n        var iteratorFn = getIteratorFn(propValue);\n        if (iteratorFn) {\n          var iterator = iteratorFn.call(propValue);\n          var step;\n          if (iteratorFn !== propValue.entries) {\n            while (!(step = iterator.next()).done) {\n              if (!isNode(step.value)) {\n                return false;\n              }\n            }\n          } else {\n            // Iterator will provide entry [k,v] tuples rather than values.\n            while (!(step = iterator.next()).done) {\n              var entry = step.value;\n              if (entry) {\n                if (!isNode(entry[1])) {\n                  return false;\n                }\n              }\n            }\n          }\n        } else {\n          return false;\n        }\n\n        return true;\n      default:\n        return false;\n    }\n  }\n\n  function isSymbol(propType, propValue) {\n    // Native Symbol.\n    if (propType === 'symbol') {\n      return true;\n    }\n\n    // falsy value can't be a Symbol\n    if (!propValue) {\n      return false;\n    }\n\n    // 19.4.3.5 Symbol.prototype[@@toStringTag] === 'Symbol'\n    if (propValue['@@toStringTag'] === 'Symbol') {\n      return true;\n    }\n\n    // Fallback for non-spec compliant Symbols which are polyfilled.\n    if (typeof Symbol === 'function' && propValue instanceof Symbol) {\n      return true;\n    }\n\n    return false;\n  }\n\n  // Equivalent of `typeof` but with special handling for array and regexp.\n  function getPropType(propValue) {\n    var propType = typeof propValue;\n    if (Array.isArray(propValue)) {\n      return 'array';\n    }\n    if (propValue instanceof RegExp) {\n      // Old webkits (at least until Android 4.0) return 'function' rather than\n      // 'object' for typeof a RegExp. We'll normalize this here so that /bla/\n      // passes PropTypes.object.\n      return 'object';\n    }\n    if (isSymbol(propType, propValue)) {\n      return 'symbol';\n    }\n    return propType;\n  }\n\n  // This handles more types than `getPropType`. Only used for error messages.\n  // See `createPrimitiveTypeChecker`.\n  function getPreciseType(propValue) {\n    if (typeof propValue === 'undefined' || propValue === null) {\n      return '' + propValue;\n    }\n    var propType = getPropType(propValue);\n    if (propType === 'object') {\n      if (propValue instanceof Date) {\n        return 'date';\n      } else if (propValue instanceof RegExp) {\n        return 'regexp';\n      }\n    }\n    return propType;\n  }\n\n  // Returns a string that is postfixed to a warning about an invalid type.\n  // For example, \"undefined\" or \"of type array\"\n  function getPostfixForTypeWarning(value) {\n    var type = getPreciseType(value);\n    switch (type) {\n      case 'array':\n      case 'object':\n        return 'an ' + type;\n      case 'boolean':\n      case 'date':\n      case 'regexp':\n        return 'a ' + type;\n      default:\n        return type;\n    }\n  }\n\n  // Returns class name of the object, if any.\n  function getClassName(propValue) {\n    if (!propValue.constructor || !propValue.constructor.name) {\n      return ANONYMOUS;\n    }\n    return propValue.constructor.name;\n  }\n\n  ReactPropTypes.checkPropTypes = checkPropTypes;\n  ReactPropTypes.resetWarningCache = checkPropTypes.resetWarningCache;\n  ReactPropTypes.PropTypes = ReactPropTypes;\n\n  return ReactPropTypes;\n};\n","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nif (process.env.NODE_ENV !== 'production') {\n  var ReactIs = require('react-is');\n\n  // By explicitly using `prop-types` you are opting into new development behavior.\n  // http://fb.me/prop-types-in-prod\n  var throwOnDirectAccess = true;\n  module.exports = require('./factoryWithTypeCheckers')(ReactIs.isElement, throwOnDirectAccess);\n} else {\n  // By explicitly using `prop-types` you are opting into new production behavior.\n  // http://fb.me/prop-types-in-prod\n  module.exports = require('./factoryWithThrowingShims')();\n}\n","function replaceClassName(origClass, classToRemove) {\n  return origClass.replace(new RegExp(\"(^|\\\\s)\" + classToRemove + \"(?:\\\\s|$)\", 'g'), '$1').replace(/\\s+/g, ' ').replace(/^\\s*|\\s*$/g, '');\n}\n/**\n * Removes a CSS class from a given element.\n * \n * @param element the element\n * @param className the CSS class name\n */\n\n\nexport default function removeClass(element, className) {\n  if (element.classList) {\n    element.classList.remove(className);\n  } else if (typeof element.className === 'string') {\n    element.className = replaceClassName(element.className, className);\n  } else {\n    element.setAttribute('class', replaceClassName(element.className && element.className.baseVal || '', className));\n  }\n}","export default {\n  disabled: false\n};","import PropTypes from 'prop-types';\nexport var timeoutsShape = process.env.NODE_ENV !== 'production' ? PropTypes.oneOfType([PropTypes.number, PropTypes.shape({\n  enter: PropTypes.number,\n  exit: PropTypes.number,\n  appear: PropTypes.number\n}).isRequired]) : null;\nexport var classNamesShape = process.env.NODE_ENV !== 'production' ? PropTypes.oneOfType([PropTypes.string, PropTypes.shape({\n  enter: PropTypes.string,\n  exit: PropTypes.string,\n  active: PropTypes.string\n}), PropTypes.shape({\n  enter: PropTypes.string,\n  enterDone: PropTypes.string,\n  enterActive: PropTypes.string,\n  exit: PropTypes.string,\n  exitDone: PropTypes.string,\n  exitActive: PropTypes.string\n})]) : null;","import React from 'react';\nexport default React.createContext(null);","export var forceReflow = function forceReflow(node) {\n  return node.scrollTop;\n};","import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _inheritsLoose from \"@babel/runtime/helpers/esm/inheritsLoose\";\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport config from './config';\nimport { timeoutsShape } from './utils/PropTypes';\nimport TransitionGroupContext from './TransitionGroupContext';\nimport { forceReflow } from './utils/reflow';\nexport var UNMOUNTED = 'unmounted';\nexport var EXITED = 'exited';\nexport var ENTERING = 'entering';\nexport var ENTERED = 'entered';\nexport var EXITING = 'exiting';\n/**\n * The Transition component lets you describe a transition from one component\n * state to another _over time_ with a simple declarative API. Most commonly\n * it's used to animate the mounting and unmounting of a component, but can also\n * be used to describe in-place transition states as well.\n *\n * ---\n *\n * **Note**: `Transition` is a platform-agnostic base component. If you're using\n * transitions in CSS, you'll probably want to use\n * [`CSSTransition`](https://reactcommunity.org/react-transition-group/css-transition)\n * instead. It inherits all the features of `Transition`, but contains\n * additional features necessary to play nice with CSS transitions (hence the\n * name of the component).\n *\n * ---\n *\n * By default the `Transition` component does not alter the behavior of the\n * component it renders, it only tracks \"enter\" and \"exit\" states for the\n * components. It's up to you to give meaning and effect to those states. For\n * example we can add styles to a component when it enters or exits:\n *\n * ```jsx\n * import { Transition } from 'react-transition-group';\n *\n * const duration = 300;\n *\n * const defaultStyle = {\n *   transition: `opacity ${duration}ms ease-in-out`,\n *   opacity: 0,\n * }\n *\n * const transitionStyles = {\n *   entering: { opacity: 1 },\n *   entered:  { opacity: 1 },\n *   exiting:  { opacity: 0 },\n *   exited:  { opacity: 0 },\n * };\n *\n * const Fade = ({ in: inProp }) => (\n *   <Transition in={inProp} timeout={duration}>\n *     {state => (\n *       <div style={{\n *         ...defaultStyle,\n *         ...transitionStyles[state]\n *       }}>\n *         I'm a fade Transition!\n *       </div>\n *     )}\n *   </Transition>\n * );\n * ```\n *\n * There are 4 main states a Transition can be in:\n *  - `'entering'`\n *  - `'entered'`\n *  - `'exiting'`\n *  - `'exited'`\n *\n * Transition state is toggled via the `in` prop. When `true` the component\n * begins the \"Enter\" stage. During this stage, the component will shift from\n * its current transition state, to `'entering'` for the duration of the\n * transition and then to the `'entered'` stage once it's complete. Let's take\n * the following example (we'll use the\n * [useState](https://reactjs.org/docs/hooks-reference.html#usestate) hook):\n *\n * ```jsx\n * function App() {\n *   const [inProp, setInProp] = useState(false);\n *   return (\n *     <div>\n *       <Transition in={inProp} timeout={500}>\n *         {state => (\n *           // ...\n *         )}\n *       </Transition>\n *       <button onClick={() => setInProp(true)}>\n *         Click to Enter\n *       </button>\n *     </div>\n *   );\n * }\n * ```\n *\n * When the button is clicked the component will shift to the `'entering'` state\n * and stay there for 500ms (the value of `timeout`) before it finally switches\n * to `'entered'`.\n *\n * When `in` is `false` the same thing happens except the state moves from\n * `'exiting'` to `'exited'`.\n */\n\nvar Transition = /*#__PURE__*/function (_React$Component) {\n  _inheritsLoose(Transition, _React$Component);\n\n  function Transition(props, context) {\n    var _this;\n\n    _this = _React$Component.call(this, props, context) || this;\n    var parentGroup = context; // In the context of a TransitionGroup all enters are really appears\n\n    var appear = parentGroup && !parentGroup.isMounting ? props.enter : props.appear;\n    var initialStatus;\n    _this.appearStatus = null;\n\n    if (props.in) {\n      if (appear) {\n        initialStatus = EXITED;\n        _this.appearStatus = ENTERING;\n      } else {\n        initialStatus = ENTERED;\n      }\n    } else {\n      if (props.unmountOnExit || props.mountOnEnter) {\n        initialStatus = UNMOUNTED;\n      } else {\n        initialStatus = EXITED;\n      }\n    }\n\n    _this.state = {\n      status: initialStatus\n    };\n    _this.nextCallback = null;\n    return _this;\n  }\n\n  Transition.getDerivedStateFromProps = function getDerivedStateFromProps(_ref, prevState) {\n    var nextIn = _ref.in;\n\n    if (nextIn && prevState.status === UNMOUNTED) {\n      return {\n        status: EXITED\n      };\n    }\n\n    return null;\n  } // getSnapshotBeforeUpdate(prevProps) {\n  //   let nextStatus = null\n  //   if (prevProps !== this.props) {\n  //     const { status } = this.state\n  //     if (this.props.in) {\n  //       if (status !== ENTERING && status !== ENTERED) {\n  //         nextStatus = ENTERING\n  //       }\n  //     } else {\n  //       if (status === ENTERING || status === ENTERED) {\n  //         nextStatus = EXITING\n  //       }\n  //     }\n  //   }\n  //   return { nextStatus }\n  // }\n  ;\n\n  var _proto = Transition.prototype;\n\n  _proto.componentDidMount = function componentDidMount() {\n    this.updateStatus(true, this.appearStatus);\n  };\n\n  _proto.componentDidUpdate = function componentDidUpdate(prevProps) {\n    var nextStatus = null;\n\n    if (prevProps !== this.props) {\n      var status = this.state.status;\n\n      if (this.props.in) {\n        if (status !== ENTERING && status !== ENTERED) {\n          nextStatus = ENTERING;\n        }\n      } else {\n        if (status === ENTERING || status === ENTERED) {\n          nextStatus = EXITING;\n        }\n      }\n    }\n\n    this.updateStatus(false, nextStatus);\n  };\n\n  _proto.componentWillUnmount = function componentWillUnmount() {\n    this.cancelNextCallback();\n  };\n\n  _proto.getTimeouts = function getTimeouts() {\n    var timeout = this.props.timeout;\n    var exit, enter, appear;\n    exit = enter = appear = timeout;\n\n    if (timeout != null && typeof timeout !== 'number') {\n      exit = timeout.exit;\n      enter = timeout.enter; // TODO: remove fallback for next major\n\n      appear = timeout.appear !== undefined ? timeout.appear : enter;\n    }\n\n    return {\n      exit: exit,\n      enter: enter,\n      appear: appear\n    };\n  };\n\n  _proto.updateStatus = function updateStatus(mounting, nextStatus) {\n    if (mounting === void 0) {\n      mounting = false;\n    }\n\n    if (nextStatus !== null) {\n      // nextStatus will always be ENTERING or EXITING.\n      this.cancelNextCallback();\n\n      if (nextStatus === ENTERING) {\n        if (this.props.unmountOnExit || this.props.mountOnEnter) {\n          var node = this.props.nodeRef ? this.props.nodeRef.current : ReactDOM.findDOMNode(this); // https://github.com/reactjs/react-transition-group/pull/749\n          // With unmountOnExit or mountOnEnter, the enter animation should happen at the transition between `exited` and `entering`.\n          // To make the animation happen,  we have to separate each rendering and avoid being processed as batched.\n\n          if (node) forceReflow(node);\n        }\n\n        this.performEnter(mounting);\n      } else {\n        this.performExit();\n      }\n    } else if (this.props.unmountOnExit && this.state.status === EXITED) {\n      this.setState({\n        status: UNMOUNTED\n      });\n    }\n  };\n\n  _proto.performEnter = function performEnter(mounting) {\n    var _this2 = this;\n\n    var enter = this.props.enter;\n    var appearing = this.context ? this.context.isMounting : mounting;\n\n    var _ref2 = this.props.nodeRef ? [appearing] : [ReactDOM.findDOMNode(this), appearing],\n        maybeNode = _ref2[0],\n        maybeAppearing = _ref2[1];\n\n    var timeouts = this.getTimeouts();\n    var enterTimeout = appearing ? timeouts.appear : timeouts.enter; // no enter animation skip right to ENTERED\n    // if we are mounting and running this it means appear _must_ be set\n\n    if (!mounting && !enter || config.disabled) {\n      this.safeSetState({\n        status: ENTERED\n      }, function () {\n        _this2.props.onEntered(maybeNode);\n      });\n      return;\n    }\n\n    this.props.onEnter(maybeNode, maybeAppearing);\n    this.safeSetState({\n      status: ENTERING\n    }, function () {\n      _this2.props.onEntering(maybeNode, maybeAppearing);\n\n      _this2.onTransitionEnd(enterTimeout, function () {\n        _this2.safeSetState({\n          status: ENTERED\n        }, function () {\n          _this2.props.onEntered(maybeNode, maybeAppearing);\n        });\n      });\n    });\n  };\n\n  _proto.performExit = function performExit() {\n    var _this3 = this;\n\n    var exit = this.props.exit;\n    var timeouts = this.getTimeouts();\n    var maybeNode = this.props.nodeRef ? undefined : ReactDOM.findDOMNode(this); // no exit animation skip right to EXITED\n\n    if (!exit || config.disabled) {\n      this.safeSetState({\n        status: EXITED\n      }, function () {\n        _this3.props.onExited(maybeNode);\n      });\n      return;\n    }\n\n    this.props.onExit(maybeNode);\n    this.safeSetState({\n      status: EXITING\n    }, function () {\n      _this3.props.onExiting(maybeNode);\n\n      _this3.onTransitionEnd(timeouts.exit, function () {\n        _this3.safeSetState({\n          status: EXITED\n        }, function () {\n          _this3.props.onExited(maybeNode);\n        });\n      });\n    });\n  };\n\n  _proto.cancelNextCallback = function cancelNextCallback() {\n    if (this.nextCallback !== null) {\n      this.nextCallback.cancel();\n      this.nextCallback = null;\n    }\n  };\n\n  _proto.safeSetState = function safeSetState(nextState, callback) {\n    // This shouldn't be necessary, but there are weird race conditions with\n    // setState callbacks and unmounting in testing, so always make sure that\n    // we can cancel any pending setState callbacks after we unmount.\n    callback = this.setNextCallback(callback);\n    this.setState(nextState, callback);\n  };\n\n  _proto.setNextCallback = function setNextCallback(callback) {\n    var _this4 = this;\n\n    var active = true;\n\n    this.nextCallback = function (event) {\n      if (active) {\n        active = false;\n        _this4.nextCallback = null;\n        callback(event);\n      }\n    };\n\n    this.nextCallback.cancel = function () {\n      active = false;\n    };\n\n    return this.nextCallback;\n  };\n\n  _proto.onTransitionEnd = function onTransitionEnd(timeout, handler) {\n    this.setNextCallback(handler);\n    var node = this.props.nodeRef ? this.props.nodeRef.current : ReactDOM.findDOMNode(this);\n    var doesNotHaveTimeoutOrListener = timeout == null && !this.props.addEndListener;\n\n    if (!node || doesNotHaveTimeoutOrListener) {\n      setTimeout(this.nextCallback, 0);\n      return;\n    }\n\n    if (this.props.addEndListener) {\n      var _ref3 = this.props.nodeRef ? [this.nextCallback] : [node, this.nextCallback],\n          maybeNode = _ref3[0],\n          maybeNextCallback = _ref3[1];\n\n      this.props.addEndListener(maybeNode, maybeNextCallback);\n    }\n\n    if (timeout != null) {\n      setTimeout(this.nextCallback, timeout);\n    }\n  };\n\n  _proto.render = function render() {\n    var status = this.state.status;\n\n    if (status === UNMOUNTED) {\n      return null;\n    }\n\n    var _this$props = this.props,\n        children = _this$props.children,\n        _in = _this$props.in,\n        _mountOnEnter = _this$props.mountOnEnter,\n        _unmountOnExit = _this$props.unmountOnExit,\n        _appear = _this$props.appear,\n        _enter = _this$props.enter,\n        _exit = _this$props.exit,\n        _timeout = _this$props.timeout,\n        _addEndListener = _this$props.addEndListener,\n        _onEnter = _this$props.onEnter,\n        _onEntering = _this$props.onEntering,\n        _onEntered = _this$props.onEntered,\n        _onExit = _this$props.onExit,\n        _onExiting = _this$props.onExiting,\n        _onExited = _this$props.onExited,\n        _nodeRef = _this$props.nodeRef,\n        childProps = _objectWithoutPropertiesLoose(_this$props, [\"children\", \"in\", \"mountOnEnter\", \"unmountOnExit\", \"appear\", \"enter\", \"exit\", \"timeout\", \"addEndListener\", \"onEnter\", \"onEntering\", \"onEntered\", \"onExit\", \"onExiting\", \"onExited\", \"nodeRef\"]);\n\n    return (\n      /*#__PURE__*/\n      // allows for nested Transitions\n      React.createElement(TransitionGroupContext.Provider, {\n        value: null\n      }, typeof children === 'function' ? children(status, childProps) : React.cloneElement(React.Children.only(children), childProps))\n    );\n  };\n\n  return Transition;\n}(React.Component);\n\nTransition.contextType = TransitionGroupContext;\nTransition.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  /**\n   * A React reference to DOM element that need to transition:\n   * https://stackoverflow.com/a/51127130/4671932\n   *\n   *   - When `nodeRef` prop is used, `node` is not passed to callback functions\n   *      (e.g. `onEnter`) because user already has direct access to the node.\n   *   - When changing `key` prop of `Transition` in a `TransitionGroup` a new\n   *     `nodeRef` need to be provided to `Transition` with changed `key` prop\n   *     (see\n   *     [test/CSSTransition-test.js](https://github.com/reactjs/react-transition-group/blob/13435f897b3ab71f6e19d724f145596f5910581c/test/CSSTransition-test.js#L362-L437)).\n   */\n  nodeRef: PropTypes.shape({\n    current: typeof Element === 'undefined' ? PropTypes.any : function (propValue, key, componentName, location, propFullName, secret) {\n      var value = propValue[key];\n      return PropTypes.instanceOf(value && 'ownerDocument' in value ? value.ownerDocument.defaultView.Element : Element)(propValue, key, componentName, location, propFullName, secret);\n    }\n  }),\n\n  /**\n   * A `function` child can be used instead of a React element. This function is\n   * called with the current transition status (`'entering'`, `'entered'`,\n   * `'exiting'`, `'exited'`), which can be used to apply context\n   * specific props to a component.\n   *\n   * ```jsx\n   * <Transition in={this.state.in} timeout={150}>\n   *   {state => (\n   *     <MyComponent className={`fade fade-${state}`} />\n   *   )}\n   * </Transition>\n   * ```\n   */\n  children: PropTypes.oneOfType([PropTypes.func.isRequired, PropTypes.element.isRequired]).isRequired,\n\n  /**\n   * Show the component; triggers the enter or exit states\n   */\n  in: PropTypes.bool,\n\n  /**\n   * By default the child component is mounted immediately along with\n   * the parent `Transition` component. If you want to \"lazy mount\" the component on the\n   * first `in={true}` you can set `mountOnEnter`. After the first enter transition the component will stay\n   * mounted, even on \"exited\", unless you also specify `unmountOnExit`.\n   */\n  mountOnEnter: PropTypes.bool,\n\n  /**\n   * By default the child component stays mounted after it reaches the `'exited'` state.\n   * Set `unmountOnExit` if you'd prefer to unmount the component after it finishes exiting.\n   */\n  unmountOnExit: PropTypes.bool,\n\n  /**\n   * By default the child component does not perform the enter transition when\n   * it first mounts, regardless of the value of `in`. If you want this\n   * behavior, set both `appear` and `in` to `true`.\n   *\n   * > **Note**: there are no special appear states like `appearing`/`appeared`, this prop\n   * > only adds an additional enter transition. However, in the\n   * > `<CSSTransition>` component that first enter transition does result in\n   * > additional `.appear-*` classes, that way you can choose to style it\n   * > differently.\n   */\n  appear: PropTypes.bool,\n\n  /**\n   * Enable or disable enter transitions.\n   */\n  enter: PropTypes.bool,\n\n  /**\n   * Enable or disable exit transitions.\n   */\n  exit: PropTypes.bool,\n\n  /**\n   * The duration of the transition, in milliseconds.\n   * Required unless `addEndListener` is provided.\n   *\n   * You may specify a single timeout for all transitions:\n   *\n   * ```jsx\n   * timeout={500}\n   * ```\n   *\n   * or individually:\n   *\n   * ```jsx\n   * timeout={{\n   *  appear: 500,\n   *  enter: 300,\n   *  exit: 500,\n   * }}\n   * ```\n   *\n   * - `appear` defaults to the value of `enter`\n   * - `enter` defaults to `0`\n   * - `exit` defaults to `0`\n   *\n   * @type {number | { enter?: number, exit?: number, appear?: number }}\n   */\n  timeout: function timeout(props) {\n    var pt = timeoutsShape;\n    if (!props.addEndListener) pt = pt.isRequired;\n\n    for (var _len = arguments.length, args = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n      args[_key - 1] = arguments[_key];\n    }\n\n    return pt.apply(void 0, [props].concat(args));\n  },\n\n  /**\n   * Add a custom transition end trigger. Called with the transitioning\n   * DOM node and a `done` callback. Allows for more fine grained transition end\n   * logic. Timeouts are still used as a fallback if provided.\n   *\n   * **Note**: when `nodeRef` prop is passed, `node` is not passed.\n   *\n   * ```jsx\n   * addEndListener={(node, done) => {\n   *   // use the css transitionend event to mark the finish of a transition\n   *   node.addEventListener('transitionend', done, false);\n   * }}\n   * ```\n   */\n  addEndListener: PropTypes.func,\n\n  /**\n   * Callback fired before the \"entering\" status is applied. An extra parameter\n   * `isAppearing` is supplied to indicate if the enter stage is occurring on the initial mount\n   *\n   * **Note**: when `nodeRef` prop is passed, `node` is not passed.\n   *\n   * @type Function(node: HtmlElement, isAppearing: bool) -> void\n   */\n  onEnter: PropTypes.func,\n\n  /**\n   * Callback fired after the \"entering\" status is applied. An extra parameter\n   * `isAppearing` is supplied to indicate if the enter stage is occurring on the initial mount\n   *\n   * **Note**: when `nodeRef` prop is passed, `node` is not passed.\n   *\n   * @type Function(node: HtmlElement, isAppearing: bool)\n   */\n  onEntering: PropTypes.func,\n\n  /**\n   * Callback fired after the \"entered\" status is applied. An extra parameter\n   * `isAppearing` is supplied to indicate if the enter stage is occurring on the initial mount\n   *\n   * **Note**: when `nodeRef` prop is passed, `node` is not passed.\n   *\n   * @type Function(node: HtmlElement, isAppearing: bool) -> void\n   */\n  onEntered: PropTypes.func,\n\n  /**\n   * Callback fired before the \"exiting\" status is applied.\n   *\n   * **Note**: when `nodeRef` prop is passed, `node` is not passed.\n   *\n   * @type Function(node: HtmlElement) -> void\n   */\n  onExit: PropTypes.func,\n\n  /**\n   * Callback fired after the \"exiting\" status is applied.\n   *\n   * **Note**: when `nodeRef` prop is passed, `node` is not passed.\n   *\n   * @type Function(node: HtmlElement) -> void\n   */\n  onExiting: PropTypes.func,\n\n  /**\n   * Callback fired after the \"exited\" status is applied.\n   *\n   * **Note**: when `nodeRef` prop is passed, `node` is not passed\n   *\n   * @type Function(node: HtmlElement) -> void\n   */\n  onExited: PropTypes.func\n} : {}; // Name the function so it is clearer in the documentation\n\nfunction noop() {}\n\nTransition.defaultProps = {\n  in: false,\n  mountOnEnter: false,\n  unmountOnExit: false,\n  appear: false,\n  enter: true,\n  exit: true,\n  onEnter: noop,\n  onEntering: noop,\n  onEntered: noop,\n  onExit: noop,\n  onExiting: noop,\n  onExited: noop\n};\nTransition.UNMOUNTED = UNMOUNTED;\nTransition.EXITED = EXITED;\nTransition.ENTERING = ENTERING;\nTransition.ENTERED = ENTERED;\nTransition.EXITING = EXITING;\nexport default Transition;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _inheritsLoose from \"@babel/runtime/helpers/esm/inheritsLoose\";\nimport PropTypes from 'prop-types';\nimport addOneClass from 'dom-helpers/addClass';\nimport removeOneClass from 'dom-helpers/removeClass';\nimport React from 'react';\nimport Transition from './Transition';\nimport { classNamesShape } from './utils/PropTypes';\nimport { forceReflow } from './utils/reflow';\n\nvar _addClass = function addClass(node, classes) {\n  return node && classes && classes.split(' ').forEach(function (c) {\n    return addOneClass(node, c);\n  });\n};\n\nvar removeClass = function removeClass(node, classes) {\n  return node && classes && classes.split(' ').forEach(function (c) {\n    return removeOneClass(node, c);\n  });\n};\n/**\n * A transition component inspired by the excellent\n * [ng-animate](https://docs.angularjs.org/api/ngAnimate) library, you should\n * use it if you're using CSS transitions or animations. It's built upon the\n * [`Transition`](https://reactcommunity.org/react-transition-group/transition)\n * component, so it inherits all of its props.\n *\n * `CSSTransition` applies a pair of class names during the `appear`, `enter`,\n * and `exit` states of the transition. The first class is applied and then a\n * second `*-active` class in order to activate the CSS transition. After the\n * transition, matching `*-done` class names are applied to persist the\n * transition state.\n *\n * ```jsx\n * function App() {\n *   const [inProp, setInProp] = useState(false);\n *   return (\n *     <div>\n *       <CSSTransition in={inProp} timeout={200} classNames=\"my-node\">\n *         <div>\n *           {\"I'll receive my-node-* classes\"}\n *         </div>\n *       </CSSTransition>\n *       <button type=\"button\" onClick={() => setInProp(true)}>\n *         Click to Enter\n *       </button>\n *     </div>\n *   );\n * }\n * ```\n *\n * When the `in` prop is set to `true`, the child component will first receive\n * the class `example-enter`, then the `example-enter-active` will be added in\n * the next tick. `CSSTransition` [forces a\n * reflow](https://github.com/reactjs/react-transition-group/blob/5007303e729a74be66a21c3e2205e4916821524b/src/CSSTransition.js#L208-L215)\n * between before adding the `example-enter-active`. This is an important trick\n * because it allows us to transition between `example-enter` and\n * `example-enter-active` even though they were added immediately one after\n * another. Most notably, this is what makes it possible for us to animate\n * _appearance_.\n *\n * ```css\n * .my-node-enter {\n *   opacity: 0;\n * }\n * .my-node-enter-active {\n *   opacity: 1;\n *   transition: opacity 200ms;\n * }\n * .my-node-exit {\n *   opacity: 1;\n * }\n * .my-node-exit-active {\n *   opacity: 0;\n *   transition: opacity 200ms;\n * }\n * ```\n *\n * `*-active` classes represent which styles you want to animate **to**, so it's\n * important to add `transition` declaration only to them, otherwise transitions\n * might not behave as intended! This might not be obvious when the transitions\n * are symmetrical, i.e. when `*-enter-active` is the same as `*-exit`, like in\n * the example above (minus `transition`), but it becomes apparent in more\n * complex transitions.\n *\n * **Note**: If you're using the\n * [`appear`](http://reactcommunity.org/react-transition-group/transition#Transition-prop-appear)\n * prop, make sure to define styles for `.appear-*` classes as well.\n */\n\n\nvar CSSTransition = /*#__PURE__*/function (_React$Component) {\n  _inheritsLoose(CSSTransition, _React$Component);\n\n  function CSSTransition() {\n    var _this;\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _React$Component.call.apply(_React$Component, [this].concat(args)) || this;\n    _this.appliedClasses = {\n      appear: {},\n      enter: {},\n      exit: {}\n    };\n\n    _this.onEnter = function (maybeNode, maybeAppearing) {\n      var _this$resolveArgument = _this.resolveArguments(maybeNode, maybeAppearing),\n          node = _this$resolveArgument[0],\n          appearing = _this$resolveArgument[1];\n\n      _this.removeClasses(node, 'exit');\n\n      _this.addClass(node, appearing ? 'appear' : 'enter', 'base');\n\n      if (_this.props.onEnter) {\n        _this.props.onEnter(maybeNode, maybeAppearing);\n      }\n    };\n\n    _this.onEntering = function (maybeNode, maybeAppearing) {\n      var _this$resolveArgument2 = _this.resolveArguments(maybeNode, maybeAppearing),\n          node = _this$resolveArgument2[0],\n          appearing = _this$resolveArgument2[1];\n\n      var type = appearing ? 'appear' : 'enter';\n\n      _this.addClass(node, type, 'active');\n\n      if (_this.props.onEntering) {\n        _this.props.onEntering(maybeNode, maybeAppearing);\n      }\n    };\n\n    _this.onEntered = function (maybeNode, maybeAppearing) {\n      var _this$resolveArgument3 = _this.resolveArguments(maybeNode, maybeAppearing),\n          node = _this$resolveArgument3[0],\n          appearing = _this$resolveArgument3[1];\n\n      var type = appearing ? 'appear' : 'enter';\n\n      _this.removeClasses(node, type);\n\n      _this.addClass(node, type, 'done');\n\n      if (_this.props.onEntered) {\n        _this.props.onEntered(maybeNode, maybeAppearing);\n      }\n    };\n\n    _this.onExit = function (maybeNode) {\n      var _this$resolveArgument4 = _this.resolveArguments(maybeNode),\n          node = _this$resolveArgument4[0];\n\n      _this.removeClasses(node, 'appear');\n\n      _this.removeClasses(node, 'enter');\n\n      _this.addClass(node, 'exit', 'base');\n\n      if (_this.props.onExit) {\n        _this.props.onExit(maybeNode);\n      }\n    };\n\n    _this.onExiting = function (maybeNode) {\n      var _this$resolveArgument5 = _this.resolveArguments(maybeNode),\n          node = _this$resolveArgument5[0];\n\n      _this.addClass(node, 'exit', 'active');\n\n      if (_this.props.onExiting) {\n        _this.props.onExiting(maybeNode);\n      }\n    };\n\n    _this.onExited = function (maybeNode) {\n      var _this$resolveArgument6 = _this.resolveArguments(maybeNode),\n          node = _this$resolveArgument6[0];\n\n      _this.removeClasses(node, 'exit');\n\n      _this.addClass(node, 'exit', 'done');\n\n      if (_this.props.onExited) {\n        _this.props.onExited(maybeNode);\n      }\n    };\n\n    _this.resolveArguments = function (maybeNode, maybeAppearing) {\n      return _this.props.nodeRef ? [_this.props.nodeRef.current, maybeNode] // here `maybeNode` is actually `appearing`\n      : [maybeNode, maybeAppearing];\n    };\n\n    _this.getClassNames = function (type) {\n      var classNames = _this.props.classNames;\n      var isStringClassNames = typeof classNames === 'string';\n      var prefix = isStringClassNames && classNames ? classNames + \"-\" : '';\n      var baseClassName = isStringClassNames ? \"\" + prefix + type : classNames[type];\n      var activeClassName = isStringClassNames ? baseClassName + \"-active\" : classNames[type + \"Active\"];\n      var doneClassName = isStringClassNames ? baseClassName + \"-done\" : classNames[type + \"Done\"];\n      return {\n        baseClassName: baseClassName,\n        activeClassName: activeClassName,\n        doneClassName: doneClassName\n      };\n    };\n\n    return _this;\n  }\n\n  var _proto = CSSTransition.prototype;\n\n  _proto.addClass = function addClass(node, type, phase) {\n    var className = this.getClassNames(type)[phase + \"ClassName\"];\n\n    var _this$getClassNames = this.getClassNames('enter'),\n        doneClassName = _this$getClassNames.doneClassName;\n\n    if (type === 'appear' && phase === 'done' && doneClassName) {\n      className += \" \" + doneClassName;\n    } // This is to force a repaint,\n    // which is necessary in order to transition styles when adding a class name.\n\n\n    if (phase === 'active') {\n      if (node) forceReflow(node);\n    }\n\n    if (className) {\n      this.appliedClasses[type][phase] = className;\n\n      _addClass(node, className);\n    }\n  };\n\n  _proto.removeClasses = function removeClasses(node, type) {\n    var _this$appliedClasses$ = this.appliedClasses[type],\n        baseClassName = _this$appliedClasses$.base,\n        activeClassName = _this$appliedClasses$.active,\n        doneClassName = _this$appliedClasses$.done;\n    this.appliedClasses[type] = {};\n\n    if (baseClassName) {\n      removeClass(node, baseClassName);\n    }\n\n    if (activeClassName) {\n      removeClass(node, activeClassName);\n    }\n\n    if (doneClassName) {\n      removeClass(node, doneClassName);\n    }\n  };\n\n  _proto.render = function render() {\n    var _this$props = this.props,\n        _ = _this$props.classNames,\n        props = _objectWithoutPropertiesLoose(_this$props, [\"classNames\"]);\n\n    return /*#__PURE__*/React.createElement(Transition, _extends({}, props, {\n      onEnter: this.onEnter,\n      onEntered: this.onEntered,\n      onEntering: this.onEntering,\n      onExit: this.onExit,\n      onExiting: this.onExiting,\n      onExited: this.onExited\n    }));\n  };\n\n  return CSSTransition;\n}(React.Component);\n\nCSSTransition.defaultProps = {\n  classNames: ''\n};\nCSSTransition.propTypes = process.env.NODE_ENV !== \"production\" ? _extends({}, Transition.propTypes, {\n  /**\n   * The animation classNames applied to the component as it appears, enters,\n   * exits or has finished the transition. A single name can be provided, which\n   * will be suffixed for each stage, e.g. `classNames=\"fade\"` applies:\n   *\n   * - `fade-appear`, `fade-appear-active`, `fade-appear-done`\n   * - `fade-enter`, `fade-enter-active`, `fade-enter-done`\n   * - `fade-exit`, `fade-exit-active`, `fade-exit-done`\n   *\n   * A few details to note about how these classes are applied:\n   *\n   * 1. They are _joined_ with the ones that are already defined on the child\n   *    component, so if you want to add some base styles, you can use\n   *    `className` without worrying that it will be overridden.\n   *\n   * 2. If the transition component mounts with `in={false}`, no classes are\n   *    applied yet. You might be expecting `*-exit-done`, but if you think\n   *    about it, a component cannot finish exiting if it hasn't entered yet.\n   *\n   * 2. `fade-appear-done` and `fade-enter-done` will _both_ be applied. This\n   *    allows you to define different behavior for when appearing is done and\n   *    when regular entering is done, using selectors like\n   *    `.fade-enter-done:not(.fade-appear-done)`. For example, you could apply\n   *    an epic entrance animation when element first appears in the DOM using\n   *    [Animate.css](https://daneden.github.io/animate.css/). Otherwise you can\n   *    simply use `fade-enter-done` for defining both cases.\n   *\n   * Each individual classNames can also be specified independently like:\n   *\n   * ```js\n   * classNames={{\n   *  appear: 'my-appear',\n   *  appearActive: 'my-active-appear',\n   *  appearDone: 'my-done-appear',\n   *  enter: 'my-enter',\n   *  enterActive: 'my-active-enter',\n   *  enterDone: 'my-done-enter',\n   *  exit: 'my-exit',\n   *  exitActive: 'my-active-exit',\n   *  exitDone: 'my-done-exit',\n   * }}\n   * ```\n   *\n   * If you want to set these classes using CSS Modules:\n   *\n   * ```js\n   * import styles from './styles.css';\n   * ```\n   *\n   * you might want to use camelCase in your CSS file, that way could simply\n   * spread them instead of listing them one by one:\n   *\n   * ```js\n   * classNames={{ ...styles }}\n   * ```\n   *\n   * @type {string | {\n   *  appear?: string,\n   *  appearActive?: string,\n   *  appearDone?: string,\n   *  enter?: string,\n   *  enterActive?: string,\n   *  enterDone?: string,\n   *  exit?: string,\n   *  exitActive?: string,\n   *  exitDone?: string,\n   * }}\n   */\n  classNames: classNamesShape,\n\n  /**\n   * A `<Transition>` callback fired immediately after the 'enter' or 'appear' class is\n   * applied.\n   *\n   * **Note**: when `nodeRef` prop is passed, `node` is not passed.\n   *\n   * @type Function(node: HtmlElement, isAppearing: bool)\n   */\n  onEnter: PropTypes.func,\n\n  /**\n   * A `<Transition>` callback fired immediately after the 'enter-active' or\n   * 'appear-active' class is applied.\n   *\n   * **Note**: when `nodeRef` prop is passed, `node` is not passed.\n   *\n   * @type Function(node: HtmlElement, isAppearing: bool)\n   */\n  onEntering: PropTypes.func,\n\n  /**\n   * A `<Transition>` callback fired immediately after the 'enter' or\n   * 'appear' classes are **removed** and the `done` class is added to the DOM node.\n   *\n   * **Note**: when `nodeRef` prop is passed, `node` is not passed.\n   *\n   * @type Function(node: HtmlElement, isAppearing: bool)\n   */\n  onEntered: PropTypes.func,\n\n  /**\n   * A `<Transition>` callback fired immediately after the 'exit' class is\n   * applied.\n   *\n   * **Note**: when `nodeRef` prop is passed, `node` is not passed\n   *\n   * @type Function(node: HtmlElement)\n   */\n  onExit: PropTypes.func,\n\n  /**\n   * A `<Transition>` callback fired immediately after the 'exit-active' is applied.\n   *\n   * **Note**: when `nodeRef` prop is passed, `node` is not passed\n   *\n   * @type Function(node: HtmlElement)\n   */\n  onExiting: PropTypes.func,\n\n  /**\n   * A `<Transition>` callback fired immediately after the 'exit' classes\n   * are **removed** and the `exit-done` class is added to the DOM node.\n   *\n   * **Note**: when `nodeRef` prop is passed, `node` is not passed\n   *\n   * @type Function(node: HtmlElement)\n   */\n  onExited: PropTypes.func\n}) : {};\nexport default CSSTransition;","import hasClass from './hasClass';\n/**\n * Adds a CSS class to a given element.\n * \n * @param element the element\n * @param className the CSS class name\n */\n\nexport default function addClass(element, className) {\n  if (element.classList) element.classList.add(className);else if (!hasClass(element, className)) if (typeof element.className === 'string') element.className = element.className + \" \" + className;else element.setAttribute('class', (element.className && element.className.baseVal || '') + \" \" + className);\n}","/**\n * Checks if a given element has a CSS class.\n * \n * @param element the element\n * @param className the CSS class name\n */\nexport default function hasClass(element, className) {\n  if (element.classList) return !!className && element.classList.contains(className);\n  return (\" \" + (element.className.baseVal || element.className) + \" \").indexOf(\" \" + className + \" \") !== -1;\n}","import { Children, cloneElement, isValidElement } from 'react';\n/**\n * Given `this.props.children`, return an object mapping key to child.\n *\n * @param {*} children `this.props.children`\n * @return {object} Mapping of key to child\n */\n\nexport function getChildMapping(children, mapFn) {\n  var mapper = function mapper(child) {\n    return mapFn && isValidElement(child) ? mapFn(child) : child;\n  };\n\n  var result = Object.create(null);\n  if (children) Children.map(children, function (c) {\n    return c;\n  }).forEach(function (child) {\n    // run the map function here instead so that the key is the computed one\n    result[child.key] = mapper(child);\n  });\n  return result;\n}\n/**\n * When you're adding or removing children some may be added or removed in the\n * same render pass. We want to show *both* since we want to simultaneously\n * animate elements in and out. This function takes a previous set of keys\n * and a new set of keys and merges them with its best guess of the correct\n * ordering. In the future we may expose some of the utilities in\n * ReactMultiChild to make this easy, but for now React itself does not\n * directly have this concept of the union of prevChildren and nextChildren\n * so we implement it here.\n *\n * @param {object} prev prev children as returned from\n * `ReactTransitionChildMapping.getChildMapping()`.\n * @param {object} next next children as returned from\n * `ReactTransitionChildMapping.getChildMapping()`.\n * @return {object} a key set that contains all keys in `prev` and all keys\n * in `next` in a reasonable order.\n */\n\nexport function mergeChildMappings(prev, next) {\n  prev = prev || {};\n  next = next || {};\n\n  function getValueForKey(key) {\n    return key in next ? next[key] : prev[key];\n  } // For each key of `next`, the list of keys to insert before that key in\n  // the combined list\n\n\n  var nextKeysPending = Object.create(null);\n  var pendingKeys = [];\n\n  for (var prevKey in prev) {\n    if (prevKey in next) {\n      if (pendingKeys.length) {\n        nextKeysPending[prevKey] = pendingKeys;\n        pendingKeys = [];\n      }\n    } else {\n      pendingKeys.push(prevKey);\n    }\n  }\n\n  var i;\n  var childMapping = {};\n\n  for (var nextKey in next) {\n    if (nextKeysPending[nextKey]) {\n      for (i = 0; i < nextKeysPending[nextKey].length; i++) {\n        var pendingNextKey = nextKeysPending[nextKey][i];\n        childMapping[nextKeysPending[nextKey][i]] = getValueForKey(pendingNextKey);\n      }\n    }\n\n    childMapping[nextKey] = getValueForKey(nextKey);\n  } // Finally, add the keys which didn't appear before any key in `next`\n\n\n  for (i = 0; i < pendingKeys.length; i++) {\n    childMapping[pendingKeys[i]] = getValueForKey(pendingKeys[i]);\n  }\n\n  return childMapping;\n}\n\nfunction getProp(child, prop, props) {\n  return props[prop] != null ? props[prop] : child.props[prop];\n}\n\nexport function getInitialChildMapping(props, onExited) {\n  return getChildMapping(props.children, function (child) {\n    return cloneElement(child, {\n      onExited: onExited.bind(null, child),\n      in: true,\n      appear: getProp(child, 'appear', props),\n      enter: getProp(child, 'enter', props),\n      exit: getProp(child, 'exit', props)\n    });\n  });\n}\nexport function getNextChildMapping(nextProps, prevChildMapping, onExited) {\n  var nextChildMapping = getChildMapping(nextProps.children);\n  var children = mergeChildMappings(prevChildMapping, nextChildMapping);\n  Object.keys(children).forEach(function (key) {\n    var child = children[key];\n    if (!isValidElement(child)) return;\n    var hasPrev = (key in prevChildMapping);\n    var hasNext = (key in nextChildMapping);\n    var prevChild = prevChildMapping[key];\n    var isLeaving = isValidElement(prevChild) && !prevChild.props.in; // item is new (entering)\n\n    if (hasNext && (!hasPrev || isLeaving)) {\n      // console.log('entering', key)\n      children[key] = cloneElement(child, {\n        onExited: onExited.bind(null, child),\n        in: true,\n        exit: getProp(child, 'exit', nextProps),\n        enter: getProp(child, 'enter', nextProps)\n      });\n    } else if (!hasNext && hasPrev && !isLeaving) {\n      // item is old (exiting)\n      // console.log('leaving', key)\n      children[key] = cloneElement(child, {\n        in: false\n      });\n    } else if (hasNext && hasPrev && isValidElement(prevChild)) {\n      // item hasn't changed transition states\n      // copy over the last transition props;\n      // console.log('unchanged', key)\n      children[key] = cloneElement(child, {\n        onExited: onExited.bind(null, child),\n        in: prevChild.props.in,\n        exit: getProp(child, 'exit', nextProps),\n        enter: getProp(child, 'enter', nextProps)\n      });\n    }\n  });\n  return children;\n}","import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inheritsLoose from \"@babel/runtime/helpers/esm/inheritsLoose\";\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport TransitionGroupContext from './TransitionGroupContext';\nimport { getChildMapping, getInitialChildMapping, getNextChildMapping } from './utils/ChildMapping';\n\nvar values = Object.values || function (obj) {\n  return Object.keys(obj).map(function (k) {\n    return obj[k];\n  });\n};\n\nvar defaultProps = {\n  component: 'div',\n  childFactory: function childFactory(child) {\n    return child;\n  }\n};\n/**\n * The `<TransitionGroup>` component manages a set of transition components\n * (`<Transition>` and `<CSSTransition>`) in a list. Like with the transition\n * components, `<TransitionGroup>` is a state machine for managing the mounting\n * and unmounting of components over time.\n *\n * Consider the example below. As items are removed or added to the TodoList the\n * `in` prop is toggled automatically by the `<TransitionGroup>`.\n *\n * Note that `<TransitionGroup>`  does not define any animation behavior!\n * Exactly _how_ a list item animates is up to the individual transition\n * component. This means you can mix and match animations across different list\n * items.\n */\n\nvar TransitionGroup = /*#__PURE__*/function (_React$Component) {\n  _inheritsLoose(TransitionGroup, _React$Component);\n\n  function TransitionGroup(props, context) {\n    var _this;\n\n    _this = _React$Component.call(this, props, context) || this;\n\n    var handleExited = _this.handleExited.bind(_assertThisInitialized(_this)); // Initial children should all be entering, dependent on appear\n\n\n    _this.state = {\n      contextValue: {\n        isMounting: true\n      },\n      handleExited: handleExited,\n      firstRender: true\n    };\n    return _this;\n  }\n\n  var _proto = TransitionGroup.prototype;\n\n  _proto.componentDidMount = function componentDidMount() {\n    this.mounted = true;\n    this.setState({\n      contextValue: {\n        isMounting: false\n      }\n    });\n  };\n\n  _proto.componentWillUnmount = function componentWillUnmount() {\n    this.mounted = false;\n  };\n\n  TransitionGroup.getDerivedStateFromProps = function getDerivedStateFromProps(nextProps, _ref) {\n    var prevChildMapping = _ref.children,\n        handleExited = _ref.handleExited,\n        firstRender = _ref.firstRender;\n    return {\n      children: firstRender ? getInitialChildMapping(nextProps, handleExited) : getNextChildMapping(nextProps, prevChildMapping, handleExited),\n      firstRender: false\n    };\n  } // node is `undefined` when user provided `nodeRef` prop\n  ;\n\n  _proto.handleExited = function handleExited(child, node) {\n    var currentChildMapping = getChildMapping(this.props.children);\n    if (child.key in currentChildMapping) return;\n\n    if (child.props.onExited) {\n      child.props.onExited(node);\n    }\n\n    if (this.mounted) {\n      this.setState(function (state) {\n        var children = _extends({}, state.children);\n\n        delete children[child.key];\n        return {\n          children: children\n        };\n      });\n    }\n  };\n\n  _proto.render = function render() {\n    var _this$props = this.props,\n        Component = _this$props.component,\n        childFactory = _this$props.childFactory,\n        props = _objectWithoutPropertiesLoose(_this$props, [\"component\", \"childFactory\"]);\n\n    var contextValue = this.state.contextValue;\n    var children = values(this.state.children).map(childFactory);\n    delete props.appear;\n    delete props.enter;\n    delete props.exit;\n\n    if (Component === null) {\n      return /*#__PURE__*/React.createElement(TransitionGroupContext.Provider, {\n        value: contextValue\n      }, children);\n    }\n\n    return /*#__PURE__*/React.createElement(TransitionGroupContext.Provider, {\n      value: contextValue\n    }, /*#__PURE__*/React.createElement(Component, props, children));\n  };\n\n  return TransitionGroup;\n}(React.Component);\n\nTransitionGroup.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  /**\n   * `<TransitionGroup>` renders a `<div>` by default. You can change this\n   * behavior by providing a `component` prop.\n   * If you use React v16+ and would like to avoid a wrapping `<div>` element\n   * you can pass in `component={null}`. This is useful if the wrapping div\n   * borks your css styles.\n   */\n  component: PropTypes.any,\n\n  /**\n   * A set of `<Transition>` components, that are toggled `in` and out as they\n   * leave. the `<TransitionGroup>` will inject specific transition props, so\n   * remember to spread them through if you are wrapping the `<Transition>` as\n   * with our `<Fade>` example.\n   *\n   * While this component is meant for multiple `Transition` or `CSSTransition`\n   * children, sometimes you may want to have a single transition child with\n   * content that you want to be transitioned out and in when you change it\n   * (e.g. routes, images etc.) In that case you can change the `key` prop of\n   * the transition child as you change its content, this will cause\n   * `TransitionGroup` to transition the child out and back in.\n   */\n  children: PropTypes.node,\n\n  /**\n   * A convenience prop that enables or disables appear animations\n   * for all children. Note that specifying this will override any defaults set\n   * on individual children Transitions.\n   */\n  appear: PropTypes.bool,\n\n  /**\n   * A convenience prop that enables or disables enter animations\n   * for all children. Note that specifying this will override any defaults set\n   * on individual children Transitions.\n   */\n  enter: PropTypes.bool,\n\n  /**\n   * A convenience prop that enables or disables exit animations\n   * for all children. Note that specifying this will override any defaults set\n   * on individual children Transitions.\n   */\n  exit: PropTypes.bool,\n\n  /**\n   * You may need to apply reactive updates to a child as it is exiting.\n   * This is generally done by using `cloneElement` however in the case of an exiting\n   * child the element has already been removed and not accessible to the consumer.\n   *\n   * If you do need to update a child as it leaves you can provide a `childFactory`\n   * to wrap every child, even the ones that are leaving.\n   *\n   * @type Function(child: ReactElement) -> ReactElement\n   */\n  childFactory: PropTypes.func\n} : {};\nTransitionGroup.defaultProps = defaultProps;\nexport default TransitionGroup;","import { White } from '@/typings';\r\nimport { cloneElement, FC, memo } from 'react';\r\nimport { CSSTransition, TransitionGroup } from 'react-transition-group';\r\nimport './index.less';\r\n\r\nconst AnimatedSwitch: FC<White.AnimatedSwitchProps> = ({\r\n  children,\r\n  classNames,\r\n  primaryKey,\r\n  timeout = 300,\r\n  ...other\r\n}) => {\r\n  return (\r\n    <TransitionGroup\r\n      childFactory={(child) => cloneElement(child, { classNames })}>\r\n      <CSSTransition\r\n        key={primaryKey}\r\n        timeout={timeout}\r\n        appear\r\n        mountOnEnter\r\n        unmountOnExit={false}\r\n        {...other}>\r\n        {children}\r\n      </CSSTransition>\r\n    </TransitionGroup>\r\n  );\r\n};\r\n\r\nexport default memo(AnimatedSwitch);\r\n","/*\r\n * @Description:\r\n * @Autor: lkx\r\n * @Date: 2022-10-19 09:22:15\r\n * @LastEditors: lkx\r\n * @LastEditTime: 2022-10-19 10:03:55\r\n */\r\nimport { FC, memo } from 'react';\r\nimport './index.less';\r\nexport interface LoadingViewProps {\r\n  className?: string;\r\n  style?: string;\r\n  height?: number;\r\n  width?: number;\r\n  isPage?: boolean;\r\n}\r\n// {/* <div\r\n//       className={`flex flex-col justify-center items-center fullBody ${\r\n//         className ?? (isPage && 'page_loading_body')\r\n//       }`}>\r\n//       <div\r\n//         className=\"la-square-jelly-box\"\r\n//         style={{ height: height ?? 64, width: width ?? 64 }}>\r\n//         <div />\r\n//         <div />\r\n//       </div>\r\n//     </div> */}\r\n\r\nconst LoadingView: FC<LoadingViewProps> = ({\r\n  className,\r\n  width,\r\n  height,\r\n  isPage,\r\n}) => {\r\n  return <div>loading</div>;\r\n};\r\nexport default memo(LoadingView);\r\n","import { useEffect, useRef } from 'react';\r\n\r\nconst useTitle = (title: string) => {\r\n  const oldTitle = useRef(document.title);\r\n  useEffect(() => {\r\n    document.title = title || oldTitle.current;\r\n  }, [title]);\r\n};\r\nexport default useTitle;\r\n","/*\r\n * @Descripttion: 工具类\r\n * @version:\r\n * @Author: 小白\r\n * @Date: 2020-10-04 13:11:40\r\n * @LastEditors: 小白\r\n * @LastEditTime: 2022-02-16 23:53:34\r\n */\r\nexport const setAuth = (auth: string) => {\r\n  window.localStorage.setItem('auth', auth);\r\n};\r\n\r\nexport const getAuth = () => {\r\n  const auth = window.localStorage.getItem('auth');\r\n  return auth || '';\r\n};\r\nexport const getCode = () => {\r\n  return window.location.search\r\n    ? searchObj(window.location.search).code\r\n    : window.location.pathname.split('/')[2];\r\n};\r\n/**\r\n * 获取url参数\r\n * @param search url参数\r\n */\r\nexport const searchObj = (search: string) => {\r\n  const body = JSON.parse(\r\n    '{\"'.concat(\r\n      decodeURIComponent(search.substring(1))\r\n        .replace(/\"/g, '\\\\\"')\r\n        .replace(/&/g, '\",\"')\r\n        .replace(/=/g, '\":\"'),\r\n      '\"}',\r\n    ),\r\n  );\r\n  return body;\r\n};\r\n\r\nexport const treeToList = (list: any[], parents: string | string[]) => {\r\n  let adtaList: any[] = [];\r\n  list.forEach((v) => {\r\n    if (typeof parents === 'string') {\r\n      if (v[parents]) {\r\n        adtaList = [...adtaList, ...treeToList(v[parents], parents)];\r\n      } else {\r\n        adtaList.push(v);\r\n      }\r\n    } else {\r\n      let isHave = false;\r\n      parents.forEach((parent) => {\r\n        if (v[parent]) {\r\n          adtaList = [...adtaList, ...treeToList(v[parent], parents)];\r\n          isHave = true;\r\n        }\r\n      });\r\n      if (!isHave) {\r\n        adtaList.push(v);\r\n      }\r\n    }\r\n  });\r\n  return adtaList;\r\n};\r\n\r\nexport const setWindowHeight = () => {\r\n  const windowWidth = window.innerWidth;\r\n  let windowHeight = window.innerHeight;\r\n  if (typeof windowWidth !== 'number') {\r\n    if (document.compatMode === 'CSS1Compat') {\r\n      windowHeight = document.documentElement.clientHeight;\r\n    } else {\r\n      // @ts-ignore\r\n      windowHeight = window.body.clientHeight;\r\n    }\r\n  }\r\n  document\r\n    .getElementsByTagName('body')[0]\r\n    .style.setProperty('--height-primary', `${windowHeight}px`);\r\n};\r\n","import { White } from '@/typings';\r\nimport { useEffect, useRef } from 'react';\r\nimport { useLocation, useNavigationType, matchPath } from 'react-router-dom';\r\nimport routes, { TabBarList } from './index';\r\n\r\nconst useSwitch = () => {\r\n  const action = useNavigationType();\r\n  const oldMode = useRef<{\r\n    mode: White.SwitchType | undefined;\r\n    path?: string;\r\n    isTab?: boolean;\r\n  }>();\r\n  const location = useLocation();\r\n  const className = useRef('');\r\n  const routeSceneMode = routes.find((v) =>\r\n    matchPath(v.path, location.pathname),\r\n  )?.sceneMode;\r\n  const [activeIndex, oldIndex] = TabBarList.reduce(\r\n    (pre, { path }, index) => {\r\n      if (matchPath(path, location.pathname)) {\r\n        pre[0] = index;\r\n      }\r\n      if (matchPath(path, oldMode.current?.path || '')) {\r\n        pre[1] = index;\r\n      }\r\n      return pre;\r\n    },\r\n    [-1, -1],\r\n  );\r\n  if (activeIndex !== -1 && oldIndex !== -1) {\r\n    className.current =\r\n      activeIndex > oldIndex\r\n        ? `forward-from-${TabBarList[activeIndex].sceneMode || 'right'}`\r\n        : `back-to-${TabBarList[oldIndex].sceneMode || 'right'}`;\r\n  } else {\r\n    if (action === 'PUSH') {\r\n      className.current = `forward-from-${routeSceneMode || 'right'}`;\r\n    } else if (action === 'POP') {\r\n      className.current = `back-to-${oldMode.current?.mode || 'right'}`;\r\n    }\r\n  }\r\n\r\n  useEffect(() => {\r\n    oldMode.current = {\r\n      mode: routeSceneMode,\r\n      path: location.pathname,\r\n    };\r\n  }, [location, routeSceneMode]);\r\n\r\n  return {\r\n    classNames: className.current,\r\n    primaryKey: location.pathname,\r\n    location,\r\n  };\r\n};\r\n\r\nexport default useSwitch;\r\n","/*\r\n * @Description:\r\n * @Autor: lkx\r\n * @Date: 2022-10-19 09:22:15\r\n * @LastEditors: lkx\r\n * @LastEditTime: 2022-10-19 10:09:04\r\n */\r\nimport AnimatedSwitch from '@/components/AnimatedSwitch';\r\nimport LoadingView from '@/components/LoadingView';\r\nimport useTitle from '@/hooks/useTitle';\r\nimport { White } from '@/typings';\r\nimport { treeToList } from '@/utils';\r\nimport { Suspense, useLayoutEffect, useMemo } from 'react';\r\nimport { Route, Routes } from 'react-router-dom';\r\nimport routes from './index';\r\nimport useSwitch from './useSwitch';\r\nconst generateRoute = ({\r\n  routes,\r\n  path,\r\n  component: Component,\r\n  tabBars,\r\n  ...other\r\n}: White.RouteConfig) => (\r\n  <Route path={path} key={path} element={<Component />} {...other}>\r\n    {(routes || tabBars)?.map((v) => generateRoute(v))}\r\n  </Route>\r\n);\r\nlet isStart = false;\r\nconst routeList = treeToList(routes, ['routes', 'tabBars']);\r\nconst handler = (e: any) => {\r\n  e.stopPropagation();\r\n  e.preventDefault();\r\n};\r\nconst RouteRender = () => {\r\n  const { classNames, primaryKey, location } = useSwitch();\r\n  const routesView = useMemo(() => {\r\n    return routes.map((v) => generateRoute(v));\r\n  }, []);\r\n  useLayoutEffect(() => {\r\n    document.removeEventListener('click', handler, true);\r\n  }, []);\r\n  useTitle(routeList.find((v) => v.path === location.pathname)?.title);\r\n  return (\r\n    <AnimatedSwitch\r\n      classNames={classNames}\r\n      primaryKey={primaryKey}\r\n      timeout={6000}\r\n      onEnter={() => {\r\n        if (!isStart) {\r\n          document.addEventListener('click', handler, true);\r\n          isStart = !isStart;\r\n        }\r\n      }}\r\n      onExited={() => {\r\n        if (isStart) {\r\n          document.removeEventListener('click', handler, true);\r\n          isStart = !isStart;\r\n        }\r\n      }}>\r\n      <div className=\"fullPage\">\r\n        <Suspense fallback={<LoadingView />}>\r\n          <Routes location={location}>{routesView}</Routes>\r\n        </Suspense>\r\n      </div>\r\n    </AnimatedSwitch>\r\n  );\r\n};\r\nexport default RouteRender;\r\n","import { unstable_HistoryRouter as Router } from 'react-router-dom';\r\nimport TabBarView from '@/layout/TabBarView';\r\nimport RouteRender from '@/routers/RouteRender';\r\nimport history from '@/utils/history';\r\nconst App = () => {\r\n  return (\r\n    <>\r\n      <Router history={history}>\r\n        <RouteRender />\r\n        <TabBarView />\r\n      </Router>\r\n    </>\r\n  );\r\n};\r\nexport default App;\r\n","/*\r\n * @Description:\r\n * @Autor: lkx\r\n * @Date: 2022-10-19 09:22:15\r\n * @LastEditors: lkx\r\n * @LastEditTime: 2022-10-19 09:28:48\r\n */\r\nimport '@/assets/css/common.less';\r\nimport 'lib-flexible';\r\nimport { StrictMode } from 'react';\r\nimport { render } from 'react-dom';\r\nimport { GlobalProvider } from 'rmox';\r\nimport App from './App';\r\nimport { setWindowHeight } from './utils';\r\nsetWindowHeight();\r\nwindow.onresize = () => {\r\n  setWindowHeight();\r\n};\r\nrender(\r\n  <>\r\n    <GlobalProvider>\r\n      <App />\r\n    </GlobalProvider>\r\n  </>,\r\n  document.getElementById('root'),\r\n);\r\n"],"file":"assets/index.7cfdca59.js"}